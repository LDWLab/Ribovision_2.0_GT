This file contains any messages produced by compilers while
running configure, to aid debugging if configure makes a mistake.

It was created by Infernal configure 1.1.4, which was
generated by GNU Autoconf 2.71.  Invocation command line was

  $ ./configure --disable-option-checking --silent --prefix=/home/RiboVision3/R2DT1_4/rscape --cache-file=/dev/null --srcdir=.

## --------- ##
## Platform. ##
## --------- ##

hostname = apollo2.chemistry.gatech.edu
uname -m = x86_64
uname -r = 4.18.0-477.10.1.el8_8.x86_64
uname -s = Linux
uname -v = #1 SMP Wed Apr 5 13:35:01 EDT 2023

/usr/bin/uname -p = x86_64
/bin/uname -X     = unknown

/bin/arch              = x86_64
/usr/bin/arch -k       = unknown
/usr/convex/getsysinfo = unknown
/usr/bin/hostinfo      = unknown
/bin/machine           = unknown
/usr/bin/oslevel       = unknown
/bin/universe          = unknown

PATH: /sbin/
PATH: /bin/
PATH: /usr/sbin/
PATH: /usr/bin/


## ----------- ##
## Core tests. ##
## ----------- ##

configure:2528: looking for aux files: install-sh config.guess config.sub
configure:2541:  trying ./
configure:2552:   ./install-sh found
configure:2570:   ./config.guess found
configure:2570:   ./config.sub found
configure:2681: Configuring Infernal for your system.
configure:2824: checking build system type
configure:2839: result: x86_64-pc-linux-gnu
configure:2859: checking host system type
configure:2873: result: x86_64-pc-linux-gnu
configure:3075: checking whether to compile using MPI
configure:3082: result: no
configure:3254: checking for gcc
configure:3275: found /bin/gcc
configure:3286: result: gcc
configure:3639: checking for C compiler version
configure:3648: gcc --version >&5
gcc (GCC) 8.5.0 20210514 (Red Hat 8.5.0-16)
Copyright (C) 2018 Free Software Foundation, Inc.
This is free software; see the source for copying conditions.  There is NO
warranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.

configure:3659: $? = 0
configure:3648: gcc -v >&5
Using built-in specs.
COLLECT_GCC=gcc
COLLECT_LTO_WRAPPER=/usr/libexec/gcc/x86_64-redhat-linux/8/lto-wrapper
OFFLOAD_TARGET_NAMES=nvptx-none
OFFLOAD_TARGET_DEFAULT=1
Target: x86_64-redhat-linux
Configured with: ../configure --enable-bootstrap --enable-languages=c,c++,fortran,lto --prefix=/usr --mandir=/usr/share/man --infodir=/usr/share/info --with-bugurl=http://bugzilla.redhat.com/bugzilla --enable-shared --enable-threads=posix --enable-checking=release --enable-multilib --with-system-zlib --enable-__cxa_atexit --disable-libunwind-exceptions --enable-gnu-unique-object --enable-linker-build-id --with-gcc-major-version-only --with-linker-hash-style=gnu --enable-plugin --enable-initfini-array --with-isl --disable-libmpx --enable-offload-targets=nvptx-none --without-cuda-driver --enable-gnu-indirect-function --enable-cet --with-tune=generic --with-arch_32=x86-64 --build=x86_64-redhat-linux
Thread model: posix
gcc version 8.5.0 20210514 (Red Hat 8.5.0-16) (GCC) 
configure:3659: $? = 0
configure:3648: gcc -V >&5
gcc: error: unrecognized command line option '-V'
gcc: fatal error: no input files
compilation terminated.
configure:3659: $? = 1
configure:3648: gcc -qversion >&5
gcc: error: unrecognized command line option '-qversion'; did you mean '--version'?
gcc: fatal error: no input files
compilation terminated.
configure:3659: $? = 1
configure:3648: gcc -version >&5
gcc: error: unrecognized command line option '-version'
gcc: fatal error: no input files
compilation terminated.
configure:3659: $? = 1
configure:3679: checking whether the C compiler works
configure:3701: gcc    conftest.c  >&5
configure:3705: $? = 0
configure:3755: result: yes
configure:3758: checking for C compiler default output file name
configure:3760: result: a.out
configure:3766: checking for suffix of executables
configure:3773: gcc -o conftest    conftest.c  >&5
configure:3777: $? = 0
configure:3800: result: 
configure:3822: checking whether we are cross compiling
configure:3830: gcc -o conftest    conftest.c  >&5
configure:3834: $? = 0
configure:3841: ./conftest
configure:3845: $? = 0
configure:3860: result: no
configure:3865: checking for suffix of object files
configure:3888: gcc -c   conftest.c >&5
configure:3892: $? = 0
configure:3914: result: o
configure:3918: checking whether the compiler supports GNU C
configure:3938: gcc -c   conftest.c >&5
configure:3938: $? = 0
configure:3948: result: yes
configure:3959: checking whether gcc accepts -g
configure:3980: gcc -c -g  conftest.c >&5
configure:3980: $? = 0
configure:4024: result: yes
configure:4044: checking for gcc option to enable C11 features
configure:4059: gcc  -c -g -O2  conftest.c >&5
configure:4059: $? = 0
configure:4077: result: none needed
configure:4371: checking for gcc
configure:4403: result: gcc
configure:4756: checking for C compiler version
configure:4765: gcc --version >&5
gcc (GCC) 8.5.0 20210514 (Red Hat 8.5.0-16)
Copyright (C) 2018 Free Software Foundation, Inc.
This is free software; see the source for copying conditions.  There is NO
warranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.

configure:4776: $? = 0
configure:4765: gcc -v >&5
Using built-in specs.
COLLECT_GCC=gcc
COLLECT_LTO_WRAPPER=/usr/libexec/gcc/x86_64-redhat-linux/8/lto-wrapper
OFFLOAD_TARGET_NAMES=nvptx-none
OFFLOAD_TARGET_DEFAULT=1
Target: x86_64-redhat-linux
Configured with: ../configure --enable-bootstrap --enable-languages=c,c++,fortran,lto --prefix=/usr --mandir=/usr/share/man --infodir=/usr/share/info --with-bugurl=http://bugzilla.redhat.com/bugzilla --enable-shared --enable-threads=posix --enable-checking=release --enable-multilib --with-system-zlib --enable-__cxa_atexit --disable-libunwind-exceptions --enable-gnu-unique-object --enable-linker-build-id --with-gcc-major-version-only --with-linker-hash-style=gnu --enable-plugin --enable-initfini-array --with-isl --disable-libmpx --enable-offload-targets=nvptx-none --without-cuda-driver --enable-gnu-indirect-function --enable-cet --with-tune=generic --with-arch_32=x86-64 --build=x86_64-redhat-linux
Thread model: posix
gcc version 8.5.0 20210514 (Red Hat 8.5.0-16) (GCC) 
configure:4776: $? = 0
configure:4765: gcc -V >&5
gcc: error: unrecognized command line option '-V'
gcc: fatal error: no input files
compilation terminated.
configure:4776: $? = 1
configure:4765: gcc -qversion >&5
gcc: error: unrecognized command line option '-qversion'; did you mean '--version'?
gcc: fatal error: no input files
compilation terminated.
configure:4776: $? = 1
configure:4765: gcc -version >&5
gcc: error: unrecognized command line option '-version'
gcc: fatal error: no input files
compilation terminated.
configure:4776: $? = 1
configure:4780: checking whether the compiler supports GNU C
configure:4810: result: yes
configure:4821: checking whether gcc accepts -g
configure:4886: result: yes
configure:4906: checking for gcc option to enable C11 features
configure:4939: result: none needed
configure:5054: checking how to run the C preprocessor
configure:5080: gcc -E  conftest.c
configure:5080: $? = 0
configure:5095: gcc -E  conftest.c
conftest.c:25:10: fatal error: ac_nonexistent.h: No such file or directory
 #include <ac_nonexistent.h>
          ^~~~~~~~~~~~~~~~~~
compilation terminated.
configure:5095: $? = 1
configure: failed program was:
| /* confdefs.h */
| #define PACKAGE_NAME "Infernal"
| #define PACKAGE_TARNAME "infernal"
| #define PACKAGE_VERSION "1.1.4"
| #define PACKAGE_STRING "Infernal 1.1.4"
| #define PACKAGE_BUGREPORT "eric.nawrocki@nih.gov"
| #define PACKAGE_URL ""
| #define INFERNAL_DATE "Dec 2020"
| #define INFERNAL_COPYRIGHT "Copyright (C) 2020 Howard Hughes Medical Institute."
| #define INFERNAL_LICENSE "Freely distributed under the BSD open source license."
| #define INFERNAL_VERSION "1.1.4"
| #define INFERNAL_URL "http://eddylab.org/infernal/"
| #define HMMER_DATE "Nov 2020"
| #define HMMER_COPYRIGHT "Copyright (C) 2020 Howard Hughes Medical Institute."
| #define HMMER_LICENSE "Freely distributed under the BSD open source license."
| #define HMMER_VERSION "3.3.2"
| #define HMMER_URL "http://hmmer.org/"
| #define EASEL_DATE "Nov 2020"
| #define EASEL_COPYRIGHT "Copyright (C) 2020 Howard Hughes Medical Institute."
| #define EASEL_LICENSE "Freely distributed under the BSD open source license."
| #define EASEL_VERSION "0.48"
| #define EASEL_URL "http://bioeasel.org/"
| #define eslDEBUGLEVEL 0
| /* end confdefs.h.  */
| #include <ac_nonexistent.h>
configure:5122: result: gcc -E
configure:5136: gcc -E  conftest.c
configure:5136: $? = 0
configure:5151: gcc -E  conftest.c
conftest.c:25:10: fatal error: ac_nonexistent.h: No such file or directory
 #include <ac_nonexistent.h>
          ^~~~~~~~~~~~~~~~~~
compilation terminated.
configure:5151: $? = 1
configure: failed program was:
| /* confdefs.h */
| #define PACKAGE_NAME "Infernal"
| #define PACKAGE_TARNAME "infernal"
| #define PACKAGE_VERSION "1.1.4"
| #define PACKAGE_STRING "Infernal 1.1.4"
| #define PACKAGE_BUGREPORT "eric.nawrocki@nih.gov"
| #define PACKAGE_URL ""
| #define INFERNAL_DATE "Dec 2020"
| #define INFERNAL_COPYRIGHT "Copyright (C) 2020 Howard Hughes Medical Institute."
| #define INFERNAL_LICENSE "Freely distributed under the BSD open source license."
| #define INFERNAL_VERSION "1.1.4"
| #define INFERNAL_URL "http://eddylab.org/infernal/"
| #define HMMER_DATE "Nov 2020"
| #define HMMER_COPYRIGHT "Copyright (C) 2020 Howard Hughes Medical Institute."
| #define HMMER_LICENSE "Freely distributed under the BSD open source license."
| #define HMMER_VERSION "3.3.2"
| #define HMMER_URL "http://hmmer.org/"
| #define EASEL_DATE "Nov 2020"
| #define EASEL_COPYRIGHT "Copyright (C) 2020 Howard Hughes Medical Institute."
| #define EASEL_LICENSE "Freely distributed under the BSD open source license."
| #define EASEL_VERSION "0.48"
| #define EASEL_URL "http://bioeasel.org/"
| #define eslDEBUGLEVEL 0
| /* end confdefs.h.  */
| #include <ac_nonexistent.h>
configure:5196: checking for a BSD-compatible install
configure:5269: result: /bin/install -c
configure:5328: checking for ranlib
configure:5349: found /bin/ranlib
configure:5360: result: ranlib
configure:5384: checking for ar
configure:5408: found /bin/ar
configure:5421: result: /bin/ar
configure:5429: checking whether ln -s works
configure:5433: result: yes
configure:5604: checking for a sed that does not truncate output
configure:5674: result: /bin/sed
configure:5680: checking for grep that handles long lines and -e
configure:5744: result: /bin/grep
configure:5749: checking for egrep
configure:5817: result: /bin/grep -E
configure:5982: checking whether gcc is Clang
configure:6009: result: no
configure:6074: checking whether pthreads work with "-pthread" and "-lpthread"
configure:6185: gcc -o conftest -g -O2 -O3 -pthread   conftest.c -lpthread  >&5
configure:6185: $? = 0
configure:6195: result: yes
configure:6318: checking for joinable pthread attribute
configure:6337: gcc -o conftest -g -O2 -O3 -pthread   conftest.c -lpthread  >&5
configure:6337: $? = 0
configure:6346: result: PTHREAD_CREATE_JOINABLE
configure:6359: checking whether more special flags are required for pthreads
configure:6373: result: no
configure:6382: checking for PTHREAD_PRIO_INHERIT
configure:6400: gcc -o conftest -g -O2 -O3 -pthread   conftest.c -lpthread  >&5
configure:6400: $? = 0
configure:6410: result: yes
configure:6623: checking whether gcc can compile our NEON code
configure:6656: gcc -o conftest -g -O2 -O3   conftest.c  >&5
conftest.c:30:10: fatal error: arm_neon.h: No such file or directory
 #include <arm_neon.h>
          ^~~~~~~~~~~~
compilation terminated.
configure:6656: $? = 1
configure: failed program was:
| /* confdefs.h */
| #define PACKAGE_NAME "Infernal"
| #define PACKAGE_TARNAME "infernal"
| #define PACKAGE_VERSION "1.1.4"
| #define PACKAGE_STRING "Infernal 1.1.4"
| #define PACKAGE_BUGREPORT "eric.nawrocki@nih.gov"
| #define PACKAGE_URL ""
| #define INFERNAL_DATE "Dec 2020"
| #define INFERNAL_COPYRIGHT "Copyright (C) 2020 Howard Hughes Medical Institute."
| #define INFERNAL_LICENSE "Freely distributed under the BSD open source license."
| #define INFERNAL_VERSION "1.1.4"
| #define INFERNAL_URL "http://eddylab.org/infernal/"
| #define HMMER_DATE "Nov 2020"
| #define HMMER_COPYRIGHT "Copyright (C) 2020 Howard Hughes Medical Institute."
| #define HMMER_LICENSE "Freely distributed under the BSD open source license."
| #define HMMER_VERSION "3.3.2"
| #define HMMER_URL "http://hmmer.org/"
| #define EASEL_DATE "Nov 2020"
| #define EASEL_COPYRIGHT "Copyright (C) 2020 Howard Hughes Medical Institute."
| #define EASEL_LICENSE "Freely distributed under the BSD open source license."
| #define EASEL_VERSION "0.48"
| #define EASEL_URL "http://bioeasel.org/"
| #define eslDEBUGLEVEL 0
| #define HAVE_PTHREAD_PRIO_INHERIT 1
| #define HAVE_PTHREAD 1
| #define HMMER_THREADS 1
| /* end confdefs.h.  */
| 
| #include <stdint.h>
| #include <arm_neon.h>
| int stub_neon(void) {
|   int32x4_t v1 = vdupq_n_s32(42);
|   int32x4_t v2 = vdupq_n_s32(86);
|   union { int32x4_t v; int32_t x[4]; } v3;
|   v3.v = vaddq_s32(v1, v2);
|   return (int) v3.x[0];
| }
| int main(void) { if (stub_neon() != 128) return 1; else return 0; }
| 
configure:6656: gcc -o conftest -g -O2 -O3 -mfpu=neon   conftest.c  >&5
gcc: error: unrecognized command line option '-mfpu=neon'
configure:6656: $? = 1
configure: failed program was:
| /* confdefs.h */
| #define PACKAGE_NAME "Infernal"
| #define PACKAGE_TARNAME "infernal"
| #define PACKAGE_VERSION "1.1.4"
| #define PACKAGE_STRING "Infernal 1.1.4"
| #define PACKAGE_BUGREPORT "eric.nawrocki@nih.gov"
| #define PACKAGE_URL ""
| #define INFERNAL_DATE "Dec 2020"
| #define INFERNAL_COPYRIGHT "Copyright (C) 2020 Howard Hughes Medical Institute."
| #define INFERNAL_LICENSE "Freely distributed under the BSD open source license."
| #define INFERNAL_VERSION "1.1.4"
| #define INFERNAL_URL "http://eddylab.org/infernal/"
| #define HMMER_DATE "Nov 2020"
| #define HMMER_COPYRIGHT "Copyright (C) 2020 Howard Hughes Medical Institute."
| #define HMMER_LICENSE "Freely distributed under the BSD open source license."
| #define HMMER_VERSION "3.3.2"
| #define HMMER_URL "http://hmmer.org/"
| #define EASEL_DATE "Nov 2020"
| #define EASEL_COPYRIGHT "Copyright (C) 2020 Howard Hughes Medical Institute."
| #define EASEL_LICENSE "Freely distributed under the BSD open source license."
| #define EASEL_VERSION "0.48"
| #define EASEL_URL "http://bioeasel.org/"
| #define eslDEBUGLEVEL 0
| #define HAVE_PTHREAD_PRIO_INHERIT 1
| #define HAVE_PTHREAD 1
| #define HMMER_THREADS 1
| /* end confdefs.h.  */
| 
| #include <stdint.h>
| #include <arm_neon.h>
| int stub_neon(void) {
|   int32x4_t v1 = vdupq_n_s32(42);
|   int32x4_t v2 = vdupq_n_s32(86);
|   union { int32x4_t v; int32_t x[4]; } v3;
|   v3.v = vaddq_s32(v1, v2);
|   return (int) v3.x[0];
| }
| int main(void) { if (stub_neon() != 128) return 1; else return 0; }
| 
configure:6684: gcc -o conftest -g -O2 -O3 -mfpu=neon   conftest.c  >&5
gcc: error: unrecognized command line option '-mfpu=neon'
configure:6684: $? = 1
configure: failed program was:
| /* confdefs.h */
| #define PACKAGE_NAME "Infernal"
| #define PACKAGE_TARNAME "infernal"
| #define PACKAGE_VERSION "1.1.4"
| #define PACKAGE_STRING "Infernal 1.1.4"
| #define PACKAGE_BUGREPORT "eric.nawrocki@nih.gov"
| #define PACKAGE_URL ""
| #define INFERNAL_DATE "Dec 2020"
| #define INFERNAL_COPYRIGHT "Copyright (C) 2020 Howard Hughes Medical Institute."
| #define INFERNAL_LICENSE "Freely distributed under the BSD open source license."
| #define INFERNAL_VERSION "1.1.4"
| #define INFERNAL_URL "http://eddylab.org/infernal/"
| #define HMMER_DATE "Nov 2020"
| #define HMMER_COPYRIGHT "Copyright (C) 2020 Howard Hughes Medical Institute."
| #define HMMER_LICENSE "Freely distributed under the BSD open source license."
| #define HMMER_VERSION "3.3.2"
| #define HMMER_URL "http://hmmer.org/"
| #define EASEL_DATE "Nov 2020"
| #define EASEL_COPYRIGHT "Copyright (C) 2020 Howard Hughes Medical Institute."
| #define EASEL_LICENSE "Freely distributed under the BSD open source license."
| #define EASEL_VERSION "0.48"
| #define EASEL_URL "http://bioeasel.org/"
| #define eslDEBUGLEVEL 0
| #define HAVE_PTHREAD_PRIO_INHERIT 1
| #define HAVE_PTHREAD 1
| #define HMMER_THREADS 1
| /* end confdefs.h.  */
| 
| #include <stdint.h>
| #include <arm_neon.h>
| int main(void) {
|   int16x8_t   a1 = { 1, 2, 8, 3, 4, 5, 6, 7 };
|   int16_t     r1 = vmaxvq_s16(a1); // = 8 : horizontal max
|   uint8x16_t  a2 = { 1, 2, 16, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15 };
|   uint8_t     r2 = vmaxvq_u8(a2);  // = 16 : horizontal max
|   float32x4_t a3 = { 1.0, 2.0, 3.0, 4.0 };
|   float       r3 = vaddvq_f32(a3); // = 10.0 : horizontal sum
|   return 0;
| }
| 
configure:6693: result: no
configure:6753: checking whether gcc can compile our Altivec/VMX code
configure:6785: gcc -o conftest -g -O2 -O3   conftest.c  >&5
conftest.c:29:10: fatal error: altivec.h: No such file or directory
 #include <altivec.h>
          ^~~~~~~~~~~
compilation terminated.
configure:6785: $? = 1
configure: failed program was:
| /* confdefs.h */
| #define PACKAGE_NAME "Infernal"
| #define PACKAGE_TARNAME "infernal"
| #define PACKAGE_VERSION "1.1.4"
| #define PACKAGE_STRING "Infernal 1.1.4"
| #define PACKAGE_BUGREPORT "eric.nawrocki@nih.gov"
| #define PACKAGE_URL ""
| #define INFERNAL_DATE "Dec 2020"
| #define INFERNAL_COPYRIGHT "Copyright (C) 2020 Howard Hughes Medical Institute."
| #define INFERNAL_LICENSE "Freely distributed under the BSD open source license."
| #define INFERNAL_VERSION "1.1.4"
| #define INFERNAL_URL "http://eddylab.org/infernal/"
| #define HMMER_DATE "Nov 2020"
| #define HMMER_COPYRIGHT "Copyright (C) 2020 Howard Hughes Medical Institute."
| #define HMMER_LICENSE "Freely distributed under the BSD open source license."
| #define HMMER_VERSION "3.3.2"
| #define HMMER_URL "http://hmmer.org/"
| #define EASEL_DATE "Nov 2020"
| #define EASEL_COPYRIGHT "Copyright (C) 2020 Howard Hughes Medical Institute."
| #define EASEL_LICENSE "Freely distributed under the BSD open source license."
| #define EASEL_VERSION "0.48"
| #define EASEL_URL "http://bioeasel.org/"
| #define eslDEBUGLEVEL 0
| #define HAVE_PTHREAD_PRIO_INHERIT 1
| #define HAVE_PTHREAD 1
| #define HMMER_THREADS 1
| /* end confdefs.h.  */
| 
| #include <altivec.h>
| #include <stdint.h>
| int stub_vmx(void) {
| vector signed int v1,v2;
| union { vector signed int v; int32_t x[4]; } v3;
| v1   = vec_splat_s32(6);
| v2   = vec_splat_s32(12);
| v3.v = vec_add(v1,v2);
| return (int) v3.x[0];}
| int main(void) { if (stub_vmx() != 18) return 1; else return 0; }
| 
configure:6785: gcc -o conftest -g -O2 -O3 -maltivec   conftest.c  >&5
gcc: error: unrecognized command line option '-maltivec'; did you mean '-mglibc'?
configure:6785: $? = 1
configure: failed program was:
| /* confdefs.h */
| #define PACKAGE_NAME "Infernal"
| #define PACKAGE_TARNAME "infernal"
| #define PACKAGE_VERSION "1.1.4"
| #define PACKAGE_STRING "Infernal 1.1.4"
| #define PACKAGE_BUGREPORT "eric.nawrocki@nih.gov"
| #define PACKAGE_URL ""
| #define INFERNAL_DATE "Dec 2020"
| #define INFERNAL_COPYRIGHT "Copyright (C) 2020 Howard Hughes Medical Institute."
| #define INFERNAL_LICENSE "Freely distributed under the BSD open source license."
| #define INFERNAL_VERSION "1.1.4"
| #define INFERNAL_URL "http://eddylab.org/infernal/"
| #define HMMER_DATE "Nov 2020"
| #define HMMER_COPYRIGHT "Copyright (C) 2020 Howard Hughes Medical Institute."
| #define HMMER_LICENSE "Freely distributed under the BSD open source license."
| #define HMMER_VERSION "3.3.2"
| #define HMMER_URL "http://hmmer.org/"
| #define EASEL_DATE "Nov 2020"
| #define EASEL_COPYRIGHT "Copyright (C) 2020 Howard Hughes Medical Institute."
| #define EASEL_LICENSE "Freely distributed under the BSD open source license."
| #define EASEL_VERSION "0.48"
| #define EASEL_URL "http://bioeasel.org/"
| #define eslDEBUGLEVEL 0
| #define HAVE_PTHREAD_PRIO_INHERIT 1
| #define HAVE_PTHREAD 1
| #define HMMER_THREADS 1
| /* end confdefs.h.  */
| 
| #include <altivec.h>
| #include <stdint.h>
| int stub_vmx(void) {
| vector signed int v1,v2;
| union { vector signed int v; int32_t x[4]; } v3;
| v1   = vec_splat_s32(6);
| v2   = vec_splat_s32(12);
| v3.v = vec_add(v1,v2);
| return (int) v3.x[0];}
| int main(void) { if (stub_vmx() != 18) return 1; else return 0; }
| 
configure:6785: gcc -o conftest -g -O2 -O3 -faltivec   conftest.c  >&5
gcc: error: unrecognized command line option '-faltivec'
configure:6785: $? = 1
configure: failed program was:
| /* confdefs.h */
| #define PACKAGE_NAME "Infernal"
| #define PACKAGE_TARNAME "infernal"
| #define PACKAGE_VERSION "1.1.4"
| #define PACKAGE_STRING "Infernal 1.1.4"
| #define PACKAGE_BUGREPORT "eric.nawrocki@nih.gov"
| #define PACKAGE_URL ""
| #define INFERNAL_DATE "Dec 2020"
| #define INFERNAL_COPYRIGHT "Copyright (C) 2020 Howard Hughes Medical Institute."
| #define INFERNAL_LICENSE "Freely distributed under the BSD open source license."
| #define INFERNAL_VERSION "1.1.4"
| #define INFERNAL_URL "http://eddylab.org/infernal/"
| #define HMMER_DATE "Nov 2020"
| #define HMMER_COPYRIGHT "Copyright (C) 2020 Howard Hughes Medical Institute."
| #define HMMER_LICENSE "Freely distributed under the BSD open source license."
| #define HMMER_VERSION "3.3.2"
| #define HMMER_URL "http://hmmer.org/"
| #define EASEL_DATE "Nov 2020"
| #define EASEL_COPYRIGHT "Copyright (C) 2020 Howard Hughes Medical Institute."
| #define EASEL_LICENSE "Freely distributed under the BSD open source license."
| #define EASEL_VERSION "0.48"
| #define EASEL_URL "http://bioeasel.org/"
| #define eslDEBUGLEVEL 0
| #define HAVE_PTHREAD_PRIO_INHERIT 1
| #define HAVE_PTHREAD 1
| #define HMMER_THREADS 1
| /* end confdefs.h.  */
| 
| #include <altivec.h>
| #include <stdint.h>
| int stub_vmx(void) {
| vector signed int v1,v2;
| union { vector signed int v; int32_t x[4]; } v3;
| v1   = vec_splat_s32(6);
| v2   = vec_splat_s32(12);
| v3.v = vec_add(v1,v2);
| return (int) v3.x[0];}
| int main(void) { if (stub_vmx() != 18) return 1; else return 0; }
| 
configure:6795: result: no
configure:6838: checking whether gcc can compile our SSE code
configure:6870: gcc -o conftest -g -O2 -O3   conftest.c  >&5
configure:6870: $? = 0
configure:6885: result: yes
configure:6926: Activating Intel/AMD SSE vector DP implementation
configure:6960: checking whether _MM_SET_FLUSH_ZERO_MODE is supported
configure:6976: gcc -c -g -O2 -O3   conftest.c >&5
configure:6976: $? = 0
configure:6978: result: yes
configure:6997: checking compiler support --start-group
configure:7012: gcc -o conftest -g -O2 -O3  -Wl,--start-group -Wl,--end-group  conftest.c  >&5
configure:7012: $? = 0
configure:7014: result: yes
configure:7036: checking for gzip
configure:7059: found /bin/gzip
configure:7072: result: /bin/gzip
configure:7097: checking for python3
configure:7120: found /bin/python3
configure:7132: result: /bin/python3
configure:7157: checking for library containing clock_gettime
configure:7187: gcc -o conftest -g -O2 -O3   conftest.c  >&5
configure:7187: $? = 0
configure:7207: result: none required
configure:7227: checking for stdio.h
configure:7227: gcc -c -g -O2 -O3  conftest.c >&5
configure:7227: $? = 0
configure:7227: result: yes
configure:7227: checking for stdlib.h
configure:7227: gcc -c -g -O2 -O3  conftest.c >&5
configure:7227: $? = 0
configure:7227: result: yes
configure:7227: checking for string.h
configure:7227: gcc -c -g -O2 -O3  conftest.c >&5
configure:7227: $? = 0
configure:7227: result: yes
configure:7227: checking for inttypes.h
configure:7227: gcc -c -g -O2 -O3  conftest.c >&5
configure:7227: $? = 0
configure:7227: result: yes
configure:7227: checking for stdint.h
configure:7227: gcc -c -g -O2 -O3  conftest.c >&5
configure:7227: $? = 0
configure:7227: result: yes
configure:7227: checking for strings.h
configure:7227: gcc -c -g -O2 -O3  conftest.c >&5
configure:7227: $? = 0
configure:7227: result: yes
configure:7227: checking for sys/stat.h
configure:7227: gcc -c -g -O2 -O3  conftest.c >&5
configure:7227: $? = 0
configure:7227: result: yes
configure:7227: checking for sys/types.h
configure:7227: gcc -c -g -O2 -O3  conftest.c >&5
configure:7227: $? = 0
configure:7227: result: yes
configure:7227: checking for unistd.h
configure:7227: gcc -c -g -O2 -O3  conftest.c >&5
configure:7227: $? = 0
configure:7227: result: yes
configure:7252: checking for endian.h
configure:7252: gcc -c -g -O2 -O3  conftest.c >&5
configure:7252: $? = 0
configure:7252: result: yes
configure:7258: checking for inttypes.h
configure:7258: result: yes
configure:7264: checking for stdint.h
configure:7264: result: yes
configure:7270: checking for unistd.h
configure:7270: result: yes
configure:7276: checking for sys/types.h
configure:7276: result: yes
configure:7282: checking for netinet/in.h
configure:7282: gcc -c -g -O2 -O3  conftest.c >&5
configure:7282: $? = 0
configure:7282: result: yes
configure:7293: checking for sys/param.h
configure:7293: gcc -c -g -O2 -O3  conftest.c >&5
configure:7293: $? = 0
configure:7293: result: yes
configure:7300: checking for sys/sysctl.h
configure:7300: gcc -c -g -O2 -O3  conftest.c >&5
configure:7300: $? = 0
configure:7300: result: yes
configure:7350: checking for uint8_t
configure:7350: gcc -c -g -O2 -O3  conftest.c >&5
configure:7350: $? = 0
configure:7350: result: yes
configure:7362: checking for uint16_t
configure:7362: gcc -c -g -O2 -O3  conftest.c >&5
configure:7362: $? = 0
configure:7362: result: yes
configure:7372: checking for uint32_t
configure:7372: gcc -c -g -O2 -O3  conftest.c >&5
configure:7372: $? = 0
configure:7372: result: yes
configure:7384: checking for uint64_t
configure:7384: gcc -c -g -O2 -O3  conftest.c >&5
configure:7384: $? = 0
configure:7384: result: yes
configure:7396: checking for off_t
configure:7396: gcc -c -g -O2 -O3  conftest.c >&5
configure:7396: $? = 0
configure:7396: gcc -c -g -O2 -O3  conftest.c >&5
conftest.c: In function 'main':
conftest.c:80:20: error: expected expression before ')' token
 if (sizeof ((off_t)))
                    ^
configure:7396: $? = 1
configure: failed program was:
| /* confdefs.h */
| #define PACKAGE_NAME "Infernal"
| #define PACKAGE_TARNAME "infernal"
| #define PACKAGE_VERSION "1.1.4"
| #define PACKAGE_STRING "Infernal 1.1.4"
| #define PACKAGE_BUGREPORT "eric.nawrocki@nih.gov"
| #define PACKAGE_URL ""
| #define INFERNAL_DATE "Dec 2020"
| #define INFERNAL_COPYRIGHT "Copyright (C) 2020 Howard Hughes Medical Institute."
| #define INFERNAL_LICENSE "Freely distributed under the BSD open source license."
| #define INFERNAL_VERSION "1.1.4"
| #define INFERNAL_URL "http://eddylab.org/infernal/"
| #define HMMER_DATE "Nov 2020"
| #define HMMER_COPYRIGHT "Copyright (C) 2020 Howard Hughes Medical Institute."
| #define HMMER_LICENSE "Freely distributed under the BSD open source license."
| #define HMMER_VERSION "3.3.2"
| #define HMMER_URL "http://hmmer.org/"
| #define EASEL_DATE "Nov 2020"
| #define EASEL_COPYRIGHT "Copyright (C) 2020 Howard Hughes Medical Institute."
| #define EASEL_LICENSE "Freely distributed under the BSD open source license."
| #define EASEL_VERSION "0.48"
| #define EASEL_URL "http://bioeasel.org/"
| #define eslDEBUGLEVEL 0
| #define HAVE_PTHREAD_PRIO_INHERIT 1
| #define HAVE_PTHREAD 1
| #define HMMER_THREADS 1
| #define eslENABLE_SSE 1
| #define HAVE_FLUSH_ZERO_MODE 1
| #define HAVE_GZIP 1
| #define HAVE_STDIO_H 1
| #define HAVE_STDLIB_H 1
| #define HAVE_STRING_H 1
| #define HAVE_INTTYPES_H 1
| #define HAVE_STDINT_H 1
| #define HAVE_STRINGS_H 1
| #define HAVE_SYS_STAT_H 1
| #define HAVE_SYS_TYPES_H 1
| #define HAVE_UNISTD_H 1
| #define STDC_HEADERS 1
| #define HAVE_ENDIAN_H 1
| #define HAVE_INTTYPES_H 1
| #define HAVE_STDINT_H 1
| #define HAVE_UNISTD_H 1
| #define HAVE_SYS_TYPES_H 1
| #define HAVE_NETINET_IN_H 1
| #define HAVE_SYS_PARAM_H 1
| #define HAVE_SYS_SYSCTL_H 1
| /* end confdefs.h.  */
| #include <stddef.h>
| #ifdef HAVE_STDIO_H
| # include <stdio.h>
| #endif
| #ifdef HAVE_STDLIB_H
| # include <stdlib.h>
| #endif
| #ifdef HAVE_STRING_H
| # include <string.h>
| #endif
| #ifdef HAVE_INTTYPES_H
| # include <inttypes.h>
| #endif
| #ifdef HAVE_STDINT_H
| # include <stdint.h>
| #endif
| #ifdef HAVE_STRINGS_H
| # include <strings.h>
| #endif
| #ifdef HAVE_SYS_TYPES_H
| # include <sys/types.h>
| #endif
| #ifdef HAVE_SYS_STAT_H
| # include <sys/stat.h>
| #endif
| #ifdef HAVE_UNISTD_H
| # include <unistd.h>
| #endif
| int
| main (void)
| {
| if (sizeof ((off_t)))
| 	    return 0;
|   ;
|   return 0;
| }
configure:7396: result: yes
configure:7420: checking whether byte ordering is bigendian
configure:7436: gcc -c -g -O2 -O3  conftest.c >&5
conftest.c:50:9: error: unknown type name 'not'
         not a universal capable compiler
         ^~~
conftest.c:50:15: error: expected '=', ',', ';', 'asm' or '__attribute__' before 'universal'
         not a universal capable compiler
               ^~~~~~~~~
conftest.c:50:15: error: unknown type name 'universal'
configure:7436: $? = 1
configure: failed program was:
| /* confdefs.h */
| #define PACKAGE_NAME "Infernal"
| #define PACKAGE_TARNAME "infernal"
| #define PACKAGE_VERSION "1.1.4"
| #define PACKAGE_STRING "Infernal 1.1.4"
| #define PACKAGE_BUGREPORT "eric.nawrocki@nih.gov"
| #define PACKAGE_URL ""
| #define INFERNAL_DATE "Dec 2020"
| #define INFERNAL_COPYRIGHT "Copyright (C) 2020 Howard Hughes Medical Institute."
| #define INFERNAL_LICENSE "Freely distributed under the BSD open source license."
| #define INFERNAL_VERSION "1.1.4"
| #define INFERNAL_URL "http://eddylab.org/infernal/"
| #define HMMER_DATE "Nov 2020"
| #define HMMER_COPYRIGHT "Copyright (C) 2020 Howard Hughes Medical Institute."
| #define HMMER_LICENSE "Freely distributed under the BSD open source license."
| #define HMMER_VERSION "3.3.2"
| #define HMMER_URL "http://hmmer.org/"
| #define EASEL_DATE "Nov 2020"
| #define EASEL_COPYRIGHT "Copyright (C) 2020 Howard Hughes Medical Institute."
| #define EASEL_LICENSE "Freely distributed under the BSD open source license."
| #define EASEL_VERSION "0.48"
| #define EASEL_URL "http://bioeasel.org/"
| #define eslDEBUGLEVEL 0
| #define HAVE_PTHREAD_PRIO_INHERIT 1
| #define HAVE_PTHREAD 1
| #define HMMER_THREADS 1
| #define eslENABLE_SSE 1
| #define HAVE_FLUSH_ZERO_MODE 1
| #define HAVE_GZIP 1
| #define HAVE_STDIO_H 1
| #define HAVE_STDLIB_H 1
| #define HAVE_STRING_H 1
| #define HAVE_INTTYPES_H 1
| #define HAVE_STDINT_H 1
| #define HAVE_STRINGS_H 1
| #define HAVE_SYS_STAT_H 1
| #define HAVE_SYS_TYPES_H 1
| #define HAVE_UNISTD_H 1
| #define STDC_HEADERS 1
| #define HAVE_ENDIAN_H 1
| #define HAVE_INTTYPES_H 1
| #define HAVE_STDINT_H 1
| #define HAVE_UNISTD_H 1
| #define HAVE_SYS_TYPES_H 1
| #define HAVE_NETINET_IN_H 1
| #define HAVE_SYS_PARAM_H 1
| #define HAVE_SYS_SYSCTL_H 1
| /* end confdefs.h.  */
| #ifndef __APPLE_CC__
| 	       not a universal capable compiler
| 	     #endif
| 	     typedef int dummy;
| 
configure:7482: gcc -c -g -O2 -O3  conftest.c >&5
configure:7482: $? = 0
configure:7501: gcc -c -g -O2 -O3  conftest.c >&5
conftest.c: In function 'main':
conftest.c:56:4: error: unknown type name 'not'; did you mean 'ino_t'?
    not big endian
    ^~~
    ino_t
conftest.c:56:12: error: expected '=', ',', ';', 'asm' or '__attribute__' before 'endian'
    not big endian
            ^~~~~~
configure:7501: $? = 1
configure: failed program was:
| /* confdefs.h */
| #define PACKAGE_NAME "Infernal"
| #define PACKAGE_TARNAME "infernal"
| #define PACKAGE_VERSION "1.1.4"
| #define PACKAGE_STRING "Infernal 1.1.4"
| #define PACKAGE_BUGREPORT "eric.nawrocki@nih.gov"
| #define PACKAGE_URL ""
| #define INFERNAL_DATE "Dec 2020"
| #define INFERNAL_COPYRIGHT "Copyright (C) 2020 Howard Hughes Medical Institute."
| #define INFERNAL_LICENSE "Freely distributed under the BSD open source license."
| #define INFERNAL_VERSION "1.1.4"
| #define INFERNAL_URL "http://eddylab.org/infernal/"
| #define HMMER_DATE "Nov 2020"
| #define HMMER_COPYRIGHT "Copyright (C) 2020 Howard Hughes Medical Institute."
| #define HMMER_LICENSE "Freely distributed under the BSD open source license."
| #define HMMER_VERSION "3.3.2"
| #define HMMER_URL "http://hmmer.org/"
| #define EASEL_DATE "Nov 2020"
| #define EASEL_COPYRIGHT "Copyright (C) 2020 Howard Hughes Medical Institute."
| #define EASEL_LICENSE "Freely distributed under the BSD open source license."
| #define EASEL_VERSION "0.48"
| #define EASEL_URL "http://bioeasel.org/"
| #define eslDEBUGLEVEL 0
| #define HAVE_PTHREAD_PRIO_INHERIT 1
| #define HAVE_PTHREAD 1
| #define HMMER_THREADS 1
| #define eslENABLE_SSE 1
| #define HAVE_FLUSH_ZERO_MODE 1
| #define HAVE_GZIP 1
| #define HAVE_STDIO_H 1
| #define HAVE_STDLIB_H 1
| #define HAVE_STRING_H 1
| #define HAVE_INTTYPES_H 1
| #define HAVE_STDINT_H 1
| #define HAVE_STRINGS_H 1
| #define HAVE_SYS_STAT_H 1
| #define HAVE_SYS_TYPES_H 1
| #define HAVE_UNISTD_H 1
| #define STDC_HEADERS 1
| #define HAVE_ENDIAN_H 1
| #define HAVE_INTTYPES_H 1
| #define HAVE_STDINT_H 1
| #define HAVE_UNISTD_H 1
| #define HAVE_SYS_TYPES_H 1
| #define HAVE_NETINET_IN_H 1
| #define HAVE_SYS_PARAM_H 1
| #define HAVE_SYS_SYSCTL_H 1
| /* end confdefs.h.  */
| #include <sys/types.h>
| 		#include <sys/param.h>
| 
| int
| main (void)
| {
| #if BYTE_ORDER != BIG_ENDIAN
| 		 not big endian
| 		#endif
| 
|   ;
|   return 0;
| }
configure:7635: result: no
configure:7736: checking for __attribute__((noreturn))
configure:7758: gcc -o conftest -g -O2 -O3   conftest.c  >&5
configure:7758: $? = 0
configure:7773: result: yes
configure:7804: checking for __attribute__((format))
configure:7826: gcc -o conftest -g -O2 -O3   conftest.c  >&5
configure:7826: $? = 0
configure:7841: result: yes
configure:7859: checking for mkstemp
configure:7859: gcc -o conftest -g -O2 -O3   conftest.c  >&5
configure:7859: $? = 0
configure:7859: result: yes
configure:7866: checking for popen
configure:7866: gcc -o conftest -g -O2 -O3   conftest.c  >&5
configure:7866: $? = 0
configure:7866: result: yes
configure:7873: checking for putenv
configure:7873: gcc -o conftest -g -O2 -O3   conftest.c  >&5
configure:7873: $? = 0
configure:7873: result: yes
configure:7880: checking for strcasecmp
configure:7880: gcc -o conftest -g -O2 -O3   conftest.c  >&5
conftest.c:70:6: warning: conflicting types for built-in function 'strcasecmp' [-Wbuiltin-declaration-mismatch]
 char strcasecmp ();
      ^~~~~~~~~~
configure:7880: $? = 0
configure:7880: result: yes
configure:7887: checking for strsep
configure:7887: gcc -o conftest -g -O2 -O3   conftest.c  >&5
configure:7887: $? = 0
configure:7887: result: yes
configure:7894: checking for times
configure:7894: gcc -o conftest -g -O2 -O3   conftest.c  >&5
configure:7894: $? = 0
configure:7894: result: yes
configure:7901: checking for getpid
configure:7901: gcc -o conftest -g -O2 -O3   conftest.c  >&5
configure:7901: $? = 0
configure:7901: result: yes
configure:7908: checking for sysctl
configure:7908: gcc -o conftest -g -O2 -O3   conftest.c  >&5
configure:7908: $? = 0
configure:7908: result: yes
configure:7915: checking for sysconf
configure:7915: gcc -o conftest -g -O2 -O3   conftest.c  >&5
configure:7915: $? = 0
configure:7915: result: yes
configure:7922: checking for getcwd
configure:7922: gcc -o conftest -g -O2 -O3   conftest.c  >&5
configure:7922: $? = 0
configure:7922: result: yes
configure:7929: checking for chmod
configure:7929: gcc -o conftest -g -O2 -O3   conftest.c  >&5
configure:7929: $? = 0
configure:7929: result: yes
configure:7936: checking for stat
configure:7936: gcc -o conftest -g -O2 -O3   conftest.c  >&5
configure:7936: $? = 0
configure:7936: result: yes
configure:7943: checking for fstat
configure:7943: gcc -o conftest -g -O2 -O3   conftest.c  >&5
configure:7943: $? = 0
configure:7943: result: yes
configure:7950: checking for erfc
configure:7950: gcc -o conftest -g -O2 -O3   conftest.c  >&5
conftest.c:80:6: warning: conflicting types for built-in function 'erfc' [-Wbuiltin-declaration-mismatch]
 char erfc ();
      ^~~~
/tmp/cceiIf4M.o: In function `main':
/home/RiboVision3/R2DT1_4/rscape/lib/infernal/conftest.c:91: undefined reference to `erfc'
collect2: error: ld returned 1 exit status
configure:7950: $? = 1
configure: failed program was:
| /* confdefs.h */
| #define PACKAGE_NAME "Infernal"
| #define PACKAGE_TARNAME "infernal"
| #define PACKAGE_VERSION "1.1.4"
| #define PACKAGE_STRING "Infernal 1.1.4"
| #define PACKAGE_BUGREPORT "eric.nawrocki@nih.gov"
| #define PACKAGE_URL ""
| #define INFERNAL_DATE "Dec 2020"
| #define INFERNAL_COPYRIGHT "Copyright (C) 2020 Howard Hughes Medical Institute."
| #define INFERNAL_LICENSE "Freely distributed under the BSD open source license."
| #define INFERNAL_VERSION "1.1.4"
| #define INFERNAL_URL "http://eddylab.org/infernal/"
| #define HMMER_DATE "Nov 2020"
| #define HMMER_COPYRIGHT "Copyright (C) 2020 Howard Hughes Medical Institute."
| #define HMMER_LICENSE "Freely distributed under the BSD open source license."
| #define HMMER_VERSION "3.3.2"
| #define HMMER_URL "http://hmmer.org/"
| #define EASEL_DATE "Nov 2020"
| #define EASEL_COPYRIGHT "Copyright (C) 2020 Howard Hughes Medical Institute."
| #define EASEL_LICENSE "Freely distributed under the BSD open source license."
| #define EASEL_VERSION "0.48"
| #define EASEL_URL "http://bioeasel.org/"
| #define eslDEBUGLEVEL 0
| #define HAVE_PTHREAD_PRIO_INHERIT 1
| #define HAVE_PTHREAD 1
| #define HMMER_THREADS 1
| #define eslENABLE_SSE 1
| #define HAVE_FLUSH_ZERO_MODE 1
| #define HAVE_GZIP 1
| #define HAVE_STDIO_H 1
| #define HAVE_STDLIB_H 1
| #define HAVE_STRING_H 1
| #define HAVE_INTTYPES_H 1
| #define HAVE_STDINT_H 1
| #define HAVE_STRINGS_H 1
| #define HAVE_SYS_STAT_H 1
| #define HAVE_SYS_TYPES_H 1
| #define HAVE_UNISTD_H 1
| #define STDC_HEADERS 1
| #define HAVE_ENDIAN_H 1
| #define HAVE_INTTYPES_H 1
| #define HAVE_STDINT_H 1
| #define HAVE_UNISTD_H 1
| #define HAVE_SYS_TYPES_H 1
| #define HAVE_NETINET_IN_H 1
| #define HAVE_SYS_PARAM_H 1
| #define HAVE_SYS_SYSCTL_H 1
| #define HAVE_FUNC_ATTRIBUTE_NORETURN 1
| #define HAVE_FUNC_ATTRIBUTE_FORMAT 1
| #define HAVE_MKSTEMP 1
| #define HAVE_POPEN 1
| #define HAVE_PUTENV 1
| #define HAVE_STRCASECMP 1
| #define HAVE_STRSEP 1
| #define HAVE_TIMES 1
| #define HAVE_GETPID 1
| #define HAVE_SYSCTL 1
| #define HAVE_SYSCONF 1
| #define HAVE_GETCWD 1
| #define HAVE_CHMOD 1
| #define HAVE_STAT 1
| #define HAVE_FSTAT 1
| /* end confdefs.h.  */
| /* Define erfc to an innocuous variant, in case <limits.h> declares erfc.
|    For example, HP-UX 11i <limits.h> declares gettimeofday.  */
| #define erfc innocuous_erfc
| 
| /* System header to define __stub macros and hopefully few prototypes,
|    which can conflict with char erfc (); below.  */
| 
| #include <limits.h>
| #undef erfc
| 
| /* Override any GCC internal prototype to avoid an error.
|    Use char because int might match the return type of a GCC
|    builtin and then its argument prototype would still apply.  */
| #ifdef __cplusplus
| extern "C"
| #endif
| char erfc ();
| /* The GNU C library defines this for functions which it implements
|     to always fail with ENOSYS.  Some functions are actually named
|     something starting with __ and the normal name is an alias.  */
| #if defined __stub_erfc || defined __stub___erfc
| choke me
| #endif
| 
| int
| main (void)
| {
| return erfc ();
|   ;
|   return 0;
| }
configure:7950: result: no
configure:7961: checking for ntohs
configure:7961: gcc -o conftest -g -O2 -O3   conftest.c  >&5
configure:7961: $? = 0
configure:7961: result: yes
configure:8016: checking for ntohl
configure:8016: gcc -o conftest -g -O2 -O3   conftest.c  >&5
configure:8016: $? = 0
configure:8016: result: yes
configure:8071: checking for htons
configure:8071: gcc -o conftest -g -O2 -O3   conftest.c  >&5
configure:8071: $? = 0
configure:8071: result: yes
configure:8126: checking for htonl
configure:8126: gcc -o conftest -g -O2 -O3   conftest.c  >&5
configure:8126: $? = 0
configure:8126: result: yes
configure:8178: checking for library containing socket
configure:8208: gcc -o conftest -g -O2 -O3   conftest.c  >&5
configure:8208: $? = 0
configure:8228: result: none required
configure:8237: checking for library containing inet_pton
configure:8267: gcc -o conftest -g -O2 -O3   conftest.c  >&5
configure:8267: $? = 0
configure:8287: result: none required
configure:8297: checking for _LARGEFILE_SOURCE value needed for large files
configure:8317: gcc -o conftest -g -O2 -O3   conftest.c  >&5
configure:8317: $? = 0
configure:8347: result: no
configure:8378: checking for special C compiler options needed for large files
configure:8426: result: no
configure:8432: checking for _FILE_OFFSET_BITS value needed for large files
configure:8458: gcc -c -g -O2 -O3  conftest.c >&5
configure:8458: $? = 0
configure:8492: result: no
configure:8720: creating ./config.status

## ---------------------- ##
## Running config.status. ##
## ---------------------- ##

This file was extended by Infernal config.status 1.1.4, which was
generated by GNU Autoconf 2.71.  Invocation command line was

  CONFIG_FILES    = 
  CONFIG_HEADERS  = 
  CONFIG_LINKS    = 
  CONFIG_COMMANDS = 
  $ ./config.status --quiet

on apollo2.chemistry.gatech.edu

config.status:921: creating Makefile
config.status:921: creating src/Makefile
config.status:921: creating testsuite/Makefile
config.status:921: creating rmark/Makefile
config.status:921: creating documentation/Makefile
config.status:921: creating documentation/man/Makefile
config.status:921: creating documentation/userguide/Makefile
config.status:921: creating src/impl_sse/Makefile
config.status:921: creating documentation/userguide/titlepage.tex
config.status:921: creating documentation/userguide/copyright.tex
config.status:921: creating documentation/man/cmalign.man
config.status:921: creating documentation/man/cmbuild.man
config.status:921: creating documentation/man/cmcalibrate.man
config.status:921: creating documentation/man/cmconvert.man
config.status:921: creating documentation/man/cmemit.man
config.status:921: creating documentation/man/cmfetch.man
config.status:921: creating documentation/man/cmpress.man
config.status:921: creating documentation/man/cmscan.man
config.status:921: creating documentation/man/cmsearch.man
config.status:921: creating documentation/man/cmsearch_dual.man
config.status:921: creating documentation/man/cmstat.man
config.status:921: creating documentation/man/infernal.man
config.status:921: creating documentation/man/sse_cmsearch.man
config.status:921: creating src/config.h

## ---------------- ##
## Cache variables. ##
## ---------------- ##

ac_cv_build=x86_64-pc-linux-gnu
ac_cv_c_bigendian=no
ac_cv_c_compiler_gnu=yes
ac_cv_c_uint16_t=yes
ac_cv_c_uint32_t=yes
ac_cv_c_uint64_t=yes
ac_cv_c_uint8_t=yes
ac_cv_env_CC_set=
ac_cv_env_CC_value=
ac_cv_env_CFLAGS_set=
ac_cv_env_CFLAGS_value=
ac_cv_env_CPPFLAGS_set=
ac_cv_env_CPPFLAGS_value=
ac_cv_env_CPP_set=
ac_cv_env_CPP_value=
ac_cv_env_LDFLAGS_set=
ac_cv_env_LDFLAGS_value=
ac_cv_env_LIBS_set=
ac_cv_env_LIBS_value=
ac_cv_env_MPICC_set=
ac_cv_env_MPICC_value=
ac_cv_env_PIC_CFLAGS_set=
ac_cv_env_PIC_CFLAGS_value=
ac_cv_env_build_alias_set=
ac_cv_env_build_alias_value=
ac_cv_env_host_alias_set=
ac_cv_env_host_alias_value=
ac_cv_env_target_alias_set=
ac_cv_env_target_alias_value=
ac_cv_func_chmod=yes
ac_cv_func_erfc=no
ac_cv_func_fstat=yes
ac_cv_func_getcwd=yes
ac_cv_func_getpid=yes
ac_cv_func_htonl=yes
ac_cv_func_htons=yes
ac_cv_func_mkstemp=yes
ac_cv_func_ntohl=yes
ac_cv_func_ntohs=yes
ac_cv_func_popen=yes
ac_cv_func_putenv=yes
ac_cv_func_stat=yes
ac_cv_func_strcasecmp=yes
ac_cv_func_strsep=yes
ac_cv_func_sysconf=yes
ac_cv_func_sysctl=yes
ac_cv_func_times=yes
ac_cv_header_endian_h=yes
ac_cv_header_inttypes_h=yes
ac_cv_header_netinet_in_h=yes
ac_cv_header_stdint_h=yes
ac_cv_header_stdio_h=yes
ac_cv_header_stdlib_h=yes
ac_cv_header_string_h=yes
ac_cv_header_strings_h=yes
ac_cv_header_sys_param_h=yes
ac_cv_header_sys_stat_h=yes
ac_cv_header_sys_sysctl_h=yes
ac_cv_header_sys_types_h=yes
ac_cv_header_unistd_h=yes
ac_cv_host=x86_64-pc-linux-gnu
ac_cv_objext=o
ac_cv_path_AR=/bin/ar
ac_cv_path_EGREP='/bin/grep -E'
ac_cv_path_GREP=/bin/grep
ac_cv_path_HAVE_GZIP=/bin/gzip
ac_cv_path_PYTHON3=/bin/python3
ac_cv_path_SED=/bin/sed
ac_cv_path_install='/bin/install -c'
ac_cv_prog_CPP='gcc -E'
ac_cv_prog_ac_ct_CC=gcc
ac_cv_prog_ac_ct_RANLIB=ranlib
ac_cv_prog_cc_c11=
ac_cv_prog_cc_g=yes
ac_cv_prog_cc_stdc=
ac_cv_search_clock_gettime='none required'
ac_cv_search_inet_pton='none required'
ac_cv_search_socket='none required'
ac_cv_sys_file_offset_bits=no
ac_cv_sys_largefile_CC=no
ac_cv_sys_largefile_source=no
ac_cv_type_off_t=yes
ax_cv_PTHREAD_CLANG=no
ax_cv_PTHREAD_JOINABLE_ATTR=PTHREAD_CREATE_JOINABLE
ax_cv_PTHREAD_PRIO_INHERIT=yes
ax_cv_PTHREAD_SPECIAL_FLAGS=no
ax_cv_have_func_attribute_format=yes
ax_cv_have_func_attribute_noreturn=yes

## ----------------- ##
## Output variables. ##
## ----------------- ##

AR='/bin/ar'
AVX512_CFLAGS=''
AVX_CFLAGS=''
CC='gcc'
CFLAGS='-g -O2 -O3'
CPP='gcc -E'
CPPFLAGS=''
DEFS='-DHAVE_CONFIG_H'
EASEL_COPYRIGHT='Copyright (C) 2020 Howard Hughes Medical Institute.'
EASEL_DATE='Nov 2020'
EASEL_LICENSE='Freely distributed under the BSD open source license.'
EASEL_URL='http://bioeasel.org/'
EASEL_VERSION='0.48'
ECHO_C=''
ECHO_N='-n'
ECHO_T=''
EGREP='/bin/grep -E'
EXEEXT=''
GREP='/bin/grep'
GROUPHMMERLIBS='-Wl,--start-group -lhmmer -lhmmerimpl -Wl,--end-group'
HAVE_GZIP='/bin/gzip'
HMMERIMPLLIB='impl_sse/libhmmerimpl.a'
HMMER_COPYRIGHT='Copyright (C) 2020 Howard Hughes Medical Institute.'
HMMER_DATE='Nov 2020'
HMMER_ESLDIR='../easel'
HMMER_LICENSE='Freely distributed under the BSD open source license.'
HMMER_SADIR='libdivsufsort'
HMMER_URL='http://hmmer.org/'
HMMER_VERSION='3.3.2'
IMPL_CHOICE='sse'
INFERNAL_COPYRIGHT='Copyright (C) 2020 Howard Hughes Medical Institute.'
INFERNAL_DATE='Dec 2020'
INFERNAL_ESLDIR='../hmmer/easel'
INFERNAL_HMMERDIR='../hmmer'
INFERNAL_IMPLDIR='impl_sse'
INFERNAL_LICENSE='Freely distributed under the BSD open source license.'
INFERNAL_SADIR='../hmmer/libdivsufsort'
INFERNAL_URL='http://eddylab.org/infernal/'
INFERNAL_VERSION='1.1.4'
INSTALL_DATA='${INSTALL} -m 644'
INSTALL_PROGRAM='${INSTALL}'
INSTALL_SCRIPT='${INSTALL}'
LDFLAGS=''
LIBGSL=''
LIBOBJS=''
LIBS=''
LN_S='ln -s'
LTLIBOBJS=''
MPICC=''
MPI_BENCHMARKS=''
MPI_UTESTS=''
NEON_CFLAGS=''
OBJEXT='o'
PACKAGE_BUGREPORT='eric.nawrocki@nih.gov'
PACKAGE_NAME='Infernal'
PACKAGE_STRING='Infernal 1.1.4'
PACKAGE_TARNAME='infernal'
PACKAGE_URL=''
PACKAGE_VERSION='1.1.4'
PATH_SEPARATOR=':'
PIC_CFLAGS=''
PTHREAD_CC='gcc'
PTHREAD_CFLAGS='-pthread'
PTHREAD_CXX=''
PTHREAD_LIBS='-lpthread'
PYTHON3='/bin/python3'
RANLIB='ranlib'
SED='/bin/sed'
SHELL='/bin/sh'
SSE4_CFLAGS=''
SSE_CFLAGS=''
VMX_CFLAGS=''
ac_ct_CC='gcc'
ax_pthread_config=''
bindir='${exec_prefix}/bin'
build='x86_64-pc-linux-gnu'
build_alias=''
build_cpu='x86_64'
build_os='linux-gnu'
build_vendor='pc'
datadir='${datarootdir}'
datarootdir='${prefix}/share'
docdir='${datarootdir}/doc/${PACKAGE_TARNAME}'
dvidir='${docdir}'
exec_prefix='${prefix}'
host='x86_64-pc-linux-gnu'
host_alias=''
host_cpu='x86_64'
host_os='linux-gnu'
host_vendor='pc'
htmldir='${docdir}'
includedir='${prefix}/include'
infodir='${datarootdir}/info'
libdir='${exec_prefix}/lib'
libexecdir='${exec_prefix}/libexec'
localedir='${datarootdir}/locale'
localstatedir='${prefix}/var'
mandir='${datarootdir}/man'
oldincludedir='/usr/include'
pdfdir='${docdir}'
prefix='/home/RiboVision3/R2DT1_4/rscape'
program_transform_name='s,x,x,'
psdir='${docdir}'
runstatedir='${localstatedir}/run'
sbindir='${exec_prefix}/sbin'
sharedstatedir='${prefix}/com'
sysconfdir='${prefix}/etc'
target_alias=''

## ----------- ##
## confdefs.h. ##
## ----------- ##

/* confdefs.h */
#define PACKAGE_NAME "Infernal"
#define PACKAGE_TARNAME "infernal"
#define PACKAGE_VERSION "1.1.4"
#define PACKAGE_STRING "Infernal 1.1.4"
#define PACKAGE_BUGREPORT "eric.nawrocki@nih.gov"
#define PACKAGE_URL ""
#define INFERNAL_DATE "Dec 2020"
#define INFERNAL_COPYRIGHT "Copyright (C) 2020 Howard Hughes Medical Institute."
#define INFERNAL_LICENSE "Freely distributed under the BSD open source license."
#define INFERNAL_VERSION "1.1.4"
#define INFERNAL_URL "http://eddylab.org/infernal/"
#define HMMER_DATE "Nov 2020"
#define HMMER_COPYRIGHT "Copyright (C) 2020 Howard Hughes Medical Institute."
#define HMMER_LICENSE "Freely distributed under the BSD open source license."
#define HMMER_VERSION "3.3.2"
#define HMMER_URL "http://hmmer.org/"
#define EASEL_DATE "Nov 2020"
#define EASEL_COPYRIGHT "Copyright (C) 2020 Howard Hughes Medical Institute."
#define EASEL_LICENSE "Freely distributed under the BSD open source license."
#define EASEL_VERSION "0.48"
#define EASEL_URL "http://bioeasel.org/"
#define eslDEBUGLEVEL 0
#define HAVE_PTHREAD_PRIO_INHERIT 1
#define HAVE_PTHREAD 1
#define HMMER_THREADS 1
#define eslENABLE_SSE 1
#define HAVE_FLUSH_ZERO_MODE 1
#define HAVE_GZIP 1
#define HAVE_STDIO_H 1
#define HAVE_STDLIB_H 1
#define HAVE_STRING_H 1
#define HAVE_INTTYPES_H 1
#define HAVE_STDINT_H 1
#define HAVE_STRINGS_H 1
#define HAVE_SYS_STAT_H 1
#define HAVE_SYS_TYPES_H 1
#define HAVE_UNISTD_H 1
#define STDC_HEADERS 1
#define HAVE_ENDIAN_H 1
#define HAVE_INTTYPES_H 1
#define HAVE_STDINT_H 1
#define HAVE_UNISTD_H 1
#define HAVE_SYS_TYPES_H 1
#define HAVE_NETINET_IN_H 1
#define HAVE_SYS_PARAM_H 1
#define HAVE_SYS_SYSCTL_H 1
#define HAVE_FUNC_ATTRIBUTE_NORETURN 1
#define HAVE_FUNC_ATTRIBUTE_FORMAT 1
#define HAVE_MKSTEMP 1
#define HAVE_POPEN 1
#define HAVE_PUTENV 1
#define HAVE_STRCASECMP 1
#define HAVE_STRSEP 1
#define HAVE_TIMES 1
#define HAVE_GETPID 1
#define HAVE_SYSCTL 1
#define HAVE_SYSCONF 1
#define HAVE_GETCWD 1
#define HAVE_CHMOD 1
#define HAVE_STAT 1
#define HAVE_FSTAT 1
#define HAVE_NTOHS 1
#define HAVE_NTOHL 1
#define HAVE_HTONS 1
#define HAVE_HTONL 1
#define HAVE_FSEEKO 1

configure: exit 0
