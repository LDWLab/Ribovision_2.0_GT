This file contains any messages produced by compilers while
running configure, to aid debugging if configure makes a mistake.

It was created by Infernal configure 1.1.4, which was
generated by GNU Autoconf 2.71.  Invocation command line was

  $ ./configure --disable-option-checking --prefix=/Users/erivas/src/Mysrc/R-scape/versions/rscape/rscape_v2.0 --cache-file=/dev/null --srcdir=.

## --------- ##
## Platform. ##
## --------- ##

hostname = dhcp-10-250-70-214.harvard.edu
uname -m = x86_64
uname -r = 22.6.0
uname -s = Darwin
uname -v = Darwin Kernel Version 22.6.0: Wed Jul  5 22:21:56 PDT 2023; root:xnu-8796.141.3~6/RELEASE_X86_64

/usr/bin/uname -p = i386
/bin/uname -X     = unknown

/bin/arch              = unknown
/usr/bin/arch -k       = unknown
/usr/convex/getsysinfo = unknown
/usr/bin/hostinfo      = Mach kernel version:
	 Darwin Kernel Version 22.6.0: Wed Jul  5 22:21:56 PDT 2023; root:xnu-8796.141.3~6/RELEASE_X86_64
Kernel configured for up to 8 processors.
4 processors are physically available.
8 processors are logically available.
Processor type: x86_64h (Intel x86-64h Haswell)
Processors active: 0 1 2 3 4 5 6 7
Primary memory available: 32.00 gigabytes
Default processor set: 703 tasks, 2828 threads, 8 processors
Load average: 2.72, Mach factor: 5.27
/bin/machine           = unknown
/usr/bin/oslevel       = unknown
/bin/universe          = unknown

PATH: /Users/erivas/anaconda3/bin/
PATH: /Users/erivas/anaconda3/condabin/
PATH: /Library/Frameworks/Python.framework/Versions/3.9/bin/
PATH: /opt/local/bin/
PATH: /opt/local/sbin/
PATH: /Users/erivas/anaconda/bin/
PATH: /usr/local/opt/ruby/bin/
PATH: /Users/erivas/alien-src/x3dna/x3dna-v2.4/bin/
PATH: /Users/erivas/perl5/bin/
PATH: /opt/local/libexec/gnubin/
PATH: /usr/local/bin/
PATH: /System/Cryptexes/App/usr/bin/
PATH: /usr/bin/
PATH: /bin/
PATH: /usr/sbin/
PATH: /sbin/
PATH: /Library/TeX/texbin/
PATH: /Library/Apple/usr/bin/
PATH: /var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/local/bin/
PATH: /var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/bin/
PATH: /var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/appleinternal/bin/
PATH: /usr/local/bin/
PATH: /Users/erivas/anaconda3/bin/
PATH: /usr/bin/
PATH: /Users/erivas/alien-src/go/go1.9/bin/
PATH: /bin/
PATH: /Users/erivas/.local/bin/


## ----------- ##
## Core tests. ##
## ----------- ##

configure:2528: looking for aux files: install-sh config.guess config.sub
configure:2541:  trying ./
configure:2552:   ./install-sh found
configure:2570:   ./config.guess found
configure:2570:   ./config.sub found
configure:2681: Configuring Infernal for your system.
configure:2824: checking build system type
configure:2839: result: x86_64-apple-darwin22.6.0
configure:2859: checking host system type
configure:2873: result: x86_64-apple-darwin22.6.0
configure:3075: checking whether to compile using MPI
configure:3082: result: no
configure:3254: checking for gcc
configure:3275: found /usr/bin/gcc
configure:3286: result: gcc
configure:3639: checking for C compiler version
configure:3648: gcc --version >&5
Apple clang version 11.0.3 (clang-1103.0.32.62)
Target: x86_64-apple-darwin22.6.0
Thread model: posix
InstalledDir: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin
Configured with: --prefix=/Applications/Xcode.app/Contents/Developer/usr --with-gxx-include-dir=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/c++/4.2.1
configure:3659: $? = 0
configure:3648: gcc -v >&5
Configured with: --prefix=/Applications/Xcode.app/Contents/Developer/usr --with-gxx-include-dir=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/c++/4.2.1
Apple clang version 11.0.3 (clang-1103.0.32.62)
Target: x86_64-apple-darwin22.6.0
Thread model: posix
InstalledDir: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin
configure:3659: $? = 0
configure:3648: gcc -V >&5
clang: error: unsupported option '-V -Wno-objc-signed-char-bool-implicit-int-conversion'
clang: error: no input files
configure:3659: $? = 1
configure:3648: gcc -qversion >&5
clang: error: unknown argument '-qversion'; did you mean '--version'?
clang: error: no input files
configure:3659: $? = 1
configure:3648: gcc -version >&5
clang: error: unknown argument '-version'; did you mean '--version'?
clang: error: no input files
configure:3659: $? = 1
configure:3679: checking whether the C compiler works
configure:3701: gcc    conftest.c  >&5
configure:3705: $? = 0
configure:3755: result: yes
configure:3758: checking for C compiler default output file name
configure:3760: result: a.out
configure:3766: checking for suffix of executables
configure:3773: gcc -o conftest    conftest.c  >&5
configure:3777: $? = 0
configure:3800: result: 
configure:3822: checking whether we are cross compiling
configure:3830: gcc -o conftest    conftest.c  >&5
configure:3834: $? = 0
configure:3841: ./conftest
configure:3845: $? = 0
configure:3860: result: no
configure:3865: checking for suffix of object files
configure:3888: gcc -c   conftest.c >&5
configure:3892: $? = 0
configure:3914: result: o
configure:3918: checking whether the compiler supports GNU C
configure:3938: gcc -c   conftest.c >&5
configure:3938: $? = 0
configure:3948: result: yes
configure:3959: checking whether gcc accepts -g
configure:3980: gcc -c -g  conftest.c >&5
configure:3980: $? = 0
configure:4024: result: yes
configure:4044: checking for gcc option to enable C11 features
configure:4059: gcc  -c -g -O2  conftest.c >&5
configure:4059: $? = 0
configure:4077: result: none needed
configure:4371: checking for gcc
configure:4403: result: gcc
configure:4756: checking for C compiler version
configure:4765: gcc --version >&5
Apple clang version 11.0.3 (clang-1103.0.32.62)
Target: x86_64-apple-darwin22.6.0
Thread model: posix
InstalledDir: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin
Configured with: --prefix=/Applications/Xcode.app/Contents/Developer/usr --with-gxx-include-dir=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/c++/4.2.1
configure:4776: $? = 0
configure:4765: gcc -v >&5
Configured with: --prefix=/Applications/Xcode.app/Contents/Developer/usr --with-gxx-include-dir=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/c++/4.2.1
Apple clang version 11.0.3 (clang-1103.0.32.62)
Target: x86_64-apple-darwin22.6.0
Thread model: posix
InstalledDir: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin
configure:4776: $? = 0
configure:4765: gcc -V >&5
clang: error: unsupported option '-V -Wno-objc-signed-char-bool-implicit-int-conversion'
clang: error: no input files
configure:4776: $? = 1
configure:4765: gcc -qversion >&5
clang: error: unknown argument '-qversion'; did you mean '--version'?
clang: error: no input files
configure:4776: $? = 1
configure:4765: gcc -version >&5
clang: error: unknown argument '-version'; did you mean '--version'?
clang: error: no input files
configure:4776: $? = 1
configure:4780: checking whether the compiler supports GNU C
configure:4810: result: yes
configure:4821: checking whether gcc accepts -g
configure:4886: result: yes
configure:4906: checking for gcc option to enable C11 features
configure:4939: result: none needed
configure:5054: checking how to run the C preprocessor
configure:5080: gcc -E  conftest.c
configure:5080: $? = 0
configure:5095: gcc -E  conftest.c
conftest.c:25:10: fatal error: 'ac_nonexistent.h' file not found
#include <ac_nonexistent.h>
         ^~~~~~~~~~~~~~~~~~
1 error generated.
configure:5095: $? = 1
configure: failed program was:
| /* confdefs.h */
| #define PACKAGE_NAME "Infernal"
| #define PACKAGE_TARNAME "infernal"
| #define PACKAGE_VERSION "1.1.4"
| #define PACKAGE_STRING "Infernal 1.1.4"
| #define PACKAGE_BUGREPORT "eric.nawrocki@nih.gov"
| #define PACKAGE_URL ""
| #define INFERNAL_DATE "Dec 2020"
| #define INFERNAL_COPYRIGHT "Copyright (C) 2020 Howard Hughes Medical Institute."
| #define INFERNAL_LICENSE "Freely distributed under the BSD open source license."
| #define INFERNAL_VERSION "1.1.4"
| #define INFERNAL_URL "http://eddylab.org/infernal/"
| #define HMMER_DATE "Nov 2020"
| #define HMMER_COPYRIGHT "Copyright (C) 2020 Howard Hughes Medical Institute."
| #define HMMER_LICENSE "Freely distributed under the BSD open source license."
| #define HMMER_VERSION "3.3.2"
| #define HMMER_URL "http://hmmer.org/"
| #define EASEL_DATE "Nov 2020"
| #define EASEL_COPYRIGHT "Copyright (C) 2020 Howard Hughes Medical Institute."
| #define EASEL_LICENSE "Freely distributed under the BSD open source license."
| #define EASEL_VERSION "0.48"
| #define EASEL_URL "http://bioeasel.org/"
| #define eslDEBUGLEVEL 0
| /* end confdefs.h.  */
| #include <ac_nonexistent.h>
configure:5122: result: gcc -E
configure:5136: gcc -E  conftest.c
configure:5136: $? = 0
configure:5151: gcc -E  conftest.c
conftest.c:25:10: fatal error: 'ac_nonexistent.h' file not found
#include <ac_nonexistent.h>
         ^~~~~~~~~~~~~~~~~~
1 error generated.
configure:5151: $? = 1
configure: failed program was:
| /* confdefs.h */
| #define PACKAGE_NAME "Infernal"
| #define PACKAGE_TARNAME "infernal"
| #define PACKAGE_VERSION "1.1.4"
| #define PACKAGE_STRING "Infernal 1.1.4"
| #define PACKAGE_BUGREPORT "eric.nawrocki@nih.gov"
| #define PACKAGE_URL ""
| #define INFERNAL_DATE "Dec 2020"
| #define INFERNAL_COPYRIGHT "Copyright (C) 2020 Howard Hughes Medical Institute."
| #define INFERNAL_LICENSE "Freely distributed under the BSD open source license."
| #define INFERNAL_VERSION "1.1.4"
| #define INFERNAL_URL "http://eddylab.org/infernal/"
| #define HMMER_DATE "Nov 2020"
| #define HMMER_COPYRIGHT "Copyright (C) 2020 Howard Hughes Medical Institute."
| #define HMMER_LICENSE "Freely distributed under the BSD open source license."
| #define HMMER_VERSION "3.3.2"
| #define HMMER_URL "http://hmmer.org/"
| #define EASEL_DATE "Nov 2020"
| #define EASEL_COPYRIGHT "Copyright (C) 2020 Howard Hughes Medical Institute."
| #define EASEL_LICENSE "Freely distributed under the BSD open source license."
| #define EASEL_VERSION "0.48"
| #define EASEL_URL "http://bioeasel.org/"
| #define eslDEBUGLEVEL 0
| /* end confdefs.h.  */
| #include <ac_nonexistent.h>
configure:5196: checking for a BSD-compatible install
configure:5269: result: /usr/bin/install -c
configure:5328: checking for ranlib
configure:5349: found /usr/bin/ranlib
configure:5360: result: ranlib
configure:5384: checking for ar
configure:5408: found /usr/bin/ar
configure:5421: result: /usr/bin/ar
configure:5429: checking whether ln -s works
configure:5433: result: yes
configure:5604: checking for a sed that does not truncate output
configure:5674: result: /usr/bin/sed
configure:5680: checking for grep that handles long lines and -e
configure:5744: result: /usr/bin/grep
configure:5749: checking for egrep
configure:5817: result: /usr/bin/grep -E
configure:5982: checking whether gcc is Clang
configure:6009: result: yes
configure:6074: checking whether pthreads work with "-pthread" and "-lpthread"
configure:6185: gcc -o conftest -g -O2 -O3 -pthread   conftest.c -lpthread  >&5
configure:6185: $? = 0
configure:6195: result: yes
configure:6244: checking whether Clang needs flag to prevent "argument unused" warning when linking with -pthread
configure:6271: gcc -o conftest -Werror -Wunknown-warning-option  -pthread -g -O2 -O3   conftest.c  >&5
configure:6271: $? = 0
configure:6278: (gcc -c -Werror -Wunknown-warning-option  -pthread -g -O2 -O3  conftest.c >&5) && (echo ==== >&5) && (gcc -o conftest -Werror -Wunknown-warning-option  -pthread -g -O2 -O3   conftest.o  >&5)
====
configure:6278: $? = 0
configure:6298: result: no
configure:6318: checking for joinable pthread attribute
configure:6337: gcc -o conftest -g -O2 -O3 -pthread   conftest.c -lpthread  >&5
configure:6337: $? = 0
configure:6346: result: PTHREAD_CREATE_JOINABLE
configure:6359: checking whether more special flags are required for pthreads
configure:6373: result: no
configure:6382: checking for PTHREAD_PRIO_INHERIT
configure:6400: gcc -o conftest -g -O2 -O3 -pthread   conftest.c -lpthread  >&5
configure:6400: $? = 0
configure:6410: result: yes
configure:6623: checking whether gcc can compile our NEON code
configure:6656: gcc -o conftest -g -O2 -O3   conftest.c  >&5
In file included from conftest.c:30:
/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/clang/11.0.3/include/arm_neon.h:28:2: error: "NEON support not enabled"
#error "NEON support not enabled"
 ^
/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/clang/11.0.3/include/arm_neon.h:48:24: error: 'neon_vector_type' attribute is not supported for this target
typedef __attribute__((neon_vector_type(8))) int8_t int8x8_t;
                       ^
/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/clang/11.0.3/include/arm_neon.h:49:24: error: 'neon_vector_type' attribute is not supported for this target
typedef __attribute__((neon_vector_type(16))) int8_t int8x16_t;
                       ^
/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/clang/11.0.3/include/arm_neon.h:50:24: error: 'neon_vector_type' attribute is not supported for this target
typedef __attribute__((neon_vector_type(4))) int16_t int16x4_t;
                       ^
/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/clang/11.0.3/include/arm_neon.h:51:24: error: 'neon_vector_type' attribute is not supported for this target
typedef __attribute__((neon_vector_type(8))) int16_t int16x8_t;
                       ^
/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/clang/11.0.3/include/arm_neon.h:52:24: error: 'neon_vector_type' attribute is not supported for this target
typedef __attribute__((neon_vector_type(2))) int32_t int32x2_t;
                       ^
/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/clang/11.0.3/include/arm_neon.h:53:24: error: 'neon_vector_type' attribute is not supported for this target
typedef __attribute__((neon_vector_type(4))) int32_t int32x4_t;
                       ^
/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/clang/11.0.3/include/arm_neon.h:54:24: error: 'neon_vector_type' attribute is not supported for this target
typedef __attribute__((neon_vector_type(1))) int64_t int64x1_t;
                       ^
/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/clang/11.0.3/include/arm_neon.h:55:24: error: 'neon_vector_type' attribute is not supported for this target
typedef __attribute__((neon_vector_type(2))) int64_t int64x2_t;
                       ^
/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/clang/11.0.3/include/arm_neon.h:56:24: error: 'neon_vector_type' attribute is not supported for this target
typedef __attribute__((neon_vector_type(8))) uint8_t uint8x8_t;
                       ^
/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/clang/11.0.3/include/arm_neon.h:57:24: error: 'neon_vector_type' attribute is not supported for this target
typedef __attribute__((neon_vector_type(16))) uint8_t uint8x16_t;
                       ^
/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/clang/11.0.3/include/arm_neon.h:58:24: error: 'neon_vector_type' attribute is not supported for this target
typedef __attribute__((neon_vector_type(4))) uint16_t uint16x4_t;
                       ^
/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/clang/11.0.3/include/arm_neon.h:59:24: error: 'neon_vector_type' attribute is not supported for this target
typedef __attribute__((neon_vector_type(8))) uint16_t uint16x8_t;
                       ^
/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/clang/11.0.3/include/arm_neon.h:60:24: error: 'neon_vector_type' attribute is not supported for this target
typedef __attribute__((neon_vector_type(2))) uint32_t uint32x2_t;
                       ^
/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/clang/11.0.3/include/arm_neon.h:61:24: error: 'neon_vector_type' attribute is not supported for this target
typedef __attribute__((neon_vector_type(4))) uint32_t uint32x4_t;
                       ^
/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/clang/11.0.3/include/arm_neon.h:62:24: error: 'neon_vector_type' attribute is not supported for this target
typedef __attribute__((neon_vector_type(1))) uint64_t uint64x1_t;
                       ^
/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/clang/11.0.3/include/arm_neon.h:63:24: error: 'neon_vector_type' attribute is not supported for this target
typedef __attribute__((neon_vector_type(2))) uint64_t uint64x2_t;
                       ^
/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/clang/11.0.3/include/arm_neon.h:64:24: error: 'neon_vector_type' attribute is not supported for this target
typedef __attribute__((neon_vector_type(4))) float16_t float16x4_t;
                       ^
/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/clang/11.0.3/include/arm_neon.h:65:24: error: 'neon_vector_type' attribute is not supported for this target
typedef __attribute__((neon_vector_type(8))) float16_t float16x8_t;
                       ^
fatal error: too many errors emitted, stopping now [-ferror-limit=]
20 errors generated.
configure:6656: $? = 1
configure: failed program was:
| /* confdefs.h */
| #define PACKAGE_NAME "Infernal"
| #define PACKAGE_TARNAME "infernal"
| #define PACKAGE_VERSION "1.1.4"
| #define PACKAGE_STRING "Infernal 1.1.4"
| #define PACKAGE_BUGREPORT "eric.nawrocki@nih.gov"
| #define PACKAGE_URL ""
| #define INFERNAL_DATE "Dec 2020"
| #define INFERNAL_COPYRIGHT "Copyright (C) 2020 Howard Hughes Medical Institute."
| #define INFERNAL_LICENSE "Freely distributed under the BSD open source license."
| #define INFERNAL_VERSION "1.1.4"
| #define INFERNAL_URL "http://eddylab.org/infernal/"
| #define HMMER_DATE "Nov 2020"
| #define HMMER_COPYRIGHT "Copyright (C) 2020 Howard Hughes Medical Institute."
| #define HMMER_LICENSE "Freely distributed under the BSD open source license."
| #define HMMER_VERSION "3.3.2"
| #define HMMER_URL "http://hmmer.org/"
| #define EASEL_DATE "Nov 2020"
| #define EASEL_COPYRIGHT "Copyright (C) 2020 Howard Hughes Medical Institute."
| #define EASEL_LICENSE "Freely distributed under the BSD open source license."
| #define EASEL_VERSION "0.48"
| #define EASEL_URL "http://bioeasel.org/"
| #define eslDEBUGLEVEL 0
| #define HAVE_PTHREAD_PRIO_INHERIT 1
| #define HAVE_PTHREAD 1
| #define HMMER_THREADS 1
| /* end confdefs.h.  */
| 
| #include <stdint.h>
| #include <arm_neon.h>
| int stub_neon(void) {
|   int32x4_t v1 = vdupq_n_s32(42);
|   int32x4_t v2 = vdupq_n_s32(86);
|   union { int32x4_t v; int32_t x[4]; } v3;
|   v3.v = vaddq_s32(v1, v2);
|   return (int) v3.x[0];
| }
| int main(void) { if (stub_neon() != 128) return 1; else return 0; }
| 
configure:6656: gcc -o conftest -g -O2 -O3 -mfpu=neon   conftest.c  >&5
clang: warning: argument unused during compilation: '-mfpu=neon' [-Wunused-command-line-argument]
In file included from conftest.c:30:
/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/clang/11.0.3/include/arm_neon.h:28:2: error: "NEON support not enabled"
#error "NEON support not enabled"
 ^
/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/clang/11.0.3/include/arm_neon.h:48:24: error: 'neon_vector_type' attribute is not supported for this target
typedef __attribute__((neon_vector_type(8))) int8_t int8x8_t;
                       ^
/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/clang/11.0.3/include/arm_neon.h:49:24: error: 'neon_vector_type' attribute is not supported for this target
typedef __attribute__((neon_vector_type(16))) int8_t int8x16_t;
                       ^
/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/clang/11.0.3/include/arm_neon.h:50:24: error: 'neon_vector_type' attribute is not supported for this target
typedef __attribute__((neon_vector_type(4))) int16_t int16x4_t;
                       ^
/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/clang/11.0.3/include/arm_neon.h:51:24: error: 'neon_vector_type' attribute is not supported for this target
typedef __attribute__((neon_vector_type(8))) int16_t int16x8_t;
                       ^
/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/clang/11.0.3/include/arm_neon.h:52:24: error: 'neon_vector_type' attribute is not supported for this target
typedef __attribute__((neon_vector_type(2))) int32_t int32x2_t;
                       ^
/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/clang/11.0.3/include/arm_neon.h:53:24: error: 'neon_vector_type' attribute is not supported for this target
typedef __attribute__((neon_vector_type(4))) int32_t int32x4_t;
                       ^
/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/clang/11.0.3/include/arm_neon.h:54:24: error: 'neon_vector_type' attribute is not supported for this target
typedef __attribute__((neon_vector_type(1))) int64_t int64x1_t;
                       ^
/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/clang/11.0.3/include/arm_neon.h:55:24: error: 'neon_vector_type' attribute is not supported for this target
typedef __attribute__((neon_vector_type(2))) int64_t int64x2_t;
                       ^
/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/clang/11.0.3/include/arm_neon.h:56:24: error: 'neon_vector_type' attribute is not supported for this target
typedef __attribute__((neon_vector_type(8))) uint8_t uint8x8_t;
                       ^
/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/clang/11.0.3/include/arm_neon.h:57:24: error: 'neon_vector_type' attribute is not supported for this target
typedef __attribute__((neon_vector_type(16))) uint8_t uint8x16_t;
                       ^
/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/clang/11.0.3/include/arm_neon.h:58:24: error: 'neon_vector_type' attribute is not supported for this target
typedef __attribute__((neon_vector_type(4))) uint16_t uint16x4_t;
                       ^
/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/clang/11.0.3/include/arm_neon.h:59:24: error: 'neon_vector_type' attribute is not supported for this target
typedef __attribute__((neon_vector_type(8))) uint16_t uint16x8_t;
                       ^
/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/clang/11.0.3/include/arm_neon.h:60:24: error: 'neon_vector_type' attribute is not supported for this target
typedef __attribute__((neon_vector_type(2))) uint32_t uint32x2_t;
                       ^
/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/clang/11.0.3/include/arm_neon.h:61:24: error: 'neon_vector_type' attribute is not supported for this target
typedef __attribute__((neon_vector_type(4))) uint32_t uint32x4_t;
                       ^
/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/clang/11.0.3/include/arm_neon.h:62:24: error: 'neon_vector_type' attribute is not supported for this target
typedef __attribute__((neon_vector_type(1))) uint64_t uint64x1_t;
                       ^
/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/clang/11.0.3/include/arm_neon.h:63:24: error: 'neon_vector_type' attribute is not supported for this target
typedef __attribute__((neon_vector_type(2))) uint64_t uint64x2_t;
                       ^
/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/clang/11.0.3/include/arm_neon.h:64:24: error: 'neon_vector_type' attribute is not supported for this target
typedef __attribute__((neon_vector_type(4))) float16_t float16x4_t;
                       ^
/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/clang/11.0.3/include/arm_neon.h:65:24: error: 'neon_vector_type' attribute is not supported for this target
typedef __attribute__((neon_vector_type(8))) float16_t float16x8_t;
                       ^
fatal error: too many errors emitted, stopping now [-ferror-limit=]
20 errors generated.
configure:6656: $? = 1
configure: failed program was:
| /* confdefs.h */
| #define PACKAGE_NAME "Infernal"
| #define PACKAGE_TARNAME "infernal"
| #define PACKAGE_VERSION "1.1.4"
| #define PACKAGE_STRING "Infernal 1.1.4"
| #define PACKAGE_BUGREPORT "eric.nawrocki@nih.gov"
| #define PACKAGE_URL ""
| #define INFERNAL_DATE "Dec 2020"
| #define INFERNAL_COPYRIGHT "Copyright (C) 2020 Howard Hughes Medical Institute."
| #define INFERNAL_LICENSE "Freely distributed under the BSD open source license."
| #define INFERNAL_VERSION "1.1.4"
| #define INFERNAL_URL "http://eddylab.org/infernal/"
| #define HMMER_DATE "Nov 2020"
| #define HMMER_COPYRIGHT "Copyright (C) 2020 Howard Hughes Medical Institute."
| #define HMMER_LICENSE "Freely distributed under the BSD open source license."
| #define HMMER_VERSION "3.3.2"
| #define HMMER_URL "http://hmmer.org/"
| #define EASEL_DATE "Nov 2020"
| #define EASEL_COPYRIGHT "Copyright (C) 2020 Howard Hughes Medical Institute."
| #define EASEL_LICENSE "Freely distributed under the BSD open source license."
| #define EASEL_VERSION "0.48"
| #define EASEL_URL "http://bioeasel.org/"
| #define eslDEBUGLEVEL 0
| #define HAVE_PTHREAD_PRIO_INHERIT 1
| #define HAVE_PTHREAD 1
| #define HMMER_THREADS 1
| /* end confdefs.h.  */
| 
| #include <stdint.h>
| #include <arm_neon.h>
| int stub_neon(void) {
|   int32x4_t v1 = vdupq_n_s32(42);
|   int32x4_t v2 = vdupq_n_s32(86);
|   union { int32x4_t v; int32_t x[4]; } v3;
|   v3.v = vaddq_s32(v1, v2);
|   return (int) v3.x[0];
| }
| int main(void) { if (stub_neon() != 128) return 1; else return 0; }
| 
configure:6684: gcc -o conftest -g -O2 -O3 -mfpu=neon   conftest.c  >&5
clang: warning: argument unused during compilation: '-mfpu=neon' [-Wunused-command-line-argument]
In file included from conftest.c:30:
/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/clang/11.0.3/include/arm_neon.h:28:2: error: "NEON support not enabled"
#error "NEON support not enabled"
 ^
/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/clang/11.0.3/include/arm_neon.h:48:24: error: 'neon_vector_type' attribute is not supported for this target
typedef __attribute__((neon_vector_type(8))) int8_t int8x8_t;
                       ^
/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/clang/11.0.3/include/arm_neon.h:49:24: error: 'neon_vector_type' attribute is not supported for this target
typedef __attribute__((neon_vector_type(16))) int8_t int8x16_t;
                       ^
/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/clang/11.0.3/include/arm_neon.h:50:24: error: 'neon_vector_type' attribute is not supported for this target
typedef __attribute__((neon_vector_type(4))) int16_t int16x4_t;
                       ^
/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/clang/11.0.3/include/arm_neon.h:51:24: error: 'neon_vector_type' attribute is not supported for this target
typedef __attribute__((neon_vector_type(8))) int16_t int16x8_t;
                       ^
/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/clang/11.0.3/include/arm_neon.h:52:24: error: 'neon_vector_type' attribute is not supported for this target
typedef __attribute__((neon_vector_type(2))) int32_t int32x2_t;
                       ^
/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/clang/11.0.3/include/arm_neon.h:53:24: error: 'neon_vector_type' attribute is not supported for this target
typedef __attribute__((neon_vector_type(4))) int32_t int32x4_t;
                       ^
/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/clang/11.0.3/include/arm_neon.h:54:24: error: 'neon_vector_type' attribute is not supported for this target
typedef __attribute__((neon_vector_type(1))) int64_t int64x1_t;
                       ^
/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/clang/11.0.3/include/arm_neon.h:55:24: error: 'neon_vector_type' attribute is not supported for this target
typedef __attribute__((neon_vector_type(2))) int64_t int64x2_t;
                       ^
/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/clang/11.0.3/include/arm_neon.h:56:24: error: 'neon_vector_type' attribute is not supported for this target
typedef __attribute__((neon_vector_type(8))) uint8_t uint8x8_t;
                       ^
/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/clang/11.0.3/include/arm_neon.h:57:24: error: 'neon_vector_type' attribute is not supported for this target
typedef __attribute__((neon_vector_type(16))) uint8_t uint8x16_t;
                       ^
/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/clang/11.0.3/include/arm_neon.h:58:24: error: 'neon_vector_type' attribute is not supported for this target
typedef __attribute__((neon_vector_type(4))) uint16_t uint16x4_t;
                       ^
/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/clang/11.0.3/include/arm_neon.h:59:24: error: 'neon_vector_type' attribute is not supported for this target
typedef __attribute__((neon_vector_type(8))) uint16_t uint16x8_t;
                       ^
/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/clang/11.0.3/include/arm_neon.h:60:24: error: 'neon_vector_type' attribute is not supported for this target
typedef __attribute__((neon_vector_type(2))) uint32_t uint32x2_t;
                       ^
/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/clang/11.0.3/include/arm_neon.h:61:24: error: 'neon_vector_type' attribute is not supported for this target
typedef __attribute__((neon_vector_type(4))) uint32_t uint32x4_t;
                       ^
/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/clang/11.0.3/include/arm_neon.h:62:24: error: 'neon_vector_type' attribute is not supported for this target
typedef __attribute__((neon_vector_type(1))) uint64_t uint64x1_t;
                       ^
/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/clang/11.0.3/include/arm_neon.h:63:24: error: 'neon_vector_type' attribute is not supported for this target
typedef __attribute__((neon_vector_type(2))) uint64_t uint64x2_t;
                       ^
/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/clang/11.0.3/include/arm_neon.h:64:24: error: 'neon_vector_type' attribute is not supported for this target
typedef __attribute__((neon_vector_type(4))) float16_t float16x4_t;
                       ^
/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/clang/11.0.3/include/arm_neon.h:65:24: error: 'neon_vector_type' attribute is not supported for this target
typedef __attribute__((neon_vector_type(8))) float16_t float16x8_t;
                       ^
fatal error: too many errors emitted, stopping now [-ferror-limit=]
20 errors generated.
configure:6684: $? = 1
configure: failed program was:
| /* confdefs.h */
| #define PACKAGE_NAME "Infernal"
| #define PACKAGE_TARNAME "infernal"
| #define PACKAGE_VERSION "1.1.4"
| #define PACKAGE_STRING "Infernal 1.1.4"
| #define PACKAGE_BUGREPORT "eric.nawrocki@nih.gov"
| #define PACKAGE_URL ""
| #define INFERNAL_DATE "Dec 2020"
| #define INFERNAL_COPYRIGHT "Copyright (C) 2020 Howard Hughes Medical Institute."
| #define INFERNAL_LICENSE "Freely distributed under the BSD open source license."
| #define INFERNAL_VERSION "1.1.4"
| #define INFERNAL_URL "http://eddylab.org/infernal/"
| #define HMMER_DATE "Nov 2020"
| #define HMMER_COPYRIGHT "Copyright (C) 2020 Howard Hughes Medical Institute."
| #define HMMER_LICENSE "Freely distributed under the BSD open source license."
| #define HMMER_VERSION "3.3.2"
| #define HMMER_URL "http://hmmer.org/"
| #define EASEL_DATE "Nov 2020"
| #define EASEL_COPYRIGHT "Copyright (C) 2020 Howard Hughes Medical Institute."
| #define EASEL_LICENSE "Freely distributed under the BSD open source license."
| #define EASEL_VERSION "0.48"
| #define EASEL_URL "http://bioeasel.org/"
| #define eslDEBUGLEVEL 0
| #define HAVE_PTHREAD_PRIO_INHERIT 1
| #define HAVE_PTHREAD 1
| #define HMMER_THREADS 1
| /* end confdefs.h.  */
| 
| #include <stdint.h>
| #include <arm_neon.h>
| int main(void) {
|   int16x8_t   a1 = { 1, 2, 8, 3, 4, 5, 6, 7 };
|   int16_t     r1 = vmaxvq_s16(a1); // = 8 : horizontal max
|   uint8x16_t  a2 = { 1, 2, 16, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15 };
|   uint8_t     r2 = vmaxvq_u8(a2);  // = 16 : horizontal max
|   float32x4_t a3 = { 1.0, 2.0, 3.0, 4.0 };
|   float       r3 = vaddvq_f32(a3); // = 10.0 : horizontal sum
|   return 0;
| }
| 
configure:6693: result: no
configure:6753: checking whether gcc can compile our Altivec/VMX code
configure:6785: gcc -o conftest -g -O2 -O3   conftest.c  >&5
In file included from conftest.c:29:
/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/clang/11.0.3/include/altivec.h:13:2: error: "AltiVec support not enabled"
#error "AltiVec support not enabled"
 ^
/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/clang/11.0.3/include/altivec.h:48:19: error: unknown type name 'vector'
static __inline__ vector signed char __ATTRS_o_ai vec_perm(
                  ^
/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/clang/11.0.3/include/altivec.h:49:5: error: unknown type name 'vector'
    vector signed char __a, vector signed char __b, vector unsigned char __c);
    ^
/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/clang/11.0.3/include/altivec.h:49:29: error: unknown type name 'vector'
    vector signed char __a, vector signed char __b, vector unsigned char __c);
                            ^
/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/clang/11.0.3/include/altivec.h:49:53: error: unknown type name 'vector'
    vector signed char __a, vector signed char __b, vector unsigned char __c);
                                                    ^
/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/clang/11.0.3/include/altivec.h:51:19: error: unknown type name 'vector'
static __inline__ vector unsigned char __ATTRS_o_ai
                  ^
/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/clang/11.0.3/include/altivec.h:52:10: error: unknown type name 'vector'
vec_perm(vector unsigned char __a, vector unsigned char __b,
         ^
/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/clang/11.0.3/include/altivec.h:52:36: error: unknown type name 'vector'
vec_perm(vector unsigned char __a, vector unsigned char __b,
                                   ^
/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/clang/11.0.3/include/altivec.h:53:10: error: unknown type name 'vector'
         vector unsigned char __c);
         ^
/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/clang/11.0.3/include/altivec.h:55:19: error: unknown type name 'vector'
static __inline__ vector bool char __ATTRS_o_ai
                  ^
/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/clang/11.0.3/include/altivec.h:55:8: error: 'inline' can only appear on functions
static __inline__ vector bool char __ATTRS_o_ai
       ^
/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/clang/11.0.3/include/altivec.h:55:30: error: expected ';' after top level declarator
static __inline__ vector bool char __ATTRS_o_ai
                             ^
/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/clang/11.0.3/include/altivec.h:56:10: error: unknown type name 'vector'
vec_perm(vector bool char __a, vector bool char __b, vector unsigned char __c);
         ^
/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/clang/11.0.3/include/altivec.h:56:22: error: expected ')'
vec_perm(vector bool char __a, vector bool char __b, vector unsigned char __c);
                     ^
/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/clang/11.0.3/include/altivec.h:56:9: note: to match this '('
vec_perm(vector bool char __a, vector bool char __b, vector unsigned char __c);
        ^
/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/clang/11.0.3/include/altivec.h:58:19: error: unknown type name 'vector'
static __inline__ vector short __ATTRS_o_ai vec_perm(vector signed short __a,
                  ^
/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/clang/11.0.3/include/altivec.h:58:54: error: unknown type name 'vector'
static __inline__ vector short __ATTRS_o_ai vec_perm(vector signed short __a,
                                                     ^
/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/clang/11.0.3/include/altivec.h:59:54: error: unknown type name 'vector'
                                                     vector signed short __b,
                                                     ^
/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/clang/11.0.3/include/altivec.h:60:54: error: unknown type name 'vector'
                                                     vector unsigned char __c);
                                                     ^
/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/clang/11.0.3/include/altivec.h:62:19: error: unknown type name 'vector'
static __inline__ vector unsigned short __ATTRS_o_ai
                  ^
fatal error: too many errors emitted, stopping now [-ferror-limit=]
20 errors generated.
configure:6785: $? = 1
configure: failed program was:
| /* confdefs.h */
| #define PACKAGE_NAME "Infernal"
| #define PACKAGE_TARNAME "infernal"
| #define PACKAGE_VERSION "1.1.4"
| #define PACKAGE_STRING "Infernal 1.1.4"
| #define PACKAGE_BUGREPORT "eric.nawrocki@nih.gov"
| #define PACKAGE_URL ""
| #define INFERNAL_DATE "Dec 2020"
| #define INFERNAL_COPYRIGHT "Copyright (C) 2020 Howard Hughes Medical Institute."
| #define INFERNAL_LICENSE "Freely distributed under the BSD open source license."
| #define INFERNAL_VERSION "1.1.4"
| #define INFERNAL_URL "http://eddylab.org/infernal/"
| #define HMMER_DATE "Nov 2020"
| #define HMMER_COPYRIGHT "Copyright (C) 2020 Howard Hughes Medical Institute."
| #define HMMER_LICENSE "Freely distributed under the BSD open source license."
| #define HMMER_VERSION "3.3.2"
| #define HMMER_URL "http://hmmer.org/"
| #define EASEL_DATE "Nov 2020"
| #define EASEL_COPYRIGHT "Copyright (C) 2020 Howard Hughes Medical Institute."
| #define EASEL_LICENSE "Freely distributed under the BSD open source license."
| #define EASEL_VERSION "0.48"
| #define EASEL_URL "http://bioeasel.org/"
| #define eslDEBUGLEVEL 0
| #define HAVE_PTHREAD_PRIO_INHERIT 1
| #define HAVE_PTHREAD 1
| #define HMMER_THREADS 1
| /* end confdefs.h.  */
| 
| #include <altivec.h>
| #include <stdint.h>
| int stub_vmx(void) {
| vector signed int v1,v2;
| union { vector signed int v; int32_t x[4]; } v3;
| v1   = vec_splat_s32(6);
| v2   = vec_splat_s32(12);
| v3.v = vec_add(v1,v2);
| return (int) v3.x[0];}
| int main(void) { if (stub_vmx() != 18) return 1; else return 0; }
| 
configure:6785: gcc -o conftest -g -O2 -O3 -maltivec   conftest.c  >&5
clang: warning: argument unused during compilation: '-maltivec' [-Wunused-command-line-argument]
In file included from conftest.c:29:
/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/clang/11.0.3/include/altivec.h:13:2: error: "AltiVec support not enabled"
#error "AltiVec support not enabled"
 ^
/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/clang/11.0.3/include/altivec.h:48:19: error: unknown type name 'vector'
static __inline__ vector signed char __ATTRS_o_ai vec_perm(
                  ^
/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/clang/11.0.3/include/altivec.h:49:5: error: unknown type name 'vector'
    vector signed char __a, vector signed char __b, vector unsigned char __c);
    ^
/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/clang/11.0.3/include/altivec.h:49:29: error: unknown type name 'vector'
    vector signed char __a, vector signed char __b, vector unsigned char __c);
                            ^
/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/clang/11.0.3/include/altivec.h:49:53: error: unknown type name 'vector'
    vector signed char __a, vector signed char __b, vector unsigned char __c);
                                                    ^
/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/clang/11.0.3/include/altivec.h:51:19: error: unknown type name 'vector'
static __inline__ vector unsigned char __ATTRS_o_ai
                  ^
/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/clang/11.0.3/include/altivec.h:52:10: error: unknown type name 'vector'
vec_perm(vector unsigned char __a, vector unsigned char __b,
         ^
/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/clang/11.0.3/include/altivec.h:52:36: error: unknown type name 'vector'
vec_perm(vector unsigned char __a, vector unsigned char __b,
                                   ^
/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/clang/11.0.3/include/altivec.h:53:10: error: unknown type name 'vector'
         vector unsigned char __c);
         ^
/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/clang/11.0.3/include/altivec.h:55:19: error: unknown type name 'vector'
static __inline__ vector bool char __ATTRS_o_ai
                  ^
/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/clang/11.0.3/include/altivec.h:55:8: error: 'inline' can only appear on functions
static __inline__ vector bool char __ATTRS_o_ai
       ^
/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/clang/11.0.3/include/altivec.h:55:30: error: expected ';' after top level declarator
static __inline__ vector bool char __ATTRS_o_ai
                             ^
/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/clang/11.0.3/include/altivec.h:56:10: error: unknown type name 'vector'
vec_perm(vector bool char __a, vector bool char __b, vector unsigned char __c);
         ^
/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/clang/11.0.3/include/altivec.h:56:22: error: expected ')'
vec_perm(vector bool char __a, vector bool char __b, vector unsigned char __c);
                     ^
/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/clang/11.0.3/include/altivec.h:56:9: note: to match this '('
vec_perm(vector bool char __a, vector bool char __b, vector unsigned char __c);
        ^
/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/clang/11.0.3/include/altivec.h:58:19: error: unknown type name 'vector'
static __inline__ vector short __ATTRS_o_ai vec_perm(vector signed short __a,
                  ^
/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/clang/11.0.3/include/altivec.h:58:54: error: unknown type name 'vector'
static __inline__ vector short __ATTRS_o_ai vec_perm(vector signed short __a,
                                                     ^
/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/clang/11.0.3/include/altivec.h:59:54: error: unknown type name 'vector'
                                                     vector signed short __b,
                                                     ^
/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/clang/11.0.3/include/altivec.h:60:54: error: unknown type name 'vector'
                                                     vector unsigned char __c);
                                                     ^
/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/clang/11.0.3/include/altivec.h:62:19: error: unknown type name 'vector'
static __inline__ vector unsigned short __ATTRS_o_ai
                  ^
fatal error: too many errors emitted, stopping now [-ferror-limit=]
20 errors generated.
configure:6785: $? = 1
configure: failed program was:
| /* confdefs.h */
| #define PACKAGE_NAME "Infernal"
| #define PACKAGE_TARNAME "infernal"
| #define PACKAGE_VERSION "1.1.4"
| #define PACKAGE_STRING "Infernal 1.1.4"
| #define PACKAGE_BUGREPORT "eric.nawrocki@nih.gov"
| #define PACKAGE_URL ""
| #define INFERNAL_DATE "Dec 2020"
| #define INFERNAL_COPYRIGHT "Copyright (C) 2020 Howard Hughes Medical Institute."
| #define INFERNAL_LICENSE "Freely distributed under the BSD open source license."
| #define INFERNAL_VERSION "1.1.4"
| #define INFERNAL_URL "http://eddylab.org/infernal/"
| #define HMMER_DATE "Nov 2020"
| #define HMMER_COPYRIGHT "Copyright (C) 2020 Howard Hughes Medical Institute."
| #define HMMER_LICENSE "Freely distributed under the BSD open source license."
| #define HMMER_VERSION "3.3.2"
| #define HMMER_URL "http://hmmer.org/"
| #define EASEL_DATE "Nov 2020"
| #define EASEL_COPYRIGHT "Copyright (C) 2020 Howard Hughes Medical Institute."
| #define EASEL_LICENSE "Freely distributed under the BSD open source license."
| #define EASEL_VERSION "0.48"
| #define EASEL_URL "http://bioeasel.org/"
| #define eslDEBUGLEVEL 0
| #define HAVE_PTHREAD_PRIO_INHERIT 1
| #define HAVE_PTHREAD 1
| #define HMMER_THREADS 1
| /* end confdefs.h.  */
| 
| #include <altivec.h>
| #include <stdint.h>
| int stub_vmx(void) {
| vector signed int v1,v2;
| union { vector signed int v; int32_t x[4]; } v3;
| v1   = vec_splat_s32(6);
| v2   = vec_splat_s32(12);
| v3.v = vec_add(v1,v2);
| return (int) v3.x[0];}
| int main(void) { if (stub_vmx() != 18) return 1; else return 0; }
| 
configure:6785: gcc -o conftest -g -O2 -O3 -faltivec   conftest.c  >&5
clang: error: the clang compiler does not support 'faltivec', please use -maltivec and include altivec.h explicitly
configure:6785: $? = 1
configure: failed program was:
| /* confdefs.h */
| #define PACKAGE_NAME "Infernal"
| #define PACKAGE_TARNAME "infernal"
| #define PACKAGE_VERSION "1.1.4"
| #define PACKAGE_STRING "Infernal 1.1.4"
| #define PACKAGE_BUGREPORT "eric.nawrocki@nih.gov"
| #define PACKAGE_URL ""
| #define INFERNAL_DATE "Dec 2020"
| #define INFERNAL_COPYRIGHT "Copyright (C) 2020 Howard Hughes Medical Institute."
| #define INFERNAL_LICENSE "Freely distributed under the BSD open source license."
| #define INFERNAL_VERSION "1.1.4"
| #define INFERNAL_URL "http://eddylab.org/infernal/"
| #define HMMER_DATE "Nov 2020"
| #define HMMER_COPYRIGHT "Copyright (C) 2020 Howard Hughes Medical Institute."
| #define HMMER_LICENSE "Freely distributed under the BSD open source license."
| #define HMMER_VERSION "3.3.2"
| #define HMMER_URL "http://hmmer.org/"
| #define EASEL_DATE "Nov 2020"
| #define EASEL_COPYRIGHT "Copyright (C) 2020 Howard Hughes Medical Institute."
| #define EASEL_LICENSE "Freely distributed under the BSD open source license."
| #define EASEL_VERSION "0.48"
| #define EASEL_URL "http://bioeasel.org/"
| #define eslDEBUGLEVEL 0
| #define HAVE_PTHREAD_PRIO_INHERIT 1
| #define HAVE_PTHREAD 1
| #define HMMER_THREADS 1
| /* end confdefs.h.  */
| 
| #include <altivec.h>
| #include <stdint.h>
| int stub_vmx(void) {
| vector signed int v1,v2;
| union { vector signed int v; int32_t x[4]; } v3;
| v1   = vec_splat_s32(6);
| v2   = vec_splat_s32(12);
| v3.v = vec_add(v1,v2);
| return (int) v3.x[0];}
| int main(void) { if (stub_vmx() != 18) return 1; else return 0; }
| 
configure:6795: result: no
configure:6838: checking whether gcc can compile our SSE code
configure:6870: gcc -o conftest -g -O2 -O3   conftest.c  >&5
configure:6870: $? = 0
configure:6885: result: yes
configure:6926: Activating Intel/AMD SSE vector DP implementation
configure:6960: checking whether _MM_SET_FLUSH_ZERO_MODE is supported
configure:6976: gcc -c -g -O2 -O3   conftest.c >&5
configure:6976: $? = 0
configure:6978: result: yes
configure:6997: checking compiler support --start-group
configure:7012: gcc -o conftest -g -O2 -O3  -Wl,--start-group -Wl,--end-group  conftest.c  >&5
ld: unknown option: --start-group
clang: error: linker command failed with exit code 1 (use -v to see invocation)
configure:7012: $? = 1
configure: failed program was:
| /* confdefs.h */
| #define PACKAGE_NAME "Infernal"
| #define PACKAGE_TARNAME "infernal"
| #define PACKAGE_VERSION "1.1.4"
| #define PACKAGE_STRING "Infernal 1.1.4"
| #define PACKAGE_BUGREPORT "eric.nawrocki@nih.gov"
| #define PACKAGE_URL ""
| #define INFERNAL_DATE "Dec 2020"
| #define INFERNAL_COPYRIGHT "Copyright (C) 2020 Howard Hughes Medical Institute."
| #define INFERNAL_LICENSE "Freely distributed under the BSD open source license."
| #define INFERNAL_VERSION "1.1.4"
| #define INFERNAL_URL "http://eddylab.org/infernal/"
| #define HMMER_DATE "Nov 2020"
| #define HMMER_COPYRIGHT "Copyright (C) 2020 Howard Hughes Medical Institute."
| #define HMMER_LICENSE "Freely distributed under the BSD open source license."
| #define HMMER_VERSION "3.3.2"
| #define HMMER_URL "http://hmmer.org/"
| #define EASEL_DATE "Nov 2020"
| #define EASEL_COPYRIGHT "Copyright (C) 2020 Howard Hughes Medical Institute."
| #define EASEL_LICENSE "Freely distributed under the BSD open source license."
| #define EASEL_VERSION "0.48"
| #define EASEL_URL "http://bioeasel.org/"
| #define eslDEBUGLEVEL 0
| #define HAVE_PTHREAD_PRIO_INHERIT 1
| #define HAVE_PTHREAD 1
| #define HMMER_THREADS 1
| #define eslENABLE_SSE 1
| #define HAVE_FLUSH_ZERO_MODE 1
| /* end confdefs.h.  */
| 
| int
| main (void)
| {
| 
|   ;
|   return 0;
| }
configure:7019: result: no
configure:7036: checking for gzip
configure:7059: found /usr/bin/gzip
configure:7072: result: /usr/bin/gzip
configure:7097: checking for python3
configure:7120: found /Users/erivas/anaconda3/bin/python3
configure:7132: result: /Users/erivas/anaconda3/bin/python3
configure:7157: checking for library containing clock_gettime
configure:7187: gcc -o conftest -g -O2 -O3   conftest.c  >&5
configure:7187: $? = 0
configure:7207: result: none required
configure:7227: checking for stdio.h
configure:7227: gcc -c -g -O2 -O3  conftest.c >&5
configure:7227: $? = 0
configure:7227: result: yes
configure:7227: checking for stdlib.h
configure:7227: gcc -c -g -O2 -O3  conftest.c >&5
configure:7227: $? = 0
configure:7227: result: yes
configure:7227: checking for string.h
configure:7227: gcc -c -g -O2 -O3  conftest.c >&5
configure:7227: $? = 0
configure:7227: result: yes
configure:7227: checking for inttypes.h
configure:7227: gcc -c -g -O2 -O3  conftest.c >&5
configure:7227: $? = 0
configure:7227: result: yes
configure:7227: checking for stdint.h
configure:7227: gcc -c -g -O2 -O3  conftest.c >&5
configure:7227: $? = 0
configure:7227: result: yes
configure:7227: checking for strings.h
configure:7227: gcc -c -g -O2 -O3  conftest.c >&5
configure:7227: $? = 0
configure:7227: result: yes
configure:7227: checking for sys/stat.h
configure:7227: gcc -c -g -O2 -O3  conftest.c >&5
configure:7227: $? = 0
configure:7227: result: yes
configure:7227: checking for sys/types.h
configure:7227: gcc -c -g -O2 -O3  conftest.c >&5
configure:7227: $? = 0
configure:7227: result: yes
configure:7227: checking for unistd.h
configure:7227: gcc -c -g -O2 -O3  conftest.c >&5
configure:7227: $? = 0
configure:7227: result: yes
configure:7252: checking for endian.h
configure:7252: gcc -c -g -O2 -O3  conftest.c >&5
conftest.c:69:10: fatal error: 'endian.h' file not found
#include <endian.h>
         ^~~~~~~~~~
1 error generated.
configure:7252: $? = 1
configure: failed program was:
| /* confdefs.h */
| #define PACKAGE_NAME "Infernal"
| #define PACKAGE_TARNAME "infernal"
| #define PACKAGE_VERSION "1.1.4"
| #define PACKAGE_STRING "Infernal 1.1.4"
| #define PACKAGE_BUGREPORT "eric.nawrocki@nih.gov"
| #define PACKAGE_URL ""
| #define INFERNAL_DATE "Dec 2020"
| #define INFERNAL_COPYRIGHT "Copyright (C) 2020 Howard Hughes Medical Institute."
| #define INFERNAL_LICENSE "Freely distributed under the BSD open source license."
| #define INFERNAL_VERSION "1.1.4"
| #define INFERNAL_URL "http://eddylab.org/infernal/"
| #define HMMER_DATE "Nov 2020"
| #define HMMER_COPYRIGHT "Copyright (C) 2020 Howard Hughes Medical Institute."
| #define HMMER_LICENSE "Freely distributed under the BSD open source license."
| #define HMMER_VERSION "3.3.2"
| #define HMMER_URL "http://hmmer.org/"
| #define EASEL_DATE "Nov 2020"
| #define EASEL_COPYRIGHT "Copyright (C) 2020 Howard Hughes Medical Institute."
| #define EASEL_LICENSE "Freely distributed under the BSD open source license."
| #define EASEL_VERSION "0.48"
| #define EASEL_URL "http://bioeasel.org/"
| #define eslDEBUGLEVEL 0
| #define HAVE_PTHREAD_PRIO_INHERIT 1
| #define HAVE_PTHREAD 1
| #define HMMER_THREADS 1
| #define eslENABLE_SSE 1
| #define HAVE_FLUSH_ZERO_MODE 1
| #define HAVE_GZIP 1
| #define HAVE_STDIO_H 1
| #define HAVE_STDLIB_H 1
| #define HAVE_STRING_H 1
| #define HAVE_INTTYPES_H 1
| #define HAVE_STDINT_H 1
| #define HAVE_STRINGS_H 1
| #define HAVE_SYS_STAT_H 1
| #define HAVE_SYS_TYPES_H 1
| #define HAVE_UNISTD_H 1
| #define STDC_HEADERS 1
| /* end confdefs.h.  */
| #include <stddef.h>
| #ifdef HAVE_STDIO_H
| # include <stdio.h>
| #endif
| #ifdef HAVE_STDLIB_H
| # include <stdlib.h>
| #endif
| #ifdef HAVE_STRING_H
| # include <string.h>
| #endif
| #ifdef HAVE_INTTYPES_H
| # include <inttypes.h>
| #endif
| #ifdef HAVE_STDINT_H
| # include <stdint.h>
| #endif
| #ifdef HAVE_STRINGS_H
| # include <strings.h>
| #endif
| #ifdef HAVE_SYS_TYPES_H
| # include <sys/types.h>
| #endif
| #ifdef HAVE_SYS_STAT_H
| # include <sys/stat.h>
| #endif
| #ifdef HAVE_UNISTD_H
| # include <unistd.h>
| #endif
| #include <endian.h>
configure:7252: result: no
configure:7258: checking for inttypes.h
configure:7258: result: yes
configure:7264: checking for stdint.h
configure:7264: result: yes
configure:7270: checking for unistd.h
configure:7270: result: yes
configure:7276: checking for sys/types.h
configure:7276: result: yes
configure:7282: checking for netinet/in.h
configure:7282: gcc -c -g -O2 -O3  conftest.c >&5
configure:7282: $? = 0
configure:7282: result: yes
configure:7293: checking for sys/param.h
configure:7293: gcc -c -g -O2 -O3  conftest.c >&5
configure:7293: $? = 0
configure:7293: result: yes
configure:7300: checking for sys/sysctl.h
configure:7300: gcc -c -g -O2 -O3  conftest.c >&5
configure:7300: $? = 0
configure:7300: result: yes
configure:7350: checking for uint8_t
configure:7350: gcc -c -g -O2 -O3  conftest.c >&5
configure:7350: $? = 0
configure:7350: result: yes
configure:7362: checking for uint16_t
configure:7362: gcc -c -g -O2 -O3  conftest.c >&5
configure:7362: $? = 0
configure:7362: result: yes
configure:7372: checking for uint32_t
configure:7372: gcc -c -g -O2 -O3  conftest.c >&5
configure:7372: $? = 0
configure:7372: result: yes
configure:7384: checking for uint64_t
configure:7384: gcc -c -g -O2 -O3  conftest.c >&5
configure:7384: $? = 0
configure:7384: result: yes
configure:7396: checking for off_t
configure:7396: gcc -c -g -O2 -O3  conftest.c >&5
configure:7396: $? = 0
configure:7396: gcc -c -g -O2 -O3  conftest.c >&5
conftest.c:79:20: error: expected expression
if (sizeof ((off_t)))
                   ^
1 error generated.
configure:7396: $? = 1
configure: failed program was:
| /* confdefs.h */
| #define PACKAGE_NAME "Infernal"
| #define PACKAGE_TARNAME "infernal"
| #define PACKAGE_VERSION "1.1.4"
| #define PACKAGE_STRING "Infernal 1.1.4"
| #define PACKAGE_BUGREPORT "eric.nawrocki@nih.gov"
| #define PACKAGE_URL ""
| #define INFERNAL_DATE "Dec 2020"
| #define INFERNAL_COPYRIGHT "Copyright (C) 2020 Howard Hughes Medical Institute."
| #define INFERNAL_LICENSE "Freely distributed under the BSD open source license."
| #define INFERNAL_VERSION "1.1.4"
| #define INFERNAL_URL "http://eddylab.org/infernal/"
| #define HMMER_DATE "Nov 2020"
| #define HMMER_COPYRIGHT "Copyright (C) 2020 Howard Hughes Medical Institute."
| #define HMMER_LICENSE "Freely distributed under the BSD open source license."
| #define HMMER_VERSION "3.3.2"
| #define HMMER_URL "http://hmmer.org/"
| #define EASEL_DATE "Nov 2020"
| #define EASEL_COPYRIGHT "Copyright (C) 2020 Howard Hughes Medical Institute."
| #define EASEL_LICENSE "Freely distributed under the BSD open source license."
| #define EASEL_VERSION "0.48"
| #define EASEL_URL "http://bioeasel.org/"
| #define eslDEBUGLEVEL 0
| #define HAVE_PTHREAD_PRIO_INHERIT 1
| #define HAVE_PTHREAD 1
| #define HMMER_THREADS 1
| #define eslENABLE_SSE 1
| #define HAVE_FLUSH_ZERO_MODE 1
| #define HAVE_GZIP 1
| #define HAVE_STDIO_H 1
| #define HAVE_STDLIB_H 1
| #define HAVE_STRING_H 1
| #define HAVE_INTTYPES_H 1
| #define HAVE_STDINT_H 1
| #define HAVE_STRINGS_H 1
| #define HAVE_SYS_STAT_H 1
| #define HAVE_SYS_TYPES_H 1
| #define HAVE_UNISTD_H 1
| #define STDC_HEADERS 1
| #define HAVE_INTTYPES_H 1
| #define HAVE_STDINT_H 1
| #define HAVE_UNISTD_H 1
| #define HAVE_SYS_TYPES_H 1
| #define HAVE_NETINET_IN_H 1
| #define HAVE_SYS_PARAM_H 1
| #define HAVE_SYS_SYSCTL_H 1
| /* end confdefs.h.  */
| #include <stddef.h>
| #ifdef HAVE_STDIO_H
| # include <stdio.h>
| #endif
| #ifdef HAVE_STDLIB_H
| # include <stdlib.h>
| #endif
| #ifdef HAVE_STRING_H
| # include <string.h>
| #endif
| #ifdef HAVE_INTTYPES_H
| # include <inttypes.h>
| #endif
| #ifdef HAVE_STDINT_H
| # include <stdint.h>
| #endif
| #ifdef HAVE_STRINGS_H
| # include <strings.h>
| #endif
| #ifdef HAVE_SYS_TYPES_H
| # include <sys/types.h>
| #endif
| #ifdef HAVE_SYS_STAT_H
| # include <sys/stat.h>
| #endif
| #ifdef HAVE_UNISTD_H
| # include <unistd.h>
| #endif
| int
| main (void)
| {
| if (sizeof ((off_t)))
| 	    return 0;
|   ;
|   return 0;
| }
configure:7396: result: yes
configure:7420: checking whether byte ordering is bigendian
configure:7436: gcc -c -g -O2 -O3  conftest.c >&5
configure:7436: $? = 0
configure:7482: gcc -c -g -O2 -O3  conftest.c >&5
configure:7482: $? = 0
configure:7501: gcc -c -g -O2 -O3  conftest.c >&5
conftest.c:55:4: error: use of undeclared identifier 'not'
                 not big endian
                 ^
1 error generated.
configure:7501: $? = 1
configure: failed program was:
| /* confdefs.h */
| #define PACKAGE_NAME "Infernal"
| #define PACKAGE_TARNAME "infernal"
| #define PACKAGE_VERSION "1.1.4"
| #define PACKAGE_STRING "Infernal 1.1.4"
| #define PACKAGE_BUGREPORT "eric.nawrocki@nih.gov"
| #define PACKAGE_URL ""
| #define INFERNAL_DATE "Dec 2020"
| #define INFERNAL_COPYRIGHT "Copyright (C) 2020 Howard Hughes Medical Institute."
| #define INFERNAL_LICENSE "Freely distributed under the BSD open source license."
| #define INFERNAL_VERSION "1.1.4"
| #define INFERNAL_URL "http://eddylab.org/infernal/"
| #define HMMER_DATE "Nov 2020"
| #define HMMER_COPYRIGHT "Copyright (C) 2020 Howard Hughes Medical Institute."
| #define HMMER_LICENSE "Freely distributed under the BSD open source license."
| #define HMMER_VERSION "3.3.2"
| #define HMMER_URL "http://hmmer.org/"
| #define EASEL_DATE "Nov 2020"
| #define EASEL_COPYRIGHT "Copyright (C) 2020 Howard Hughes Medical Institute."
| #define EASEL_LICENSE "Freely distributed under the BSD open source license."
| #define EASEL_VERSION "0.48"
| #define EASEL_URL "http://bioeasel.org/"
| #define eslDEBUGLEVEL 0
| #define HAVE_PTHREAD_PRIO_INHERIT 1
| #define HAVE_PTHREAD 1
| #define HMMER_THREADS 1
| #define eslENABLE_SSE 1
| #define HAVE_FLUSH_ZERO_MODE 1
| #define HAVE_GZIP 1
| #define HAVE_STDIO_H 1
| #define HAVE_STDLIB_H 1
| #define HAVE_STRING_H 1
| #define HAVE_INTTYPES_H 1
| #define HAVE_STDINT_H 1
| #define HAVE_STRINGS_H 1
| #define HAVE_SYS_STAT_H 1
| #define HAVE_SYS_TYPES_H 1
| #define HAVE_UNISTD_H 1
| #define STDC_HEADERS 1
| #define HAVE_INTTYPES_H 1
| #define HAVE_STDINT_H 1
| #define HAVE_UNISTD_H 1
| #define HAVE_SYS_TYPES_H 1
| #define HAVE_NETINET_IN_H 1
| #define HAVE_SYS_PARAM_H 1
| #define HAVE_SYS_SYSCTL_H 1
| /* end confdefs.h.  */
| #include <sys/types.h>
| 		#include <sys/param.h>
| 
| int
| main (void)
| {
| #if BYTE_ORDER != BIG_ENDIAN
| 		 not big endian
| 		#endif
| 
|   ;
|   return 0;
| }
configure:7635: result: no
configure:7736: checking for __attribute__((noreturn))
configure:7758: gcc -o conftest -g -O2 -O3   conftest.c  >&5
configure:7758: $? = 0
configure:7773: result: yes
configure:7804: checking for __attribute__((format))
configure:7826: gcc -o conftest -g -O2 -O3   conftest.c  >&5
configure:7826: $? = 0
configure:7841: result: yes
configure:7859: checking for mkstemp
configure:7859: gcc -o conftest -g -O2 -O3   conftest.c  >&5
configure:7859: $? = 0
configure:7859: result: yes
configure:7866: checking for popen
configure:7866: gcc -o conftest -g -O2 -O3   conftest.c  >&5
configure:7866: $? = 0
configure:7866: result: yes
configure:7873: checking for putenv
configure:7873: gcc -o conftest -g -O2 -O3   conftest.c  >&5
configure:7873: $? = 0
configure:7873: result: yes
configure:7880: checking for strcasecmp
configure:7880: gcc -o conftest -g -O2 -O3   conftest.c  >&5
conftest.c:69:6: warning: incompatible redeclaration of library function 'strcasecmp' [-Wincompatible-library-redeclaration]
char strcasecmp ();
     ^
conftest.c:69:6: note: 'strcasecmp' is a builtin with type 'int (const char *, const char *)'
1 warning generated.
configure:7880: $? = 0
configure:7880: result: yes
configure:7887: checking for strsep
configure:7887: gcc -o conftest -g -O2 -O3   conftest.c  >&5
configure:7887: $? = 0
configure:7887: result: yes
configure:7894: checking for times
configure:7894: gcc -o conftest -g -O2 -O3   conftest.c  >&5
configure:7894: $? = 0
configure:7894: result: yes
configure:7901: checking for getpid
configure:7901: gcc -o conftest -g -O2 -O3   conftest.c  >&5
configure:7901: $? = 0
configure:7901: result: yes
configure:7908: checking for sysctl
configure:7908: gcc -o conftest -g -O2 -O3   conftest.c  >&5
configure:7908: $? = 0
configure:7908: result: yes
configure:7915: checking for sysconf
configure:7915: gcc -o conftest -g -O2 -O3   conftest.c  >&5
configure:7915: $? = 0
configure:7915: result: yes
configure:7922: checking for getcwd
configure:7922: gcc -o conftest -g -O2 -O3   conftest.c  >&5
configure:7922: $? = 0
configure:7922: result: yes
configure:7929: checking for chmod
configure:7929: gcc -o conftest -g -O2 -O3   conftest.c  >&5
configure:7929: $? = 0
configure:7929: result: yes
configure:7936: checking for stat
configure:7936: gcc -o conftest -g -O2 -O3   conftest.c  >&5
configure:7936: $? = 0
configure:7936: result: yes
configure:7943: checking for fstat
configure:7943: gcc -o conftest -g -O2 -O3   conftest.c  >&5
configure:7943: $? = 0
configure:7943: result: yes
configure:7950: checking for erfc
configure:7950: gcc -o conftest -g -O2 -O3   conftest.c  >&5
conftest.c:79:6: warning: incompatible redeclaration of library function 'erfc' [-Wincompatible-library-redeclaration]
char erfc ();
     ^
conftest.c:79:6: note: 'erfc' is a builtin with type 'double (double)'
1 warning generated.
configure:7950: $? = 0
configure:7950: result: yes
configure:7961: checking for ntohs
configure:7961: gcc -o conftest -g -O2 -O3   conftest.c  >&5
configure:7961: $? = 0
configure:7961: result: yes
configure:8016: checking for ntohl
configure:8016: gcc -o conftest -g -O2 -O3   conftest.c  >&5
configure:8016: $? = 0
configure:8016: result: yes
configure:8071: checking for htons
configure:8071: gcc -o conftest -g -O2 -O3   conftest.c  >&5
configure:8071: $? = 0
configure:8071: result: yes
configure:8126: checking for htonl
configure:8126: gcc -o conftest -g -O2 -O3   conftest.c  >&5
configure:8126: $? = 0
configure:8126: result: yes
configure:8178: checking for library containing socket
configure:8208: gcc -o conftest -g -O2 -O3   conftest.c  >&5
configure:8208: $? = 0
configure:8228: result: none required
configure:8237: checking for library containing inet_pton
configure:8267: gcc -o conftest -g -O2 -O3   conftest.c  >&5
configure:8267: $? = 0
configure:8287: result: none required
configure:8297: checking for _LARGEFILE_SOURCE value needed for large files
configure:8317: gcc -o conftest -g -O2 -O3   conftest.c  >&5
configure:8317: $? = 0
configure:8347: result: no
configure:8378: checking for special C compiler options needed for large files
configure:8426: result: no
configure:8432: checking for _FILE_OFFSET_BITS value needed for large files
configure:8458: gcc -c -g -O2 -O3  conftest.c >&5
configure:8458: $? = 0
configure:8492: result: no
configure:8720: creating ./config.status

## ---------------------- ##
## Running config.status. ##
## ---------------------- ##

This file was extended by Infernal config.status 1.1.4, which was
generated by GNU Autoconf 2.71.  Invocation command line was

  CONFIG_FILES    = 
  CONFIG_HEADERS  = 
  CONFIG_LINKS    = 
  CONFIG_COMMANDS = 
  $ ./config.status 

on dhcp-10-250-70-214.harvard.edu

config.status:921: creating Makefile
config.status:921: creating src/Makefile
config.status:921: creating testsuite/Makefile
config.status:921: creating rmark/Makefile
config.status:921: creating documentation/Makefile
config.status:921: creating documentation/man/Makefile
config.status:921: creating documentation/userguide/Makefile
config.status:921: creating src/impl_sse/Makefile
config.status:921: creating documentation/userguide/titlepage.tex
config.status:921: creating documentation/userguide/copyright.tex
config.status:921: creating documentation/man/cmalign.man
config.status:921: creating documentation/man/cmbuild.man
config.status:921: creating documentation/man/cmcalibrate.man
config.status:921: creating documentation/man/cmconvert.man
config.status:921: creating documentation/man/cmemit.man
config.status:921: creating documentation/man/cmfetch.man
config.status:921: creating documentation/man/cmpress.man
config.status:921: creating documentation/man/cmscan.man
config.status:921: creating documentation/man/cmsearch.man
config.status:921: creating documentation/man/cmsearch_dual.man
config.status:921: creating documentation/man/cmstat.man
config.status:921: creating documentation/man/infernal.man
config.status:921: creating documentation/man/sse_cmsearch.man
config.status:921: creating src/config.h
config.status:1096: src/config.h is unchanged

## ---------------- ##
## Cache variables. ##
## ---------------- ##

ac_cv_build=x86_64-apple-darwin22.6.0
ac_cv_c_bigendian=no
ac_cv_c_compiler_gnu=yes
ac_cv_c_uint16_t=yes
ac_cv_c_uint32_t=yes
ac_cv_c_uint64_t=yes
ac_cv_c_uint8_t=yes
ac_cv_env_CC_set=
ac_cv_env_CC_value=
ac_cv_env_CFLAGS_set=
ac_cv_env_CFLAGS_value=
ac_cv_env_CPPFLAGS_set=
ac_cv_env_CPPFLAGS_value=
ac_cv_env_CPP_set=
ac_cv_env_CPP_value=
ac_cv_env_LDFLAGS_set=
ac_cv_env_LDFLAGS_value=
ac_cv_env_LIBS_set=
ac_cv_env_LIBS_value=
ac_cv_env_MPICC_set=
ac_cv_env_MPICC_value=
ac_cv_env_PIC_CFLAGS_set=
ac_cv_env_PIC_CFLAGS_value=
ac_cv_env_build_alias_set=
ac_cv_env_build_alias_value=
ac_cv_env_host_alias_set=
ac_cv_env_host_alias_value=
ac_cv_env_target_alias_set=
ac_cv_env_target_alias_value=
ac_cv_func_chmod=yes
ac_cv_func_erfc=yes
ac_cv_func_fstat=yes
ac_cv_func_getcwd=yes
ac_cv_func_getpid=yes
ac_cv_func_htonl=yes
ac_cv_func_htons=yes
ac_cv_func_mkstemp=yes
ac_cv_func_ntohl=yes
ac_cv_func_ntohs=yes
ac_cv_func_popen=yes
ac_cv_func_putenv=yes
ac_cv_func_stat=yes
ac_cv_func_strcasecmp=yes
ac_cv_func_strsep=yes
ac_cv_func_sysconf=yes
ac_cv_func_sysctl=yes
ac_cv_func_times=yes
ac_cv_header_endian_h=no
ac_cv_header_inttypes_h=yes
ac_cv_header_netinet_in_h=yes
ac_cv_header_stdint_h=yes
ac_cv_header_stdio_h=yes
ac_cv_header_stdlib_h=yes
ac_cv_header_string_h=yes
ac_cv_header_strings_h=yes
ac_cv_header_sys_param_h=yes
ac_cv_header_sys_stat_h=yes
ac_cv_header_sys_sysctl_h=yes
ac_cv_header_sys_types_h=yes
ac_cv_header_unistd_h=yes
ac_cv_host=x86_64-apple-darwin22.6.0
ac_cv_objext=o
ac_cv_path_AR=/usr/bin/ar
ac_cv_path_EGREP='/usr/bin/grep -E'
ac_cv_path_GREP=/usr/bin/grep
ac_cv_path_HAVE_GZIP=/usr/bin/gzip
ac_cv_path_PYTHON3=/Users/erivas/anaconda3/bin/python3
ac_cv_path_SED=/usr/bin/sed
ac_cv_path_install='/usr/bin/install -c'
ac_cv_prog_CPP='gcc -E'
ac_cv_prog_ac_ct_CC=gcc
ac_cv_prog_ac_ct_RANLIB=ranlib
ac_cv_prog_cc_c11=
ac_cv_prog_cc_g=yes
ac_cv_prog_cc_stdc=
ac_cv_search_clock_gettime='none required'
ac_cv_search_inet_pton='none required'
ac_cv_search_socket='none required'
ac_cv_sys_file_offset_bits=no
ac_cv_sys_largefile_CC=no
ac_cv_sys_largefile_source=no
ac_cv_type_off_t=yes
ax_cv_PTHREAD_CLANG=yes
ax_cv_PTHREAD_CLANG_NO_WARN_FLAG=no
ax_cv_PTHREAD_JOINABLE_ATTR=PTHREAD_CREATE_JOINABLE
ax_cv_PTHREAD_PRIO_INHERIT=yes
ax_cv_PTHREAD_SPECIAL_FLAGS=no
ax_cv_have_func_attribute_format=yes
ax_cv_have_func_attribute_noreturn=yes

## ----------------- ##
## Output variables. ##
## ----------------- ##

AR='/usr/bin/ar'
AVX512_CFLAGS=''
AVX_CFLAGS=''
CC='gcc'
CFLAGS='-g -O2 -O3'
CPP='gcc -E'
CPPFLAGS=''
DEFS='-DHAVE_CONFIG_H'
EASEL_COPYRIGHT='Copyright (C) 2020 Howard Hughes Medical Institute.'
EASEL_DATE='Nov 2020'
EASEL_LICENSE='Freely distributed under the BSD open source license.'
EASEL_URL='http://bioeasel.org/'
EASEL_VERSION='0.48'
ECHO_C='\c'
ECHO_N=''
ECHO_T=''
EGREP='/usr/bin/grep -E'
EXEEXT=''
GREP='/usr/bin/grep'
GROUPHMMERLIBS='-lhmmer -lhmmerimpl'
HAVE_GZIP='/usr/bin/gzip'
HMMERIMPLLIB='impl_sse/libhmmerimpl.a'
HMMER_COPYRIGHT='Copyright (C) 2020 Howard Hughes Medical Institute.'
HMMER_DATE='Nov 2020'
HMMER_ESLDIR='../easel'
HMMER_LICENSE='Freely distributed under the BSD open source license.'
HMMER_SADIR='libdivsufsort'
HMMER_URL='http://hmmer.org/'
HMMER_VERSION='3.3.2'
IMPL_CHOICE='sse'
INFERNAL_COPYRIGHT='Copyright (C) 2020 Howard Hughes Medical Institute.'
INFERNAL_DATE='Dec 2020'
INFERNAL_ESLDIR='../hmmer/easel'
INFERNAL_HMMERDIR='../hmmer'
INFERNAL_IMPLDIR='impl_sse'
INFERNAL_LICENSE='Freely distributed under the BSD open source license.'
INFERNAL_SADIR='../hmmer/libdivsufsort'
INFERNAL_URL='http://eddylab.org/infernal/'
INFERNAL_VERSION='1.1.4'
INSTALL_DATA='${INSTALL} -m 644'
INSTALL_PROGRAM='${INSTALL}'
INSTALL_SCRIPT='${INSTALL}'
LDFLAGS=''
LIBGSL=''
LIBOBJS=''
LIBS=''
LN_S='ln -s'
LTLIBOBJS=''
MPICC=''
MPI_BENCHMARKS=''
MPI_UTESTS=''
NEON_CFLAGS=''
OBJEXT='o'
PACKAGE_BUGREPORT='eric.nawrocki@nih.gov'
PACKAGE_NAME='Infernal'
PACKAGE_STRING='Infernal 1.1.4'
PACKAGE_TARNAME='infernal'
PACKAGE_URL=''
PACKAGE_VERSION='1.1.4'
PATH_SEPARATOR=':'
PIC_CFLAGS=''
PTHREAD_CC='gcc'
PTHREAD_CFLAGS='-pthread'
PTHREAD_CXX=''
PTHREAD_LIBS='-lpthread'
PYTHON3='/Users/erivas/anaconda3/bin/python3'
RANLIB='ranlib'
SED='/usr/bin/sed'
SHELL='/bin/sh'
SSE4_CFLAGS=''
SSE_CFLAGS=''
VMX_CFLAGS=''
ac_ct_CC='gcc'
ax_pthread_config=''
bindir='${exec_prefix}/bin'
build='x86_64-apple-darwin22.6.0'
build_alias=''
build_cpu='x86_64'
build_os='darwin22.6.0'
build_vendor='apple'
datadir='${datarootdir}'
datarootdir='${prefix}/share'
docdir='${datarootdir}/doc/${PACKAGE_TARNAME}'
dvidir='${docdir}'
exec_prefix='${prefix}'
host='x86_64-apple-darwin22.6.0'
host_alias=''
host_cpu='x86_64'
host_os='darwin22.6.0'
host_vendor='apple'
htmldir='${docdir}'
includedir='${prefix}/include'
infodir='${datarootdir}/info'
libdir='${exec_prefix}/lib'
libexecdir='${exec_prefix}/libexec'
localedir='${datarootdir}/locale'
localstatedir='${prefix}/var'
mandir='${datarootdir}/man'
oldincludedir='/usr/include'
pdfdir='${docdir}'
prefix='/Users/erivas/src/Mysrc/R-scape/versions/rscape/rscape_v2.0'
program_transform_name='s,x,x,'
psdir='${docdir}'
runstatedir='${localstatedir}/run'
sbindir='${exec_prefix}/sbin'
sharedstatedir='${prefix}/com'
sysconfdir='${prefix}/etc'
target_alias=''

## ----------- ##
## confdefs.h. ##
## ----------- ##

/* confdefs.h */
#define PACKAGE_NAME "Infernal"
#define PACKAGE_TARNAME "infernal"
#define PACKAGE_VERSION "1.1.4"
#define PACKAGE_STRING "Infernal 1.1.4"
#define PACKAGE_BUGREPORT "eric.nawrocki@nih.gov"
#define PACKAGE_URL ""
#define INFERNAL_DATE "Dec 2020"
#define INFERNAL_COPYRIGHT "Copyright (C) 2020 Howard Hughes Medical Institute."
#define INFERNAL_LICENSE "Freely distributed under the BSD open source license."
#define INFERNAL_VERSION "1.1.4"
#define INFERNAL_URL "http://eddylab.org/infernal/"
#define HMMER_DATE "Nov 2020"
#define HMMER_COPYRIGHT "Copyright (C) 2020 Howard Hughes Medical Institute."
#define HMMER_LICENSE "Freely distributed under the BSD open source license."
#define HMMER_VERSION "3.3.2"
#define HMMER_URL "http://hmmer.org/"
#define EASEL_DATE "Nov 2020"
#define EASEL_COPYRIGHT "Copyright (C) 2020 Howard Hughes Medical Institute."
#define EASEL_LICENSE "Freely distributed under the BSD open source license."
#define EASEL_VERSION "0.48"
#define EASEL_URL "http://bioeasel.org/"
#define eslDEBUGLEVEL 0
#define HAVE_PTHREAD_PRIO_INHERIT 1
#define HAVE_PTHREAD 1
#define HMMER_THREADS 1
#define eslENABLE_SSE 1
#define HAVE_FLUSH_ZERO_MODE 1
#define HAVE_GZIP 1
#define HAVE_STDIO_H 1
#define HAVE_STDLIB_H 1
#define HAVE_STRING_H 1
#define HAVE_INTTYPES_H 1
#define HAVE_STDINT_H 1
#define HAVE_STRINGS_H 1
#define HAVE_SYS_STAT_H 1
#define HAVE_SYS_TYPES_H 1
#define HAVE_UNISTD_H 1
#define STDC_HEADERS 1
#define HAVE_INTTYPES_H 1
#define HAVE_STDINT_H 1
#define HAVE_UNISTD_H 1
#define HAVE_SYS_TYPES_H 1
#define HAVE_NETINET_IN_H 1
#define HAVE_SYS_PARAM_H 1
#define HAVE_SYS_SYSCTL_H 1
#define HAVE_FUNC_ATTRIBUTE_NORETURN 1
#define HAVE_FUNC_ATTRIBUTE_FORMAT 1
#define HAVE_MKSTEMP 1
#define HAVE_POPEN 1
#define HAVE_PUTENV 1
#define HAVE_STRCASECMP 1
#define HAVE_STRSEP 1
#define HAVE_TIMES 1
#define HAVE_GETPID 1
#define HAVE_SYSCTL 1
#define HAVE_SYSCONF 1
#define HAVE_GETCWD 1
#define HAVE_CHMOD 1
#define HAVE_STAT 1
#define HAVE_FSTAT 1
#define HAVE_ERFC 1
#define HAVE_NTOHS 1
#define HAVE_NTOHL 1
#define HAVE_HTONS 1
#define HAVE_HTONL 1
#define HAVE_FSEEKO 1

configure: exit 0
