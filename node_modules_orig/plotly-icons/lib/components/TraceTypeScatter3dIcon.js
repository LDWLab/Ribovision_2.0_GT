'use strict';

Object.defineProperty(exports, "__esModule", {
    value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _IconBase = require('./IconBase.js');

var _IconBase2 = _interopRequireDefault(_IconBase);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var TraceTypeScatter3dIcon = function TraceTypeScatter3dIcon(props) {
    return _react2.default.createElement(
        _IconBase2.default,
        _extends({ viewBox: '0 0 46 46' }, props),
        _react2.default.createElement('path', { fill: 'none', d: 'M0 0h46v46H0z' }),
        _react2.default.createElement('path', { fill: '#1d9bfb', stroke: '#1d9bfb', d: 'M23.511 23.571L9.516 30.045l13.929 6.319L37 30.045l-13.489-6.474z', strokeLinecap: 'round', strokeLinejoin: 'round', strokeWidth: '2' }),
        _react2.default.createElement('circle', { cx: '11', cy: '23', r: '2', fill: '#1d9bfb' }),
        _react2.default.createElement('circle', { cx: '16', cy: '28', r: '2', fill: '#25fdfc' }),
        _react2.default.createElement('circle', { cx: '16', cy: '15', r: '2', fill: '#1d9bfb' }),
        _react2.default.createElement('circle', { cx: '26', cy: '32', r: '2', fill: '#25fdfc' }),
        _react2.default.createElement('circle', { cx: '26', cy: '26', r: '2', fill: '#25fdfc' }),
        _react2.default.createElement('circle', { cx: '26', cy: '18', r: '2', fill: '#1d9bfb' }),
        _react2.default.createElement('circle', { cx: '26', cy: '10', r: '2', fill: '#1d9bfb' }),
        _react2.default.createElement('circle', { cx: '36', cy: '25', r: '2', fill: '#1d9bfb' }),
        _react2.default.createElement('circle', { cx: '36', cy: '19', r: '2', fill: '#1d9bfb' })
    );
};

exports.default = TraceTypeScatter3dIcon;