{"version":3,"file":"index.esm.min.js","sources":["../src/utils.js","../src/prefetch.js","../src/index.js"],"sourcesContent":["export const inBrowser = typeof window !== 'undefined'\n\nconst conn = inBrowser && navigator.connection\nexport const canPrefetch =\n  inBrowser &&\n  (!conn || ((conn.effectiveType || '').indexOf('2g') === -1 && !conn.saveData))\n\nexport const supportIntersectionObserver =\n  inBrowser && window.IntersectionObserver\n","/**\n * Portions copyright 2018 Google Inc.\n * Inspired by Gatsby's prefetching logic, with those portions\n * remaining MIT. Additions include support for Fetch API,\n * XHR switching, SaveData and Effective Connection Type checking.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n **/\nimport { inBrowser, canPrefetch } from './utils'\n\nconst preFetched = {}\n\n/**\n * Checks if a feature on `link` is natively supported.\n * Examples of features include `prefetch` and `preload`.\n * @param {string} feature - name of the feature to test\n * @return {Boolean} whether the feature is supported\n */\nfunction support(feature) {\n  if (!inBrowser) {\n    return\n  }\n  const link = document.createElement('link')\n  return link.relList && link.relList.supports && link.relList.supports(feature)\n}\n\n/**\n * Fetches a given URL using `<link rel=prefetch>`\n * @param {string} url - the URL to fetch\n * @return {Object} a Promise\n */\nfunction linkPrefetchStrategy(url) {\n  return new Promise((resolve, reject) => {\n    const link = document.createElement(`link`)\n    link.rel = `prefetch`\n    link.href = url\n\n    link.addEventListener('load', resolve)\n    link.addEventListener('error', reject)\n\n    document.head.appendChild(link)\n  })\n}\n\n/**\n * Fetches a given URL using XMLHttpRequest\n * @param {string} url - the URL to fetch\n * @return {Object} a Promise\n */\nfunction xhrPrefetchStrategy(url) {\n  return new Promise((resolve, reject) => {\n    const req = new XMLHttpRequest()\n\n    req.open(`GET`, url, (req.withCredentials = true))\n\n    req.addEventListener('load', () => {\n      req.status === 200 ? resolve() : reject()\n    })\n\n    req.send()\n  })\n}\n\n/**\n * Fetches a given URL using the Fetch API. Falls back\n * to XMLHttpRequest if the API is not supported.\n * @param {string} url - the URL to fetch\n * @return {Object} a Promise\n */\nfunction highPriFetchStrategy(url) {\n  // TODO: Investigate using preload for high-priority\n  // fetches. May have to sniff file-extension to provide\n  // valid 'as' values. In the future, we may be able to\n  // use Priority Hints here.\n  //\n  // As of 2018, fetch() is high-priority in Chrome\n  // and medium-priority in Safari.\n  return self.fetch\n    ? fetch(url, { credentials: `include` })\n    : xhrPrefetchStrategy(url)\n}\n\nconst supportedPrefetchStrategy = support('prefetch')\n  ? linkPrefetchStrategy\n  : xhrPrefetchStrategy\n\n/**\n * Prefetch a given URL with an optional preferred fetch priority\n * @param {String} url - the URL to fetch\n * @param {Boolean} isPriority - if is \"high\" priority\n * @param {Object} conn - navigator.connection (internal)\n * @return {Object} a Promise\n */\nfunction prefetcher(url, isPriority) {\n  if (!canPrefetch || preFetched[url]) {\n    return\n  }\n\n  // Wanna do something on catch()?\n  return (isPriority ? highPriFetchStrategy : supportedPrefetchStrategy)(\n    url\n  ).then(() => {\n    preFetched[url] = true\n  })\n}\n\nexport default prefetcher\n","import prefetch from './prefetch'\nimport { canPrefetch, supportIntersectionObserver, inBrowser } from './utils'\n\nfunction installRouterPrefetch(\n  Vue,\n  { componentName = 'RouterLink', prefetch: enablePrefetch = true } = {}\n) {\n  const observer =\n    supportIntersectionObserver &&\n    new window.IntersectionObserver(entries => {\n      entries.forEach(entry => {\n        if (entry.isIntersecting) {\n          entry.target._linkPrefetch()\n        }\n      })\n    })\n\n  const requestIdleCallback =\n    (inBrowser && window.requestIdleCallback) ||\n    function(cb, { timeout = 1 }) {\n      const start = Date.now()\n      return setTimeout(() => {\n        cb({\n          didTimeout: false,\n          timeRemaining() {\n            return Math.max(0, 50 - (Date.now() - start))\n          }\n        })\n      }, timeout)\n    }\n\n  const RouterLink = Vue.component('RouterLink') || Vue.component('router-link')\n\n  if (process.env.NODE_ENV === 'development' && !RouterLink) {\n    console.error(\n      `[vue-router-prefetch] You need to call Vue.use(VueRouter) before this plugin!`\n    )\n  }\n\n  const Link = {\n    name: componentName,\n    extends: RouterLink,\n    props: {\n      prefetch: {\n        type: Boolean,\n        default: enablePrefetch\n      },\n      prefetchFiles: {\n        type: Array\n      },\n      timeout: {\n        type: Number,\n        default: 2000\n      }\n    },\n    mounted() {\n      if (this.prefetch && observer && canPrefetch) {\n        requestIdleCallback(this.observe, { timeout: this.timeout })\n      }\n    },\n    beforeDestroy() {\n      this.unobserve()\n    },\n    methods: {\n      observe() {\n        observer.observe(this.$el)\n        this.$el._linkPrefetch = this.linkPrefetch\n        this._linkObserved = true\n      },\n      unobserve() {\n        if (this._linkObserved) {\n          observer.unobserve(this.$el)\n        }\n      },\n      getComponents() {\n        return this.$router.getMatchedComponents(this.to).filter(Component => {\n          return typeof Component === 'function' && Component.cid === undefined\n        })\n      },\n      linkPrefetch() {\n        const { route } = this.$router.resolve(this.to)\n\n        if (route.meta.__prefetched) return\n\n        route.meta.__prefetched = true\n\n        if (route.meta.prefetch !== false) {\n          // Prefetch route component\n          const components = this.getComponents()\n          for (const Component of components) {\n            this.$emit('prefetch', this.to)\n            Component() // eslint-disable-line new-cap\n          }\n        }\n\n        if (typeof route.meta.prefetch === 'function') {\n          route.meta.prefetch(route)\n        }\n\n        // Prefetch addtional files\n        const prefetchFiles = [\n          ...(this.prefetchFiles || []),\n          ...(route.meta.prefetchFiles || [])\n        ]\n        if (prefetchFiles.length > 0) {\n          for (const file of prefetchFiles) {\n            prefetch(file)\n          }\n        }\n\n        this.unobserve()\n      }\n    }\n  }\n\n  Vue.component(Link.name, Link)\n}\n\nexport {\n  prefetch,\n  // Export as `install` to make `Vue.use(require('vue-router-prefetch'))` work\n  installRouterPrefetch as install\n}\n\nexport default installRouterPrefetch\n"],"names":["const","inBrowser","window","conn","navigator","connection","canPrefetch","effectiveType","indexOf","saveData","supportIntersectionObserver","IntersectionObserver","preFetched","xhrPrefetchStrategy","url","Promise","resolve","reject","req","XMLHttpRequest","open","withCredentials","addEventListener","status","send","supportedPrefetchStrategy","feature","link","document","createElement","relList","supports","support","rel","href","head","appendChild","prefetcher","isPriority","self","fetch","credentials","then","installRouterPrefetch","Vue","ref","observer","entries","forEach","entry","isIntersecting","target","_linkPrefetch","requestIdleCallback","cb","start","Date","now","setTimeout","didTimeout","timeRemaining","Math","max","timeout","RouterLink","component","process","env","NODE_ENV","console","error","Link","name","componentName","extends","props","prefetch","type","Boolean","default","enablePrefetch","prefetchFiles","Array","Number","mounted","this","observe","beforeDestroy","unobserve","methods","$el","linkPrefetch","_linkObserved","getComponents","$router","getMatchedComponents","to","filter","Component","undefined","cid","route","meta","__prefetched","$emit","length"],"mappings":"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"}