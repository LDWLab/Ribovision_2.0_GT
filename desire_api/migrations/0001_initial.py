# Generated by Django 2.2.5 on 2020-07-06 15:10

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='AdResidues',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'AD_Residues',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Alignment',
            fields=[
                ('aln_id', models.AutoField(db_column='Aln_id', primary_key=True, serialize=False)),
                ('name', models.CharField(db_column='Name', max_length=45)),
                ('method', models.CharField(db_column='Method', max_length=45)),
                ('source', models.CharField(db_column='Source', max_length=10)),
            ],
            options={
                'db_table': 'Alignment',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AlnData',
            fields=[
                ('aln_data_id', models.AutoField(db_column='Aln_Data_id', primary_key=True, serialize=False)),
                ('aln_pos', models.IntegerField()),
                ('polymer_order', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'Aln_Data',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AlnDomains',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('compartment', models.CharField(max_length=1)),
            ],
            options={
                'db_table': 'Aln_Domains',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AssociatedData',
            fields=[
                ('data_id', models.AutoField(db_column='Data_id', primary_key=True, serialize=False)),
                ('type', models.CharField(db_column='Type', max_length=45)),
                ('value', models.CharField(db_column='Value', max_length=45)),
            ],
            options={
                'db_table': 'Associated_Data',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Chainlist',
            fields=[
                ('chainlist_id', models.IntegerField(db_column='ChainList_id', primary_key=True, serialize=False)),
                ('chainname', models.CharField(blank=True, db_column='ChainName', max_length=3, null=True)),
            ],
            options={
                'db_table': 'ChainList',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Nomenclature',
            fields=[
                ('nom_id', models.AutoField(primary_key=True, serialize=False)),
                ('new_name', models.CharField(max_length=10)),
                ('occurrence', models.CharField(max_length=1)),
                ('moleculegroup', models.CharField(blank=True, db_column='MoleculeGroup', max_length=45, null=True)),
            ],
            options={
                'db_table': 'Nomenclature',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='OldName',
            fields=[
                ('old_id', models.AutoField(primary_key=True, serialize=False)),
                ('old_name', models.CharField(max_length=45)),
                ('n_b_y_h_a', models.CharField(db_column='N_B_Y_H_A', max_length=3)),
            ],
            options={
                'db_table': 'Old_name',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='PolymerAlignments',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'Polymer_Alignments',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='PolymerData',
            fields=[
                ('pdata_id', models.AutoField(db_column='PData_id', primary_key=True, serialize=False)),
                ('gi', models.CharField(db_column='GI', max_length=45, unique=True)),
                ('genesymbol', models.CharField(blank=True, db_column='GeneSymbol', max_length=45, null=True)),
                ('genedescription', models.CharField(blank=True, db_column='GeneDescription', max_length=100, null=True)),
            ],
            options={
                'db_table': 'Polymer_Data',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Residues',
            fields=[
                ('resi_id', models.AutoField(primary_key=True, serialize=False)),
                ('resnum', models.IntegerField(db_column='resNum')),
                ('unmodresname', models.CharField(db_column='unModResName', max_length=1)),
                ('modresname', models.CharField(blank=True, db_column='modResName', max_length=1, null=True)),
                ('codon', models.CharField(blank=True, db_column='codon', max_length=45, null=True)),
            ],
            options={
                'db_table': 'Residues',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Secondarystructures',
            fields=[
                ('secstr_id', models.AutoField(db_column='SecStr_id', primary_key=True, serialize=False)),
                ('moleculegroup', models.CharField(db_column='MoleculeGroup', max_length=45)),
                ('variation', models.CharField(db_column='Variation', max_length=45)),
                ('name', models.CharField(blank=True, db_column='Name', max_length=255, null=True)),
                ('font_size_svg', models.DecimalField(blank=True, db_column='Font_Size_SVG', decimal_places=1, max_digits=2, null=True)),
                ('font_size_canvas', models.DecimalField(blank=True, db_column='Font_Size_Canvas', decimal_places=1, max_digits=2, null=True)),
                ('circle_radius', models.DecimalField(blank=True, db_column='Circle_Radius', decimal_places=1, max_digits=2, null=True)),
            ],
            options={
                'db_table': 'SecondaryStructures',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='SecondaryTertiary',
            fields=[
                ('secondary_tertiary_id', models.IntegerField(primary_key=True, serialize=False)),
            ],
            options={
                'db_table': 'Secondary_Tertiary',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Species',
            fields=[
                ('strain_id', models.IntegerField(primary_key=True, serialize=False)),
                ('name', models.CharField(blank=True, max_length=60, null=True)),
                ('strain', models.CharField(blank=True, max_length=100, null=True)),
                ('taxid', models.IntegerField(blank=True, null=True)),
                ('abbreviation', models.CharField(blank=True, db_column='Abbreviation', max_length=45, null=True)),
            ],
            options={
                'db_table': 'Species',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='SpeciesTaxgroup',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'Species_TaxGroup',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='SsData',
            fields=[
                ('ssd_id', models.AutoField(db_column='SSD_id', primary_key=True, serialize=False)),
                ('map_index', models.IntegerField()),
                ('x', models.FloatField(blank=True, db_column='X', null=True)),
                ('y', models.FloatField(blank=True, db_column='Y', null=True)),
            ],
            options={
                'db_table': 'SS_Data',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='StrucfoldChains',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'StrucFold_Chains',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='StrucfoldResidues',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'StrucFold_Residues',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='StructuralFolds',
            fields=[
                ('struc_fold_id', models.AutoField(primary_key=True, serialize=False)),
                ('level', models.CharField(db_column='Level', max_length=45)),
                ('name', models.CharField(db_column='Name', max_length=45)),
                ('classification_system', models.CharField(max_length=45)),
                ('external_id', models.CharField(blank=True, max_length=45, null=True)),
            ],
            options={
                'db_table': 'Structural_Folds',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Taxgroups',
            fields=[
                ('taxgroup_id', models.IntegerField(primary_key=True, serialize=False)),
                ('grouplevel', models.CharField(blank=True, db_column='groupLevel', max_length=45, null=True)),
                ('groupname', models.CharField(blank=True, db_column='groupName', max_length=45, null=True)),
            ],
            options={
                'db_table': 'TaxGroups',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Threedstructures',
            fields=[
                ('number_3d_structure_id', models.AutoField(db_column='3D_structure_id', primary_key=True, serialize=False)),
                ('structurename', models.CharField(blank=True, db_column='StructureName', max_length=50, null=True)),
            ],
            options={
                'db_table': 'ThreeDStructures',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='PolymerMetadata',
            fields=[
                ('polymer', models.OneToOneField(on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='desire_api.PolymerData')),
                ('accession_type', models.CharField(max_length=45)),
                ('polymer_type', models.CharField(max_length=45)),
                ('accession', models.CharField(blank=True, max_length=45, null=True)),
                ('fullseq', models.TextField(blank=True, db_column='Fullseq', null=True)),
            ],
            options={
                'db_table': 'Polymer_metadata',
                'managed': False,
            },
        ),
    ]
