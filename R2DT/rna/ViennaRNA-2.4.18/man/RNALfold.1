.\" DO NOT MODIFY THIS FILE!  It was generated by help2man 1.48.3.
.TH RNALFOLD "1" "April 2021" "RNALfold 2.4.18" "User Commands"
.SH NAME
RNALfold \- manual page for RNALfold 2.4.18
.SH SYNOPSIS
.B RNALfold
[\fI\,OPTION\/\fR]...
.SH DESCRIPTION
RNALfold 2.4.18
.PP
calculate locally stable secondary structures of RNAs
.PP
Compute locally stable RNA secondary structure with a maximal base pair span.
For a sequence of length n and a base pair span of L the algorithm uses only
O(n+L*L) memory and O(n*L*L) CPU time. Thus it is practical to "scan" very
large genomes for short RNA structures.
Output consists of a list of secondary structure components of size <= L, one
entry per line. Each output line contains the predicted local structure its
energy in kcal/mol and the starting position of the local structure.
.TP
\fB\-h\fR, \fB\-\-help\fR
Print help and exit
.TP
\fB\-\-detailed\-help\fR
Print help, including all details and hidden
options, and exit
.TP
\fB\-\-full\-help\fR
Print help, including hidden options, and exit
.TP
\fB\-V\fR, \fB\-\-version\fR
Print version and exit
.SS "General Options:"
.IP
Below are command line options which alter the general behavior of this
program
.TP
\fB\-v\fR, \fB\-\-verbose\fR
Be verbose
.IP
(default=off)
.TP
\fB\-L\fR, \fB\-\-span\fR=\fI\,INT\/\fR
Set the maximum distance between any two
pairing nucleotides.
.IP
(default=`150')
.IP
This option specifies the window length L and therefore the upper limit for
the distance between the bases i and j of any pair (i, j), i.e. (j \- i + 1)
<= L.
.TP
\fB\-\-noconv\fR
Do not automatically substitude nucleotide
"T" with "U"
.IP
(default=off)
.TP
\fB\-o\fR, \fB\-\-outfile[=\fR<filename>]
Print output to file instead of stdout
.IP
This option may be used to write all output to output files rather than
printing to stdout. The number of output files created for batch input
(multiple sequences) depends on three conditions: (i) In case an optional
filename is given as parameter argument, a single file with the specified
filename will be written into. If the optional argument is omitted, (ii)
FASTA input or an active \fB\-\-auto\-id\fR switch will write to multiple files that
follow the naming scheme "prefix.lfold". Here, "prefix" is taken from the
sequence id as specified in the FASTA header. Lastly, (iii) single\-line
sequence input without FASTA header will be written to a single file
"RNALfold_output.lfold". In case an output file already exists, any output
of the program will be appended to it.
Since the filename argument is optional, it must immediately follow the short
option flag to not be mistaken as new parameter to the program. For instance
\e'\-ornafold.out\e' will write to a file "rnafold.out".
Note: Any special characters in the filename will be replaced by the filename
delimiter, hence there is no way to pass an entire directory path through
this option yet. (See also the "\-\-filename\-delim" parameter)
.TP
\fB\-i\fR, \fB\-\-infile=\fR<filename>
Read a file instead of reading from stdin
.IP
The default behavior of RNALfold is to read input from stdin. Using this
parameter the user can specify an input file name where data is read from.
.TP
\fB\-\-auto\-id\fR
Automatically generate an ID for each sequence.
(default=off)
.IP
The default mode of RNALfold is to automatically determine an ID from the
input sequence data if the input file format allows to do that. Sequence IDs
are usually given in the FASTA header of input sequences. If this flag is
active, RNALfold ignores any IDs retrieved from the input and automatically
generates an ID for each sequence. This ID consists of a prefix and an
increasing number. This flag can also be used to add a FASTA header to the
output even if the input has none.
.TP
\fB\-\-id\-prefix\fR=\fI\,prefix\/\fR
Set prefix for automatically generated IDs
(default=`sequence')
.IP
If this parameter is set, each sequence will be prefixed with the provided
string. Hence, the output files will obey the following naming scheme:
"prefix_xxxx.lfold" where xxxx is the sequence number. Note: Setting this
parameter implies \fB\-\-auto\-id\fR.
.TP
\fB\-\-id\-delim\fR=\fI\,delimiter\/\fR
Change prefix delimiter for automatically
generated ids.
.IP
(default=`_')
.IP
This parameter can be used to change the default delimiter "_" between
.IP
the prefix string and the increasing number for automatically generated IDs
.TP
\fB\-\-id\-digits\fR=\fI\,INT\/\fR
Specify the number of digits of the counter in
automatically generated alignment IDs.
.IP
(default=`4')
.IP
When alignments IDs are automatically generated, they receive an increasing
number, starting with 1. This number will always be left\-padded by leading
zeros, such that the number takes up a certain width. Using this parameter,
the width can be specified to the users need. We allow numbers in the range
[1:18]. This option implies \fB\-\-auto\-id\fR.
.TP
\fB\-\-id\-start\fR=\fI\,LONG\/\fR
Specify the first number in automatically
generated alignment IDs.
.IP
(default=`1')
.IP
When sequence IDs are automatically generated, they receive an increasing
number, usually starting with 1. Using this parameter, the first number can
be specified to the users requirements. Note: negative numbers are not
allowed.
Note: Setting this parameter implies to ignore any IDs retrieved from the
input data, i.e. it activates the \fB\-\-auto\-id\fR flag.
.TP
\fB\-\-filename\-delim\fR=\fI\,delimiter\/\fR
Change the delimiting character that is used
.IP
for sanitized filenames
.IP
(default=`ID\-delimiter')
.IP
This parameter can be used to change the delimiting character used while
sanitizing filenames, i.e. replacing invalid characters. Note, that the
default delimiter ALWAYS is the first character of the "ID delimiter" as
supplied through the \fB\-\-id\-delim\fR option. If the delimiter is a whitespace
character or empty, invalid characters will be simply removed rather than
substituted. Currently, we regard the following characters as illegal for use
in filenames: backslash '\e', slash '/', question mark '?', percent sign '%',
asterisk '*', colon ':', pipe symbol '|', double quote '"', triangular
brackets '<' and '>'.
.TP
\fB\-\-filename\-full\fR
Use full FASTA header to create filenames
.IP
(default=off)
.IP
This parameter can be used to deactivate the default behavior of limiting
output filenames to the first word of the sequence ID. Consider the following
example: An input with FASTA header ">NM_0001 Homo Sapiens some gene"
usually produces output files with the prefix "NM_0001" without the
additional data available in the FASTA header, e.g. "NM_0001.lfold". With
this flag set, no truncation of the output filenames is performed, i.e.
output filenames receive the full FASTA header data as prefixes. Note,
however, that invalid characters (such as whitespace) will be substituted by
a delimiting character or simply removed, (see also the parameter option
\fB\-\-filename\-delim\fR).
.TP
\fB\-\-commands=\fR<filename>
Read additional commands from file
.IP
Commands include hard and soft constraints, but also structure motifs in
hairpin and interior loops that need to be treeted differently. Furthermore,
commands can be set for unstructured and structured domains.
.SS "Algorithms:"
.IP
Select additional algorithms which should be included in the calculations.
The Minimum free energy (MFE) and a structure representative are calculated
in any case.
.TP
\fB\-z\fR, \fB\-\-zscore\fR[=\fI\,DOUBLE\/\fR]
Limit the output to predictions with a Z\-score
below a threshold
.IP
(default=`\-2')
.IP
This option activates z\-score regression using a trained SVM. Any predicted
structure that exceeds the specified threshold will be ommited from the
output.
Since the Z\-score threshold is given as a negative number, it must
immediately preceed the short option to not be mistaken as a separate
argument, e.g. \fB\-z\-2\fR.9 sets the threshold to a value of \fB\-2\fR.9
.TP
\fB\-\-zscore\-pre\-filter\fR
Apply the z\-score filtering in the forward
recursions
.IP
(default=off)
.IP
The default mode of z\-score filtering considers the entire structure space to
decide whether or not a locally optimal structure at any position i is
reported or not. When using this post\-filtering step, however, alternative
locally optimal structures
.IP
starting at i with higher energy but lower z\-score can be easily missed. The
.IP
pre\-filter
.IP
option restricts the structure space already in the forward recursions, such
.IP
that
.IP
only optimal solution among those candidates that satisfy the z\-score
.IP
threshold are considered. Therefore, good results according to the z\-score
threshold criterion are less likely to be superseded by results with better
energy but worse z\-score. Note, that activating this switch results in higher
computation time which scales linear in the window length.
.TP
\fB\-\-zscore\-report\-subsumed\fR
Report subsumed structures if their z\-score is
less than that of the enclosing structure
.IP
(default=off)
.IP
In default mode, RNALfold only reports locally optimal structures if they are
no constituents of another, larger structure with less free energy. In
z\-score mode, however, such a larger structure may have a higher z\-score,
thus may be less informative than the smaller substructure. Using this switch
activates reporting both, the smaller and the larger structure if the z\-score
of the smaller is lower than that of the larger.
.TP
\fB\-b\fR, \fB\-\-backtrack\-global\fR
Backtrack a global MFE structure.
(default=off)
.IP
Instead of just reporting the locally stable secondary structure a global MFE
structure can be constructed that only consists of locally optimal
substructures. This switch activates a post\-processing step that takes the
locally optimal structures to generate the global MFE structure which
constitutes the MFE value reported in the last line. The respective global
MFE structure is printed just after the inut sequence part on the last line,
preceding the global MFE score.
Note, that this option implies \fB\-o\fR/\-\-outfile since the locally optimal
structures must be read after the regular prediction step! Also note, that
using this this option in combination with \fB\-z\fR/\-\-zscore implies
\fB\-\-zscore\-hard\-filter\fR to ensure proper construction of the global MFE
structure!
.TP
\fB\-g\fR, \fB\-\-gquad\fR
Incoorporate G\-Quadruplex formation into the
structure prediction algorithm
.IP
(default=off)
.TP
\fB\-\-shape=\fR<filename>
Use SHAPE reactivity data to guide structure
predictions.
.TP
\fB\-\-shapeMethod\fR=\fI\,D\/\fR/Z/W
Include SHAPE reactivity data according to a
particular method.
.IP
(default=`D')
.IP
The following methods can be used to convert SHAPE reactivities into pseudo
energy contributions.
.IP
\&'D': Convert by using a linear equation according to Deigan et al 2009. The
calculated pseudo energies will be applied for every nucleotide involved in a
stacked pair. This method is recognized by a capital 'D' in the provided
parameter, i.e.: \fB\-\-shapeMethod=\fR"D" is the default setting. The slope 'm'
and the intercept 'b' can be set to a non\-default value if necessary,
otherwise m=1.8 and b=\-0.6. To alter these parameters, e.g. m=1.9 and b=\-0.7,
use a parameter string like this: \fB\-\-shapeMethod=\fR"Dm1.9b\-0.7". You may also
provide only one of the two parameters like: \fB\-\-shapeMethod=\fR"Dm1.9" or
\fB\-\-shapeMethod=\fR"Db\-0.7".
.IP
\&'Z': Convert SHAPE reactivities to pseudo energies according to Zarringhalam
et al 2012. SHAPE reactivities will be converted to pairing probabilities by
using linear mapping. Aberration from the observed pairing probabilities will
be penalized during the folding recursion. The magnitude of the penalties can
affected by adjusting the factor beta (e.g. \fB\-\-shapeMethod=\fR"Zb0.8").
.IP
\&'W': Apply a given vector of perturbation energies to unpaired nucleotides
according to Washietl et al 2012. Perturbation vectors can be calculated by
using RNApvmin.
.TP
\fB\-\-shapeConversion\fR=\fI\,type\/\fR
Convert SHAPE reactivity according to a
particular model.
.IP
(default=`O')
.IP
This method allows one to specify the method or model used to convert SHAPE
reactivities to pairing (or unpaired) probabilities when using the SHAPE
approach of Zarringhalam et al. 2012. The following single letter types are
recognized:
.IP
\&'M': Use linear mapping according to Zarringhalam et al. 2012.
.IP
\&'C': Use a cutoff\-approach to divide into paired and unpaired nucleotides
(e.g. "C0.25")
.IP
\&'S': Skip the normalizing step since the input data already represents
probabilities for being unpaired rather than raw reactivity values
.IP
\&'L': Use a linear model to convert the reactivity into a probability for
being unpaired (e.g. "Ls0.68i0.2" to use a slope of 0.68 and an intercept
of 0.2)
.IP
\&'O': Use a linear model to convert the log of the reactivity into a
probability for being unpaired (e.g. "Os1.6i\-2.29" to use a slope of 1.6
and an intercept of \fB\-2\fR.29)
.SS "Model Details:"
.IP
You may tweak the energy model and pairing rules additionally using the
following parameters
.TP
\fB\-T\fR, \fB\-\-temp\fR=\fI\,DOUBLE\/\fR
Rescale energy parameters to a temperature of
temp C. Default is 37C.
.TP
\fB\-4\fR, \fB\-\-noTetra\fR
Do not include special tabulated stabilizing
energies for tri\-, tetra\- and hexaloop
hairpins.
.IP
(default=off)
.TP
\fB\-d\fR, \fB\-\-dangles\fR=\fI\,INT\/\fR
Change the dangling end model
(default=`2')
.IP
This option allows one to change the model "dangling end" energy
contributions, i.e. those additional contributions from bases adjacent to
helices in free ends and multi\-loops
With \fB\-d1\fR only unpaired bases can participate in at most one dangling end.
With \fB\-d2\fR this check is ignored, dangling energies will be added for the bases
adjacent to a helix on both sides in any case; this is the default for mfe
and partition function folding (\fB\-p\fR).
The option \fB\-d0\fR ignores dangling ends altogether (mostly  for debugging).
With \fB\-d3\fR mfe folding will allow coaxial stacking of adjacent helices in
multi\-loops. At the moment the implementation will not allow coaxial stacking
of the two interior pairs in a loop of degree 3 and works only for mfe
folding.
.IP
Note that with \fB\-d1\fR and \fB\-d3\fR only the MFE computations will be using this
setting while partition function uses \fB\-d2\fR setting, i.e. dangling ends will be
treated differently.
.TP
\fB\-\-noLP\fR
Produce structures without lonely pairs
(helices of length 1).
.IP
(default=off)
.IP
For partition function folding this only disallows pairs that can only occur
isolated. Other pairs may still occasionally occur as helices of length 1.
.TP
\fB\-\-noGU\fR
Do not allow GU pairs
.IP
(default=off)
.TP
\fB\-\-noClosingGU\fR
Do not allow GU pairs at the end of helices
.IP
(default=off)
.TP
\fB\-P\fR, \fB\-\-paramFile\fR=\fI\,paramfile\/\fR
Read energy parameters from paramfile, instead
of using the default parameter set.
.IP
Different sets of energy parameters for RNA and DNA should accompany your
distribution.
See the RNAlib documentation for details on the file format. When passing the
placeholder file name "DNA", DNA parameters are loaded without the need to
actually specify any input file.
.TP
\fB\-\-nsp\fR=\fI\,STRING\/\fR
Allow other pairs in addition to the usual
AU,GC,and GU pairs.
.IP
Its argument is a comma separated list of additionally allowed pairs. If the
first character is a "\-" then AB will imply that AB and BA are allowed
pairs.
e.g. RNALfold \fB\-nsp\fR \fB\-GA\fR  will allow GA and AG pairs. Nonstandard pairs are
given 0 stacking energy.
.TP
\fB\-e\fR, \fB\-\-energyModel\fR=\fI\,INT\/\fR
Rarely used option to fold sequences from the
artificial ABCD... alphabet, where A pairs B,
C\-D etc.  Use the energy parameters for GC
(\fB\-e\fR 1) or AU (\fB\-e\fR 2) pairs.
.SH REFERENCES
.I If you use this program in your work you might want to cite:

R. Lorenz, S.H. Bernhart, C. Hoener zu Siederdissen, H. Tafer, C. Flamm, P.F. Stadler and I.L. Hofacker (2011),
"ViennaRNA Package 2.0",
Algorithms for Molecular Biology: 6:26 

I.L. Hofacker, W. Fontana, P.F. Stadler, S. Bonhoeffer, M. Tacker, P. Schuster (1994),
"Fast Folding and Comparison of RNA Secondary Structures",
Monatshefte f. Chemie: 125, pp 167-188

R. Lorenz, I.L. Hofacker, P.F. Stadler (2016),
"RNA folding with hard and soft constraints",
Algorithms for Molecular Biology 11:1 pp 1-13

I.L. Hofacker, B. Priwitzer, and P.F. Stadler (2004),
"Prediction of Locally Stable RNA Secondary Structures for Genome-Wide Surveys",
Bioinformatics: 20, pp 186-190


.I The energy parameters are taken from:

D.H. Mathews, M.D. Disney, D. Matthew, J.L. Childs, S.J. Schroeder, J. Susan, M. Zuker, D.H. Turner (2004),
"Incorporating chemical modification constraints into a dynamic programming algorithm for prediction of RNA secondary structure",
Proc. Natl. Acad. Sci. USA: 101, pp 7287-7292

D.H Turner, D.H. Mathews (2009),
"NNDB: The nearest neighbor parameter database for predicting stability of nucleic acid secondary structure",
Nucleic Acids Research: 38, pp 280-282
.SH AUTHOR

Ivo L Hofacker, Peter F Stadler, Ronny Lorenz
.SH "REPORTING BUGS"

If in doubt our program is right, nature is at fault.
Comments should be sent to rna@tbi.univie.ac.at.
.SH "SEE ALSO"

RNAplfold(1) RNALalifold(1)
