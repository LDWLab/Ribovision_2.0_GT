.\" DO NOT MODIFY THIS FILE!  It was generated by help2man 1.48.3.
.TH RNAHEAT "1" "April 2021" "RNAheat 2.4.18" "User Commands"
.SH NAME
RNAheat \- manual page for RNAheat 2.4.18
.SH SYNOPSIS
.B RNAheat
[\fI\,OPTIONS\/\fR] [\fI\,<input0>\/\fR] [\fI\,<input1>\/\fR]...
.SH DESCRIPTION
RNAheat 2.4.18
.PP
calculate specific heat of RNAs
.PP
Reads RNA sequences from stdin or input files and calculates their specific
heat in the temperature range t1 to t2, from the partition function by numeric
differentiation. The result is written to stdout as a list of pairs of
temperature in C and specific heat in Kcal/(Mol*K).
The program will continue to read new sequences until a line consisting of the
single character "@" or an end of file condition is encountered.
.TP
\fB\-h\fR, \fB\-\-help\fR
Print help and exit
.TP
\fB\-\-detailed\-help\fR
Print help, including all details and hidden
options, and exit
.TP
\fB\-\-full\-help\fR
Print help, including hidden options, and exit
.TP
\fB\-V\fR, \fB\-\-version\fR
Print version and exit
.SS "General Options:"
.IP
Below are command line options which alter the general behavior of this
program
.TP
\fB\-\-Tmin\fR=\fI\,t1\/\fR
Lowest temperature
.IP
(default=`0')
.TP
\fB\-\-Tmax\fR=\fI\,t2\/\fR
Highest temperature
.IP
(default=`100')
.TP
\fB\-\-stepsize\fR=\fI\,FLOAT\/\fR
Calculate partition function every stepsize
degrees C
.IP
(default=`1.')
.TP
\fB\-m\fR, \fB\-\-ipoints\fR=\fI\,ipoints\/\fR
The program fits a parabola to 2*ipoints+1 data
points to calculate 2nd derivatives. Increasing
this parameter produces a smoother curve
.IP
(default=`2')
.TP
\fB\-\-noconv\fR
Do not automatically substitude nucleotide "T"
with "U"
.IP
(default=off)
.TP
\fB\-j\fR, \fB\-\-jobs\fR[=\fI\,number\/\fR]
Split batch input into jobs and start processing
in parallel using multiple threads. A value of 0
indicates to use as many parallel threads as
computation cores are available.
.IP
(default=`0')
.IP
Default processing of input data is performed in a serial fashion, i.e. one
sequence at a time. Using this switch, a user can instead start the
computation for many sequences in the input in parallel. RNAheat will create
as many parallel computation slots as specified and assigns input sequences
of the input file(s) to the available slots. Note, that this increases memory
consumption since input alignments have to be kept in memory until an empty
compute slot is available and each running job requires its own dynamic
programming matrices.
.TP
\fB\-\-unordered\fR
Do not try to keep output in order with input
while parallel processing is in place.
.IP
(default=off)
.IP
When parallel input processing (\fB\-\-jobs\fR flag) is enabled, the order in which
input is processed depends on the host machines job scheduler. Therefore, any
output to stdout or files generated by this program will most likely not
follow the order of the corresponding input data set. The default of RNAheat
is to use a specialized data structure to still keep the results output in
order with the input data. However, this comes with a trade\-off in terms of
memory consumption, since all output must be kept in memory for as long as no
chunks of consecutive, ordered output are available. By setting this flag,
RNAheat will not buffer individual results but print them as soon as they
have been computated.
.TP
\fB\-i\fR, \fB\-\-infile=\fR<filename>
Read a file instead of reading from stdin
.IP
The default behavior of RNAheat is to read input from stdin or the file(s)
that follow(s) the RNAheat command. Using this parameter the user can specify
input file names where data is read from. Note, that any additional files
supplied to RNAheat are still processed as well.
.TP
\fB\-\-auto\-id\fR
Automatically generate an ID for each sequence.
(default=off)
.IP
The default mode of RNAheat is to automatically determine an ID from the
input sequence data if the input file format allows to do that. Sequence IDs
are usually given in the FASTA header of input sequences. If this flag is
active, RNAheat ignores any IDs retrieved from the input and automatically
generates an ID for each sequence. This ID consists of a prefix and an
increasing number. This flag can also be used to add a FASTA header to the
output even if the input has none.
.TP
\fB\-\-id\-prefix\fR=\fI\,prefix\/\fR
Prefix for automatically generated IDs (as used in
output file names)
.IP
(default=`sequence')
.IP
If this parameter is set, each sequences' FASTA id will be prefixed with the
provided string. FASTA ids then take the form ">prefix_xxxx" where xxxx is
the sequence number. Note: Setting this parameter implies \fB\-\-auto\-id\fR.
.TP
\fB\-\-id\-delim\fR=\fI\,delimiter\/\fR
Change the delimiter between prefix and increasing
number for automatically generated IDs (as used
in output file names)
.IP
(default=`_')
.IP
This parameter can be used to change the default delimiter "_" between
.IP
the prefix string and the increasing number for automatically generated ID.
.TP
\fB\-\-id\-digits\fR=\fI\,INT\/\fR
Specify the number of digits of the counter in
automatically generated alignment IDs.
.IP
(default=`4')
.IP
When alignments IDs are automatically generated, they receive an increasing
number, starting with 1. This number will always be left\-padded by leading
zeros, such that the number takes up a certain width. Using this parameter,
the width can be specified to the users need. We allow numbers in the range
[1:18]. This option implies \fB\-\-auto\-id\fR.
.TP
\fB\-\-id\-start\fR=\fI\,LONG\/\fR
Specify the first number in automatically
generated alignment IDs.
.IP
(default=`1')
.IP
When sequence IDs are automatically generated, they receive an increasing
number, usually starting with 1. Using this parameter, the first number can
be specified to the users requirements. Note: negative numbers are not
allowed.
Note: Setting this parameter implies to ignore any IDs retrieved from the
input data, i.e. it activates the \fB\-\-auto\-id\fR flag.
.SS "Structure Constraints:"
.IP
Command line options to interact with the structure constraints feature of
this program
.TP
\fB\-\-maxBPspan\fR=\fI\,INT\/\fR
Set the maximum base pair span
.IP
(default=`\-1')
.SS "Model Details:"
.TP
\fB\-4\fR, \fB\-\-noTetra\fR
Do not include special tabulated stabilizing
energies for tri\-, tetra\- and hexaloop hairpins.
Mostly for testing.
.IP
(default=off)
.TP
\fB\-d\fR, \fB\-\-dangles\fR=\fI\,INT\/\fR
How to treat "dangling end" energies for bases
adjacent to helices in free ends and multi\-loops
.IP
(default=`2')
.IP
With \fB\-d2\fR dangling energies will be added for the bases adjacent to a helix on
both sides in any case
.HP
\fB\-d0\fR ignores dangling ends altogether (mostly for debugging).
.TP
\fB\-\-noLP\fR
Produce structures without lonely pairs (helices
of length 1).
.IP
(default=off)
.IP
For partition function folding this only disallows pairs that can only occur
isolated. Other pairs may still occasionally occur as helices of length 1.
.TP
\fB\-\-noGU\fR
Do not allow GU pairs
.IP
(default=off)
.TP
\fB\-\-noClosingGU\fR
Do not allow GU pairs at the end of helices
.IP
(default=off)
.TP
\fB\-P\fR, \fB\-\-paramFile\fR=\fI\,paramfile\/\fR
Read energy parameters from paramfile, instead of
using the default parameter set.
.IP
Different sets of energy parameters for RNA and DNA should accompany your
distribution.
See the RNAlib documentation for details on the file format. When passing the
placeholder file name "DNA", DNA parameters are loaded without the need to
actually specify any input file.
.TP
\fB\-\-nsp\fR=\fI\,STRING\/\fR
Allow other pairs in addition to the usual
AU,GC,and GU pairs.
.IP
Its argument is a comma separated list of additionally allowed pairs. If the
first character is a "\-" then AB will imply that AB and BA are allowed
pairs.
e.g. RNAheat \fB\-nsp\fR \fB\-GA\fR  will allow GA and AG pairs. Nonstandard pairs are
given 0 stacking energy.
.TP
\fB\-e\fR, \fB\-\-energyModel\fR=\fI\,INT\/\fR
Rarely used option to fold sequences from the
artificial ABCD... alphabet, where A pairs B,
C\-D etc.  Use the energy parameters for GC (\fB\-e\fR
1) or AU (\fB\-e\fR 2) pairs.
.TP
\fB\-g\fR, \fB\-\-gquad\fR
Incoorporate G\-Quadruplex formation into the
structure prediction algorithm.
.IP
(default=off)
.TP
\fB\-c\fR, \fB\-\-circ\fR
Assume a circular (instead of linear) RNA
molecule.
.IP
(default=off)
.SH REFERENCES
.I If you use this program in your work you might want to cite:

R. Lorenz, S.H. Bernhart, C. Hoener zu Siederdissen, H. Tafer, C. Flamm, P.F. Stadler and I.L. Hofacker (2011),
"ViennaRNA Package 2.0",
Algorithms for Molecular Biology: 6:26 

I.L. Hofacker, W. Fontana, P.F. Stadler, S. Bonhoeffer, M. Tacker, P. Schuster (1994),
"Fast Folding and Comparison of RNA Secondary Structures",
Monatshefte f. Chemie: 125, pp 167-188

R. Lorenz, I.L. Hofacker, P.F. Stadler (2016),
"RNA folding with hard and soft constraints",
Algorithms for Molecular Biology 11:1 pp 1-13

.I The energy parameters are taken from:

D.H. Mathews, M.D. Disney, D. Matthew, J.L. Childs, S.J. Schroeder, J. Susan, M. Zuker, D.H. Turner (2004),
"Incorporating chemical modification constraints into a dynamic programming algorithm for prediction of RNA secondary structure",
Proc. Natl. Acad. Sci. USA: 101, pp 7287-7292

D.H Turner, D.H. Mathews (2009),
"NNDB: The nearest neighbor parameter database for predicting stability of nucleic acid secondary structure",
Nucleic Acids Research: 38, pp 280-282
.SH AUTHOR

Ivo L Hofacker, Peter F Stadler, Ronny Lorenz
.SH "REPORTING BUGS"

If in doubt our program is right, nature is at fault.
Comments should be sent to rna@tbi.univie.ac.at.
.SH "SEE ALSO"

RNAfold(1)
