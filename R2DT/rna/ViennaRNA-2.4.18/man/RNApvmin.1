.\" DO NOT MODIFY THIS FILE!  It was generated by help2man 1.48.3.
.TH RNAPVMIN "1" "April 2021" "RNApvmin 2.4.18" "User Commands"
.SH NAME
RNApvmin \- manual page for RNApvmin 2.4.18
.SH SYNOPSIS
.B RNApvmin
[\fI\,options\/\fR] \fI\,<file.shape>\/\fR
.SH DESCRIPTION
RNApvmin 2.4.18
.PP
Calculate a perturbation vector that minimizes discripancies between predicted
and observed pairing probabilities
.PP
The program reads a RNA sequence from stdin and uses an iterative minimization
process to calculate a perturbation vector that minimizes the discripancies
between predicted pairing probabilites and observed pairing probabilities
(deduced from given shape reactivities). Experimental data is read from a given
SHAPE file and normalized to pairing probabilities. The experimental data has
to be provided in a multiline plain text file where each line has the format
\&'[position] [nucleotide] [absolute shape reactivity]' (e.g. '3 A 0.7'). The
objective function used for the minimization may be weighted by choosing
appropriate values for sigma and tau.
.PP
The minimization progress will be written to stderr. Once the minimization has
terminated, the obtained perturbation vector is written to stdout.
.TP
\fB\-h\fR, \fB\-\-help\fR
Print help and exit
.TP
\fB\-\-detailed\-help\fR
Print help, including all details and hidden
options, and exit
.TP
\fB\-\-full\-help\fR
Print help, including hidden options, and exit
.TP
\fB\-V\fR, \fB\-\-version\fR
Print version and exit
.SS "General Options:"
.IP
Below are command line options which alter the general behavior of this
program
.TP
\fB\-j\fR, \fB\-\-numThreads\fR=\fI\,INT\/\fR
Set the number of threads used for
calculations.
.TP
\fB\-\-shapeConversion\fR=\fI\,STRING\/\fR
Specify the method used to convert SHAPE
reactivities to pairing probabilities.
(default=`O')
.IP
The following methods can be used to convert SHAPE reactivities into the
probability for a certain nucleotide to be unpaired.
.IP
\&'M': Use linear mapping according to Zarringhalam et al. 2012
.IP
\&'C': Use a cutoff\-approach to divide into paired and unpaired nucleotides
(e.g. "C0.25")
.IP
\&'S': Skip the normalizing step since the input data already represents
probabilities for being unpaired rather than raw reactivity values
.IP
\&'L': Use a linear model to convert the reactivity into a probability for
being unpaired (e.g. "Ls0.68i0.2" to use a slope of 0.68 and an intercept
of 0.2)
.IP
\&'O': Use a linear model to convert the log of the reactivity into a
probability for being unpaired (e.g. "Os1.6i\-2.29" to use a slope of 1.6
and an intercept of \fB\-2\fR.29)
.TP
\fB\-\-tauSigmaRatio\fR=\fI\,DOUBLE\/\fR
Ratio of the weighting factors tau and sigma.
(default=`1.0')
.IP
A high ratio will lead to a solution as close as possible to the experimental
data, while a low ratio will lead to results close to the thermodynamic
prediction without guiding pseudo energies.
.TP
\fB\-\-objectiveFunction\fR=\fI\,INT\/\fR
The energies of the perturbation vector and the
discripancies between predicted and observed
pairing probabilities contribute to the
objective function. This parameter defines,
which function is used to process the
contributions before summing them up.
0 square
1 absolute.  (default=`0')
.TP
\fB\-\-sampleSize\fR=\fI\,INT\/\fR
The iterative minimization process requires to
evaluate the gradient of the objective
function.  (default=`1000')
.IP
A sample size of 0 leads to an analytical evaluation which scales as O(N^4).
Choosing a sample size >0 estimates the gradient by sampling the given number
of sequences from the ensemble, which is much faster.
.TP
\fB\-N\fR, \fB\-\-nonRedundant\fR
Enable non\-redundant sampling strategy.
(default=off)
.TP
\fB\-\-intermediatePath\fR=\fI\,STRING\/\fR Write an output file for each iteration of the
minimization process.
.IP
Each file contains the used perturbation vector and the score of the
objective function. The number of the iteration will be appended to the given
path.
.TP
\fB\-\-initialVector\fR=\fI\,DOUBLE\/\fR
Specify the vector of initial pertubations.
(default=`0')
.IP
Defines the initial perturbation vector which will be used as starting vector
for the minimization process. The value 0 results in a null vector. Every
other value x will be used to populate the initial vector with random numbers
from the interval [\-x,x].
.TP
\fB\-\-minimizer\fR=\fI\,ENUM\/\fR
Set the minimizing algorithm used for finding
an appropriate perturbation vector.
(possible values="conjugate_fr",
"conjugate_pr", "vector_bfgs",
"vector_bfgs2", "steepest_descent",
"default" default=`default')
.IP
The default option uses a custom implementation of the gradient descent
algorithms while all other options represent various algorithms implemented
in the GNU Scientific Library. When the GNU Scientific Library can not be
found, only the default minimizer is available.
.TP
\fB\-\-initialStepSize\fR=\fI\,DOUBLE\/\fR
The initial stepsize for the minimizer methods.
(default=`0.01')
.TP
\fB\-\-minStepSize\fR=\fI\,DOUBLE\/\fR
The minimal stepsize for the minizimer methods.
(default=`1e\-15')
.TP
\fB\-\-minImprovement\fR=\fI\,DOUBLE\/\fR
The minimal improvement in the default
minizimer method that has to be surpassed to
considered a new result a better one.
(default=`1e\-3')
.TP
\fB\-\-minimizerTolerance\fR=\fI\,DOUBLE\/\fR
The tolerance to be used in the GSL minimizer
.TP
methods.
(default=`1e\-3')
.SS "Model Details:"
.TP
\fB\-S\fR, \fB\-\-pfScale\fR=\fI\,DOUBLE\/\fR
Set scaling factor for Boltzmann factors to
prevent under/overflows.
.IP
In the calculation of the pf use scale*mfe as an estimate for the ensemble
free energy (used to avoid overflows). The default is 1.07, useful values are
1.0 to 1.2. Occasionally needed for long sequences.
You can also recompile the program to use double precision (see the README
file).
.TP
\fB\-T\fR, \fB\-\-temp\fR=\fI\,DOUBLE\/\fR
Rescale energy parameters to a temperature in
degrees centigrade.  (default=`37.0')
.TP
\fB\-4\fR, \fB\-\-noTetra\fR
Do not include special tabulated stabilizing
energies for tri\-, tetra\- and hexaloop
hairpins.  (default=off)
.IP
Mostly for testing.
.TP
\fB\-d\fR, \fB\-\-dangles\fR=\fI\,INT\/\fR
Specify "dangling end" model for bases
adjacent to helices in free ends and
multi\-loops.  (default=`2')
.IP
With \fB\-d1\fR only unpaired bases can participate in at most one dangling end.
With \fB\-d2\fR this check is ignored, dangling energies will be added for the bases
adjacent to a helix on both sides in any case; this is the default for mfe
and partition function folding (\fB\-p\fR).
The option \fB\-d0\fR ignores dangling ends altogether (mostly for debugging).
With \fB\-d3\fR mfe folding will allow coaxial stacking of adjacent helices in
multi\-loops. At the moment the implementation will not allow coaxial stacking
of the two interior pairs in a loop of degree 3 and works only for mfe
folding.
.IP
Note that with \fB\-d1\fR and \fB\-d3\fR only the MFE computations will be using this
setting while partition function uses \fB\-d2\fR setting, i.e. dangling ends will be
treated differently.
.TP
\fB\-\-noLP\fR
Produce structures without lonely pairs
(helices of length 1).  (default=off)
.IP
For partition function folding this only disallows pairs that can only occur
isolated. Other pairs may still occasionally occur as helices of length 1.
.TP
\fB\-\-noGU\fR
Do not allow GU pairs.  (default=off)
.TP
\fB\-\-noClosingGU\fR
Do not allow GU pairs at the end of helices.
(default=off)
.TP
\fB\-P\fR, \fB\-\-paramFile\fR=\fI\,paramfile\/\fR
Read energy parameters from paramfile, instead
of using the default parameter set.
.IP
Different sets of energy parameters for RNA and DNA should accompany your
distribution.
See the RNAlib documentation for details on the file format. When passing the
placeholder file name "DNA", DNA parameters are loaded without the need to
actually specify any input file.
.TP
\fB\-\-nsp\fR=\fI\,STRING\/\fR
Allow other pairs in addition to the usual
AU,GC,and GU pairs.
.IP
Its argument is a comma separated list of additionally allowed pairs. If the
first character is a "\-" then AB will imply that AB and BA are allowed
pairs.
e.g. RNAfold \fB\-nsp\fR \fB\-GA\fR  will allow GA and AG pairs. Nonstandard pairs are
given 0 stacking energy.
.TP
\fB\-e\fR, \fB\-\-energyModel\fR=\fI\,INT\/\fR
Set energy model.
.IP
Rarely used option to fold sequences from the artificial ABCD... alphabet,
where A pairs B, C\-D etc.  Use the energy parameters for GC (\fB\-e\fR 1) or AU (\fB\-e\fR
2) pairs.
.TP
\fB\-\-maxBPspan\fR=\fI\,INT\/\fR
Set the maximum base pair span.  (default=`\-1')
.SH REFERENCES
.I If you use this program in your work you might want to cite:

R. Lorenz, S.H. Bernhart, C. Hoener zu Siederdissen, H. Tafer, C. Flamm, P.F. Stadler and I.L. Hofacker (2011),
"ViennaRNA Package 2.0",
Algorithms for Molecular Biology: 6:26 

I.L. Hofacker, W. Fontana, P.F. Stadler, S. Bonhoeffer, M. Tacker, P. Schuster (1994),
"Fast Folding and Comparison of RNA Secondary Structures",
Monatshefte f. Chemie: 125, pp 167-188

R. Lorenz, I.L. Hofacker, P.F. Stadler (2016),
"RNA folding with hard and soft constraints",
Algorithms for Molecular Biology 11:1 pp 1-13

S. Washietl, I.L. Hofacker, P.F. Stadler, M. Kellis (2012)
"RNA folding with soft constraints: reconciliation of probing data and thermodynamics secondary structure prediction"
Nucl Acids Res: 40(10), pp 4261-4272


.I The energy parameters are taken from:

D.H. Mathews, M.D. Disney, D. Matthew, J.L. Childs, S.J. Schroeder, J. Susan, M. Zuker, D.H. Turner (2004),
"Incorporating chemical modification constraints into a dynamic programming algorithm for prediction of RNA secondary structure",
Proc. Natl. Acad. Sci. USA: 101, pp 7287-7292

D.H Turner, D.H. Mathews (2009),
"NNDB: The nearest neighbor parameter database for predicting stability of nucleic acid secondary structure",
Nucleic Acids Research: 38, pp 280-282
.SH EXAMPLES

RNApvmin acceptes a SHAPE file and a corresponding nucleotide sequence, which is read form stdin.

.nf
.ft CW
  RNApvmin sequence.shape < sequence.fasta > sequence.pv
.ft
.fi

The normalized SHAPE reactivity data has to be stored in a text file, where each line contains the position
and the reactivity for a certain nucleotide ([position] [nucleotide] [SHAPE reactivity]).

.nf
.ft CW
  1 A 1.286
  2 U 0.383
  3 C 0.033
  4 C 0.017
  ...
  ...
  98 U 0.234
  99 G 0.885
.ft
.fi

The nucleotide information in the SHAPE file is optional and will be used to cross check the given input sequence if present.
If SHAPE reactivities could not be determined for every nucleotide, missing values can simply be omited.

The progress of the minimization will be printed to stderr. Once a solution was found, the calculated perturbation vector
will be print to stdout and can then further be used to constrain RNAfold's MFE/partition function calculation by applying
the perturbation energies as soft constraints.

.nf
.ft CW
  RNAfold --shape=sequence.pv --shapeMethod=W < sequence.fasta
.ft
.fi
.SH AUTHOR

Dominik Luntzer, Ronny Lorenz
.SH "REPORTING BUGS"

If in doubt our program is right, nature is at fault.
Comments should be sent to rna@tbi.univie.ac.at.
