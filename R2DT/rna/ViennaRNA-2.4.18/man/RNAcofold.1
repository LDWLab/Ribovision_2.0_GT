.\" DO NOT MODIFY THIS FILE!  It was generated by help2man 1.48.3.
.TH RNACOFOLD "1" "April 2021" "RNAcofold 2.4.18" "User Commands"
.SH NAME
RNAcofold \- manual page for RNAcofold 2.4.18
.SH SYNOPSIS
.B RNAcofold
[\fI\,OPTION\/\fR]... [\fI\,FILE\/\fR]...
.SH DESCRIPTION
RNAcofold 2.4.18
.PP
calculate secondary structures of two RNAs with dimerization
.PP
The program works much like RNAfold, but allows one to specify two RNA
sequences which are then allowed to form a dimer structure. RNA sequences are
read from stdin in the usual format, i.e. each line of input corresponds to one
sequence, except for lines starting with ">" which contain the name of the
next sequence.
To compute the hybrid structure of two molecules, the two sequences must be
concatenated using the \e'&\e' character as separator.
RNAcofold can compute minimum free energy (mfe) structures, as well as
partition function (pf) and base pairing probability matrix (using the \fB\-p\fR
switch)
Since dimer formation is concentration dependent, RNAcofold can be used to
compute equilibrium concentrations for all five monomer and (homo/hetero)\-dimer
species, given input concentrations for the monomers.
Output consists of the mfe structure in bracket notation as well as PostScript
structure plots and "dot plot" files containing the pair probabilities, see
the RNAfold man page for details. In the dot plots a cross marks the chain
break between the two concatenated sequences.
The program will continue to read new sequences until a line consisting of the
single character @ or an end of file condition is encountered.
.TP
\fB\-h\fR, \fB\-\-help\fR
Print help and exit
.TP
\fB\-\-detailed\-help\fR
Print help, including all details and hidden
options, and exit
.TP
\fB\-\-full\-help\fR
Print help, including hidden options, and exit
.TP
\fB\-V\fR, \fB\-\-version\fR
Print version and exit
.SS "General Options:"
.IP
Command line options which alter the general behavior of this program
.TP
\fB\-v\fR, \fB\-\-verbose\fR
Be verbose.
.IP
(default=off)
.TP
\fB\-j\fR, \fB\-\-jobs\fR[=\fI\,number\/\fR]
Split batch input into jobs and start
processing in parallel using multiple
threads. A value of 0 indicates to use as
many parallel threads as computation cores
are available.
.IP
(default=`0')
.IP
Default processing of input data is performed in a serial fashion, i.e. one
sequence pair at a time. Using this switch, a user can instead start the
computation for many sequence pairs in the input in parallel. RNAcofold will
create as many parallel computation slots as specified and assigns input
sequences of the input file(s) to the available slots. Note, that this
increases memory consumption since input alignments have to be kept in memory
until an empty compute slot is available and each running job requires its
own dynamic programming matrices.
.TP
\fB\-\-unordered\fR
Do not try to keep output in order with input
while parallel processing is in place.
.IP
(default=off)
.IP
When parallel input processing (\fB\-\-jobs\fR flag) is enabled, the order in which
input is processed depends on the host machines job scheduler. Therefore, any
output to stdout or files generated by this program will most likely not
follow the order of the corresponding input data set. The default of
RNAcofold is to use a specialized data structure to still keep the results
output in order with the input data. However, this comes with a trade\-off in
terms of memory consumption, since all output must be kept in memory for as
long as no chunks of consecutive, ordered output are available. By setting
this flag, RNAcofold will not buffer individual results but print them as
soon as they have been computated.
.TP
\fB\-\-noPS\fR
Do not produce postscript drawing of the mfe
structure.
.IP
(default=off)
.TP
\fB\-\-noconv\fR
Do not automatically substitute nucleotide
"T" with "U"
.IP
(default=off)
.TP
\fB\-\-auto\-id\fR
Automatically generate an ID for each sequence.
(default=off)
.IP
The default mode of RNAcofold is to automatically determine an ID from the
input sequence data if the input file format allows to do that. Sequence IDs
are usually given in the FASTA header of input sequences. If this flag is
active, RNAcofold ignores any IDs retrieved from the input and automatically
generates an ID for each sequence. This ID consists of a prefix and an
increasing number. This flag can also be used to add a FASTA header to the
output even if the input has none.
.TP
\fB\-\-id\-prefix\fR=\fI\,prefix\/\fR
Prefix for automatically generated IDs (as used
in output file names)
.IP
(default=`sequence')
.IP
If this parameter is set, each sequence will be prefixed with the provided
string. Hence, the output files will obey the following naming scheme:
"prefix_xxxx_ss.ps" (secondary structure plot), "prefix_xxxx_dp.ps"
(dot\-plot), "prefix_xxxx_dp2.ps" (stack probabilities), etc. where xxxx is
the sequence number. Note: Setting this parameter implies \fB\-\-auto\-id\fR.
.TP
\fB\-\-id\-delim\fR=\fI\,delimiter\/\fR
Change the delimiter between prefix and
increasing number for automatically generated
IDs (as used in output file names)
.IP
(default=`_')
.IP
This parameter can be used to change the default delimiter "_" between
.IP
the prefix string and the increasing number for automatically generated ID.
.TP
\fB\-\-id\-digits\fR=\fI\,INT\/\fR
Specify the number of digits of the counter in
automatically generated alignment IDs.
.IP
(default=`4')
.IP
When alignments IDs are automatically generated, they receive an increasing
number, starting with 1. This number will always be left\-padded by leading
zeros, such that the number takes up a certain width. Using this parameter,
the width can be specified to the users need. We allow numbers in the range
[1:18]. This option implies \fB\-\-auto\-id\fR.
.TP
\fB\-\-id\-start\fR=\fI\,LONG\/\fR
Specify the first number in automatically
generated alignment IDs.
.IP
(default=`1')
.IP
When sequence IDs are automatically generated, they receive an increasing
number, usually starting with 1. Using this parameter, the first number can
be specified to the users requirements. Note: negative numbers are not
allowed.
Note: Setting this parameter implies to ignore any IDs retrieved from the
input data, i.e. it activates the \fB\-\-auto\-id\fR flag.
.TP
\fB\-\-filename\-delim\fR=\fI\,delimiter\/\fR
Change the delimiting character that is used
.IP
for sanitized filenames
.IP
(default=`ID\-delimiter')
.IP
This parameter can be used to change the delimiting character used while
sanitizing filenames, i.e. replacing invalid characters. Note, that the
default delimiter ALWAYS is the first character of the "ID delimiter" as
supplied through the \fB\-\-id\-delim\fR option. If the delimiter is a whitespace
character or empty, invalid characters will be simply removed rather than
substituted. Currently, we regard the following characters as illegal for use
in filenames: backslash '\e', slash '/', question mark '?', percent sign '%',
asterisk '*', colon ':', pipe symbol '|', double quote '"', triangular
brackets '<' and '>'.
.TP
\fB\-\-filename\-full\fR
Use full FASTA header to create filenames
.IP
(default=off)
.IP
This parameter can be used to deactivate the default behavior of limiting
output filenames to the first word of the sequence ID. Consider the following
example: An input with FASTA header ">NM_0001 Homo Sapiens some gene"
usually produces output files with the prefix "NM_0001" without the
additional data available in the FASTA header, e.g. "NM_0001_ss.ps" for
secondary structure plots. With this flag set, no truncation of the output
filenames is done, i.e. output filenames receive the full FASTA header data
as prefixes. Note, however, that invalid characters (such as whitespace) will
be substituted by a delimiting character or simply removed, (see also the
parameter option \fB\-\-filename\-delim\fR).
.TP
\fB\-\-output\-format\fR=\fI\,format\-character\/\fR
Change the default output format
.IP
(default=`V')
.IP
The following output formats are currently supported:
.IP
ViennaRNA format (V), Delimiter\-separated format (D) also known as CSV
.IP
format.
.TP
\fB\-\-csv\-delim\fR=\fI\,delimiter\/\fR
Change the delimiting character for
Delimiter\-separated output format, such as
CSV
.IP
(default=`,')
.IP
Delimiter\-separated output defaults to comma separated values (CSV), i.e. all
data in one data set is delimited by a comma character. This option allows
one to change the delimiting character to something else. Note, to switch to
tab\-separated data, use $'\et' as delimiting character.
.TP
\fB\-\-csv\-noheader\fR
Do not print header for Delimiter\-separated
output, such as CSV
.IP
(default=off)
.SS "Structure Constraints:"
.IP
Command line options to interact with the structure constraints feature of
this program
.TP
\fB\-\-maxBPspan\fR=\fI\,INT\/\fR
Set the maximum base pair span
.IP
(default=`\-1')
.TP
\fB\-C\fR, \fB\-\-constraint[=\fR<filename>] Calculate structures subject to constraints.
(default=`')
.IP
The program reads first the sequence, then a string containing constraints on
the structure encoded with the symbols:
.IP
\&. (no constraint for this base)
.IP
| (the corresponding base has to be paired
.IP
x (the base is unpaired)
.IP
< (base i is paired with a base j>i)
.IP
\f(CW> (base i is paired with a base j<i)\fR
.IP
and matching brackets ( ) (base i pairs base j)
.IP
With the exception of "|", constraints will disallow all pairs conflicting
with the constraint. This is usually sufficient to enforce the constraint,
but occasionally a base may stay unpaired in spite of constraints. PF folding
ignores constraints of type "|".
.TP
\fB\-\-batch\fR
Use constraints for multiple sequences.
(default=off)
.IP
Usually, constraints provided from input file only apply to a single input
sequence. Therefore, RNAcofold will stop its computation and quit after the
first input sequence was processed. Using this switch, RNAcofold processes
multiple input sequences and applies the same provided constraints to each of
them.
.TP
\fB\-\-canonicalBPonly\fR
Remove non\-canonical base pairs from the
structure constraint
.IP
(default=off)
.TP
\fB\-\-enforceConstraint\fR
Enforce base pairs given by round brackets ( )
in structure constraint
.IP
(default=off)
.TP
\fB\-\-shape=\fR<filename>
Use SHAPE reactivity data to guide structure
predictions
.TP
\fB\-\-shapeMethod\fR=\fI\,[D\/\fR/Z/W] + [optional parameters]
Select method to incorporate SHAPE reactivity
.TP
data.
(default=`D')
.IP
The following methods can be used to convert SHAPE reactivities into pseudo
energy contributions.
.IP
\&'D': Convert by using a linear equation according to Deigan et al 2009. The
calculated pseudo energies will be applied for every nucleotide involved in a
stacked pair. This method is recognized by a capital 'D' in the provided
parameter, i.e.: \fB\-\-shapeMethod=\fR"D" is the default setting. The slope 'm'
and the intercept 'b' can be set to a non\-default value if necessary,
otherwise m=1.8 and b=\-0.6. To alter these parameters, e.g. m=1.9 and b=\-0.7,
use a parameter string like this: \fB\-\-shapeMethod=\fR"Dm1.9b\-0.7". You may also
provide only one of the two parameters like: \fB\-\-shapeMethod=\fR"Dm1.9" or
\fB\-\-shapeMethod=\fR"Db\-0.7".
.IP
\&'Z': Convert SHAPE reactivities to pseudo energies according to Zarringhalam
et al 2012. SHAPE reactivities will be converted to pairing probabilities by
using linear mapping. Aberration from the observed pairing probabilities will
be penalized during the folding recursion. The magnitude of the penalties can
affected by adjusting the factor beta (e.g. \fB\-\-shapeMethod=\fR"Zb0.8").
.IP
\&'W': Apply a given vector of perturbation energies to unpaired nucleotides
according to Washietl et al 2012. Perturbation vectors can be calculated by
using RNApvmin.
.TP
\fB\-\-shapeConversion\fR=\fI\,M\/\fR/C/S/L/O
+ [optional parameters]
Select method to convert SHAPE reactivities to
.TP
pairing probabilities.
(default=`O')
.IP
This parameter is useful when dealing with the SHAPE incorporation according
to Zarringhalam et al. The following methods can be used to convert SHAPE
reactivities into the probability for a certain nucleotide to be unpaired.
.IP
\&'M': Use linear mapping according to Zarringhalam et al.
\&'C': Use a cutoff\-approach to divide into paired and unpaired nucleotides
(e.g. "C0.25")
\&'S': Skip the normalizing step since the input data already represents
probabilities for being unpaired rather than raw reactivity values
\&'L': Use a linear model to convert the reactivity into a probability for
being unpaired (e.g. "Ls0.68i0.2" to use a slope of 0.68 and an intercept
of 0.2)
\&'O': Use a linear model to convert the log of the reactivity into a
probability for being unpaired (e.g. "Os1.6i\-2.29" to use a slope of 1.6
and an intercept of \fB\-2\fR.29)
.TP
\fB\-\-commands=\fR<filename>
Read additional commands from file
.IP
Commands include hard and soft constraints, but also structure motifs in
hairpin and interior loops that need to be treeted differently. Furthermore,
commands can be set for unstructured and structured domains.
.SS "Algorithms:"
.IP
Select additional algorithms which should be included in the calculations.
The Minimum free energy (MFE) and a structure representative are calculated
in any case.
.TP
\fB\-p\fR, \fB\-\-partfunc\fR[=\fI\,INT\/\fR]
Calculate the partition function and base
pairing probability matrix in addition to the
mfe structure. Default is calculation of mfe
structure only.
.IP
(default=`1')
.IP
In addition to the MFE structure we print a coarse representation of the pair
probabilities in form of a pseudo bracket notation, followed by the ensemble
free energy, as well as the centroid structure derived from the pair
probabilities together with its free energy and distance to the ensemble.
Finally it prints the frequency of the mfe structure, and the structural
diversity (mean distance between the structures in the ensemble).
See the description of pf_fold() and mean_bp_dist() and centroid() in the
RNAlib documentation for details.
Note that unless you also specify \fB\-d2\fR or \fB\-d0\fR, the partition function and mfe
calculations will use a slightly different energy model. See the discussion
of dangling end options below.
.IP
An additionally passed value to this option changes the behavior of partition
function calculation:
.IP
In order to calculate the partition function but not the pair probabilities
.IP
use the \fB\-p0\fR option and save about
.IP
50% in runtime. This prints the ensemble free energy \fB\-kT\fR ln(Z).
.TP
\fB\-a\fR, \fB\-\-all_pf\fR[=\fI\,INT\/\fR]
Compute the partition function and free
energies not only of the hetero\-dimer
consisting of the two input sequences (the
"AB dimer"), but also of the homo\-dimers AA
and BB as well as A and B monomers.
.IP
(default=`1')
.IP
The output will contain the free energies for each of these species, as well
as 5 dot plots containing the conditional pair probabilities, called
"ABname5.ps", "AAname5.ps" and so on. For later use, these dot plot files
also contain the free energy of the ensemble as a comment. Using \fB\-a\fR
automatically switches on the \fB\-p\fR option. Base pair probability computations
may be turned off altogether by providing "0" as an argument to this
parameter. In that case, no dot plot files will be generated.
.TP
\fB\-c\fR, \fB\-\-concentrations\fR
In addition to everything listed under the \fB\-a\fR
option, read in initial monomer
concentrations and compute the expected
equilibrium concentrations of the 5 possible
species (AB, AA, BB, A, B).
.IP
(default=off)
.IP
Start concentrations are read from stdin (unless the \fB\-f\fR option is used) in
[mol/l], equilibrium concentrations are given realtive to the sum of the two
inputs. An arbitrary number of initial concentrations can be specified (one
pair of concentrations per line).
.TP
\fB\-f\fR, \fB\-\-concfile\fR=\fI\,filename\/\fR
Specify a file with initial concentrations for
the two sequences.
.IP
The table consits of arbitrary many lines with just two numbers (the
concentration of sequence A and B). This option will automatically toggle the
\fB\-c\fR (and thus \fB\-a\fR and \fB\-p\fR) options (see above).
.TP
\fB\-\-centroid\fR
Compute the centroid structure.
(default=off)
.IP
Additionally to the MFE structure, compute the centroid representative of the
structure ensemble. Here, we apply the base pair distance as distance
measure, and report the structure that minimizes its Boltzmann weighted base
pair distance to the rest of the ensemble. Computing the centroid structure
requires equilibrium base pair probabilities. Therefore, this option implies
the \fB\-p\fR switch. For historical reasons, the centroid structure output is
deactivated by default.
.TP
\fB\-\-MEA\fR[=\fI\,gamma\/\fR]
Calculate an MEA (maximum expected accuracy)
structure, where the expected accuracy is
computed from the pair probabilities: each
base pair (i,j) gets a score 2*gamma*p_ij and
the score of an unpaired base is given by the
probability of not forming a pair.
.IP
(default=`1.')
.IP
The parameter gamma tunes the importance of correctly predicted pairs versus
unpaired bases. Thus, for small values of gamma the MEA structure will
contain only pairs with very high probability.
Using \fB\-\-MEA\fR implies \fB\-p\fR for computing the pair probabilities.
.TP
\fB\-S\fR, \fB\-\-pfScale\fR=\fI\,scaling\/\fR factor
In the calculation of the pf use scale*mfe as
an estimate for the ensemble free energy
(used to avoid overflows).
.IP
The default is 1.07, useful values are 1.0 to 1.2. Occasionally needed for
long sequences.
You can also recompile the program to use double precision (see the README
file).
.TP
\fB\-\-bppmThreshold=\fR<value>
Set the threshold for base pair probabilities
included in the postscript output
.IP
(default=`1e\-5')
.IP
By setting the threshold the base pair probabilities that are included in the
output can be varied. By default only those exceeding 1e\-5 in probability
will be shown as squares in the dot plot. Changing the threshold to any other
value allows for increase or decrease of data.
.TP
\fB\-g\fR, \fB\-\-gquad\fR
Incoorporate G\-Quadruplex formation into the
structure prediction algorithm.
.IP
(default=off)
.SS "Model Details:"
.TP
\fB\-T\fR, \fB\-\-temp\fR=\fI\,DOUBLE\/\fR
Rescale energy parameters to a temperature of
temp C. Default is 37C.
.TP
\fB\-4\fR, \fB\-\-noTetra\fR
Do not include special tabulated stabilizing
energies for tri\-, tetra\- and hexaloop
hairpins.
.IP
(default=off)
.IP
Mostly for testing.
.TP
\fB\-d\fR, \fB\-\-dangles\fR=\fI\,INT\/\fR
How to treat "dangling end" energies for
bases adjacent to helices in free ends and
multi\-loops
.IP
(default=`2')
.IP
With \fB\-d1\fR only unpaired bases can participate in at most one dangling end.
With \fB\-d2\fR this check is ignored, dangling energies will be added for the bases
adjacent to a helix on both sides in any case; this is the default for mfe
and partition function folding (\fB\-p\fR).
The option \fB\-d0\fR ignores dangling ends altogether (mostly for debugging).
With \fB\-d3\fR mfe folding will allow coaxial stacking of adjacent helices in
multi\-loops. At the moment the implementation will not allow coaxial stacking
of the two interior pairs in a loop of degree 3 and works only for mfe
folding.
.IP
Note that with \fB\-d1\fR and \fB\-d3\fR only the MFE computations will be using this
setting while partition function uses \fB\-d2\fR setting, i.e. dangling ends will be
treated differently.
.TP
\fB\-\-noLP\fR
Produce structures without lonely pairs
(helices of length 1).
.IP
(default=off)
.IP
For partition function folding this only disallows pairs that can only occur
isolated. Other pairs may still occasionally occur as helices of length 1.
.TP
\fB\-\-noGU\fR
Do not allow GU pairs
.IP
(default=off)
.TP
\fB\-\-noClosingGU\fR
Do not allow GU pairs at the end of helices
.IP
(default=off)
.TP
\fB\-P\fR, \fB\-\-paramFile\fR=\fI\,paramfile\/\fR
Read energy parameters from paramfile, instead
of using the default parameter set.
.IP
Different sets of energy parameters for RNA and DNA should accompany your
distribution.
See the RNAlib documentation for details on the file format. When passing the
placeholder file name "DNA", DNA parameters are loaded without the need to
actually specify any input file.
.TP
\fB\-\-nsp\fR=\fI\,STRING\/\fR
Allow other pairs in addition to the usual
AU,GC,and GU pairs.
.IP
Its argument is a comma separated list of additionally allowed pairs. If the
first character is a "\-" then AB will imply that AB and BA are allowed
pairs.
e.g. RNAcofold \fB\-nsp\fR \fB\-GA\fR  will allow GA and AG pairs. Nonstandard pairs are
given 0 stacking energy.
.TP
\fB\-e\fR, \fB\-\-energyModel\fR=\fI\,INT\/\fR
Rarely used option to fold sequences from the
artificial ABCD... alphabet, where A pairs B,
C\-D etc.  Use the energy parameters for GC
(\fB\-e\fR 1) or AU (\fB\-e\fR 2) pairs.
.TP
\fB\-\-betaScale\fR=\fI\,DOUBLE\/\fR
Set the scaling of the Boltzmann factors
(default=`1.')
.IP
The argument provided with this option enables to scale the thermodynamic
temperature used in the Boltzmann factors independently from the temperature
used to scale the individual energy contributions of the loop types. The
Boltzmann factors then become exp(\fB\-dG\fR/(kT*betaScale)) where k is the
Boltzmann constant, dG the free energy contribution of the state and T the
absolute temperature.
.SH REFERENCES
.I If you use this program in your work you might want to cite:

R. Lorenz, S.H. Bernhart, C. Hoener zu Siederdissen, H. Tafer, C. Flamm, P.F. Stadler and I.L. Hofacker (2011),
"ViennaRNA Package 2.0",
Algorithms for Molecular Biology: 6:26 

I.L. Hofacker, W. Fontana, P.F. Stadler, S. Bonhoeffer, M. Tacker, P. Schuster (1994),
"Fast Folding and Comparison of RNA Secondary Structures",
Monatshefte f. Chemie: 125, pp 167-188

R. Lorenz, I.L. Hofacker, P.F. Stadler (2016),
"RNA folding with hard and soft constraints",
Algorithms for Molecular Biology 11:1 pp 1-13

S.H.Bernhart, Ch. Flamm, P.F. Stadler, I.L. Hofacker, (2006),
"Partition Function and Base Pairing Probabilities of RNA Heterodimers",
Algorithms Mol. Biol.

.I The energy parameters are taken from:

D.H. Mathews, M.D. Disney, D. Matthew, J.L. Childs, S.J. Schroeder, J. Susan, M. Zuker, D.H. Turner (2004),
"Incorporating chemical modification constraints into a dynamic programming algorithm for prediction of RNA secondary structure",
Proc. Natl. Acad. Sci. USA: 101, pp 7287-7292

D.H Turner, D.H. Mathews (2009),
"NNDB: The nearest neighbor parameter database for predicting stability of nucleic acid secondary structure",
Nucleic Acids Research: 38, pp 280-282
.SH AUTHOR

Ivo L Hofacker, Peter F Stadler, Stephan Bernhart, Ronny Lorenz
.SH "REPORTING BUGS"

If in doubt our program is right, nature is at fault.
Comments should be sent to rna@tbi.univie.ac.at.
