%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 17:24:56 2020
%%Title: RNA Dot Plot
%%BoundingBox: 66 211 518 662
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% Monomer A FreeEnergy= -19.950734211

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  % draw strand separators if required
  currentdict /nicks known {
    gsave
    % draw lines in red color
    0 1 1 sethsbcolor
    % draw with line thickness of 0.2
    0.2 setlinewidth
    nicks
    { 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
    } forall
    grestore
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (Arnacofold_pf_test_0016)
} def

/sequence { (\
AAAACAAGCGGAAAGGGUGUCUCGGCUGCGUCACGCCUAUUAGGAAGGAGCUUUGUACCACCCAACCCGG\
) } def
/len { sequence length } bind def

72 216 translate
72 6 mul len 1 add div dup scale
/Helvetica findfont 0.95 scalefont setfont

drawseq
%data starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data

%draw the grid
drawgrid

%start of base pair probability data
%start of base pair probability data
4 56 0.003547660 ubox
5 10 0.007147989 ubox
5 11 0.003975777 ubox
5 55 0.003680686 ubox
5 69 0.012366573 ubox
5 70 0.037778763 ubox
7 52 0.003175491 ubox
8 51 0.003818158 ubox
8 67 0.004942635 ubox
8 68 0.059358060 ubox
9 50 0.003825553 ubox
9 69 0.982446538 ubox
9 70 0.018787762 ubox
10 63 0.005386894 ubox
10 66 0.009844323 ubox
10 67 0.094305207 ubox
10 68 0.993875344 ubox
11 62 0.005383009 ubox
11 66 0.098300141 ubox
11 67 0.992086541 ubox
11 68 0.009274920 ubox
12 41 0.009075444 ubox
13 40 0.009091630 ubox
15 38 0.020272578 ubox
15 61 0.009429832 ubox
15 62 0.012868968 ubox
15 63 0.998055057 ubox
15 68 0.005397098 ubox
16 37 0.021000054 ubox
16 59 0.017420091 ubox
16 61 0.012496758 ubox
16 62 0.999499971 ubox
16 63 0.006241691 ubox
16 67 0.005403001 ubox
17 36 0.021025551 ubox
17 58 0.017957744 ubox
17 59 0.005203932 ubox
17 61 0.999498271 ubox
17 62 0.005225552 ubox
17 66 0.005401688 ubox
18 35 0.021041547 ubox
18 57 0.018763547 ubox
18 60 0.998341795 ubox
18 65 0.005270131 ubox
19 34 0.021115045 ubox
19 56 0.020567257 ubox
19 58 0.400813628 ubox
19 59 0.912787763 ubox
20 33 0.020941735 ubox
20 45 0.003164526 ubox
20 55 0.022643151 ubox
20 57 0.558089502 ubox
21 44 0.003235281 ubox
21 50 0.005165875 ubox
21 55 0.845632361 ubox
22 39 0.005818430 ubox
22 49 0.005190730 ubox
22 55 0.062839343 ubox
22 57 0.036964189 ubox
23 30 0.021290377 ubox
23 48 0.005173040 ubox
23 55 0.370062288 ubox
24 29 0.021247582 ubox
24 32 0.004270254 ubox
24 37 0.040463055 ubox
24 51 0.004792964 ubox
24 52 0.942398593 ubox
24 53 0.043705903 ubox
24 54 0.246215374 ubox
24 56 0.008664271 ubox
24 58 0.010544643 ubox
24 59 0.015211473 ubox
25 31 0.004287741 ubox
25 36 0.040517379 ubox
25 51 0.973092560 ubox
25 52 0.010478194 ubox
25 53 0.189633127 ubox
25 54 0.027594436 ubox
25 56 0.043837376 ubox
25 58 0.017218921 ubox
26 30 0.004272014 ubox
26 35 0.040473953 ubox
26 50 0.973328079 ubox
26 55 0.044101304 ubox
27 33 0.017498976 ubox
27 48 0.004092008 ubox
27 49 0.968995063 ubox
27 57 0.018071339 ubox
28 32 0.017473703 ubox
28 34 0.008966836 ubox
28 36 0.036238527 ubox
28 51 0.222510349 ubox
28 52 0.007181344 ubox
28 53 0.005951732 ubox
28 56 0.018475575 ubox
29 35 0.038209578 ubox
29 47 0.932733371 ubox
29 48 0.190895870 ubox
29 50 0.222366898 ubox
29 55 0.018491485 ubox
30 34 0.036585566 ubox
30 36 0.008712421 ubox
30 37 0.003252091 ubox
30 51 0.012472288 ubox
30 54 0.017613061 ubox
31 35 0.008324869 ubox
31 44 0.071671294 ubox
31 45 0.773254103 ubox
31 46 0.219378098 ubox
31 47 0.010812649 ubox
31 48 0.079698494 ubox
31 49 0.202397318 ubox
31 50 0.010400863 ubox
32 43 0.077615162 ubox
32 44 0.814349051 ubox
32 47 0.078747416 ubox
32 48 0.210264731 ubox
33 38 0.005558206 ubox
33 40 0.011782979 ubox
33 41 0.014559788 ubox
34 43 0.837160375 ubox
34 44 0.042197576 ubox
34 47 0.053417176 ubox
34 48 0.004231595 ubox
34 50 0.011182651 ubox
35 40 0.023746850 ubox
35 41 0.082853120 ubox
35 51 0.005356235 ubox
36 43 0.047855978 ubox
36 44 0.457557164 ubox
36 48 0.032088638 ubox
36 50 0.005332755 ubox
37 43 0.459755919 ubox
37 44 0.027047052 ubox
37 47 0.033513079 ubox
37 48 0.015090785 ubox
38 42 0.414238155 ubox
38 43 0.026767579 ubox
38 46 0.032818106 ubox
38 47 0.015003780 ubox
38 57 0.011367797 ubox
39 56 0.012158861 ubox
40 44 0.005085023 ubox
40 45 0.004209868 ubox
40 55 0.011532227 ubox
41 57 0.033800966 ubox
41 64 0.003647750 ubox
42 52 0.005241226 ubox
42 53 0.012074961 ubox
42 56 0.036177554 ubox
43 51 0.005532541 ubox
43 52 0.012987429 ubox
43 62 0.004221435 ubox
43 63 0.019093312 ubox
44 51 0.013068684 ubox
44 54 0.036999908 ubox
44 61 0.004231165 ubox
44 62 0.019101652 ubox
45 53 0.037345865 ubox
45 54 0.003308907 ubox
46 52 0.037269076 ubox
46 53 0.003285486 ubox
47 51 0.036470683 ubox
47 59 0.019909398 ubox
48 58 0.019896734 ubox
49 56 0.006343592 ubox
50 56 0.016807977 ubox
51 55 0.016996217 ubox
9 69 0.9746794 lbox
10 68 0.9746794 lbox
11 67 0.9746794 lbox
15 63 0.9746794 lbox
16 62 0.9746794 lbox
17 61 0.9746794 lbox
18 60 0.9746794 lbox
19 59 0.9746794 lbox
21 55 0.9746794 lbox
24 52 0.9746794 lbox
25 51 0.9746794 lbox
26 50 0.9746794 lbox
27 49 0.9746794 lbox
29 47 0.9746794 lbox
31 45 0.9746794 lbox
32 44 0.9746794 lbox
34 43 0.9746794 lbox
showpage
end
%%EOF
