%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 17:24:53 2020
%%Title: RNA Dot Plot
%%BoundingBox: 66 211 518 662
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% Homodimer AA FreeEnergy= -41.080953889

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  % draw strand separators if required
  currentdict /nicks known {
    gsave
    % draw lines in red color
    0 1 1 sethsbcolor
    % draw with line thickness of 0.2
    0.2 setlinewidth
    nicks
    { 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
    } forall
    grestore
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (AArnacofold_pf_test_0005)
} def

/sequence { (\
UGGAUUUCCAAGAUUCGAAGCAGGCCGCCAGAAUUUCCCUCGAUAGCUCAAUACUACGCUAGCGGGCGACUGGAUUUCCAAGAUUCGAAGCAGGCCGCCAGAAUUUCCCUCGAUAGCUCAAUACUACGCUAGCGGGCGAC\
) } def
/len { sequence length } bind def

/cutpoint 71 def

/nicks [ 71 ] def
72 216 translate
72 6 mul len 1 add div dup scale
/Helvetica findfont 0.95 scalefont setfont

drawseq
%data starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data

%draw the grid
drawgrid

%start of base pair probability data
%start of base pair probability data
1 10 0.866153100 ubox
1 11 0.031188990 ubox
1 12 0.003267934 ubox
1 17 0.055453973 ubox
1 18 0.008695349 ubox
1 80 0.062081011 ubox
1 100 0.004935279 ubox
1 138 0.006600052 ubox
1 139 0.007128132 ubox
2 7 0.003778614 ubox
2 8 0.019934398 ubox
2 9 0.962145256 ubox
2 16 0.073574634 ubox
2 79 0.068963018 ubox
2 99 0.005461239 ubox
2 107 0.006530082 ubox
2 108 0.078086865 ubox
2 109 0.004452646 ubox
2 137 0.007768862 ubox
2 140 0.004371866 ubox
3 7 0.013333102 ubox
3 8 0.959213167 ubox
3 9 0.024729608 ubox
3 15 0.073720293 ubox
3 16 0.010255943 ubox
3 78 0.068976842 ubox
3 98 0.005230712 ubox
3 106 0.006019123 ubox
3 107 0.078810096 ubox
3 108 0.004470697 ubox
3 137 0.006363718 ubox
4 14 0.073826743 ubox
4 15 0.009800258 ubox
4 77 0.068913493 ubox
4 105 0.004814960 ubox
4 106 0.074187131 ubox
5 10 0.003625595 ubox
5 11 0.005126668 ubox
5 13 0.073695380 ubox
5 20 0.004979729 ubox
6 10 0.005292359 ubox
6 11 0.004530483 ubox
6 12 0.072520429 ubox
6 13 0.007243803 ubox
6 19 0.009535441 ubox
6 103 0.004060979 ubox
7 11 0.055364693 ubox
7 12 0.007274552 ubox
7 13 0.005583474 ubox
7 18 0.010328582 ubox
7 74 0.068913493 ubox
7 102 0.004252813 ubox
7 103 0.003290087 ubox
7 113 0.003526531 ubox
7 139 0.009410769 ubox
8 12 0.006495469 ubox
8 17 0.010412980 ubox
8 73 0.068976842 ubox
8 101 0.004284954 ubox
8 112 0.003593016 ubox
8 136 0.003829024 ubox
8 138 0.010076740 ubox
9 72 0.068963018 ubox
9 135 0.003834874 ubox
9 138 0.005286219 ubox
10 71 0.062081011 ubox
10 105 0.008018157 ubox
10 106 0.021805981 ubox
11 36 0.043504645 ubox
11 104 0.007610690 ubox
11 105 0.038368760 ubox
11 106 0.628224258 ubox
12 35 0.065761405 ubox
12 104 0.030841486 ubox
12 105 0.951937733 ubox
12 106 0.026398192 ubox
12 107 0.033803432 ubox
12 108 0.005959180 ubox
12 137 0.003435587 ubox
12 140 0.003895101 ubox
13 34 0.068046515 ubox
13 104 0.984881135 ubox
13 105 0.023274462 ubox
13 106 0.030231243 ubox
14 33 0.068405875 ubox
14 102 0.005825810 ubox
14 103 0.990093936 ubox
15 32 0.068589627 ubox
15 101 0.005443326 ubox
15 102 0.992757138 ubox
15 103 0.004515952 ubox
15 139 0.011512972 ubox
16 31 0.068595047 ubox
16 101 0.992877030 ubox
16 138 0.012457682 ubox
17 29 0.008016004 ubox
17 99 0.111379198 ubox
17 107 0.008729952 ubox
17 137 0.012300139 ubox
18 105 0.004152260 ubox
18 106 0.008766367 ubox
19 104 0.004347293 ubox
19 105 0.008628412 ubox
20 26 0.004470057 ubox
20 28 0.067551909 ubox
20 98 0.980277145 ubox
20 99 0.063011919 ubox
20 104 0.003263527 ubox
21 27 0.067628588 ubox
21 97 0.978846024 ubox
21 101 0.004554672 ubox
23 67 0.003521638 ubox
23 95 0.010325861 ubox
23 96 0.996964078 ubox
23 99 0.010333317 ubox
24 95 0.997501082 ubox
24 98 0.010353931 ubox
25 65 0.003637952 ubox
25 93 0.010325861 ubox
25 94 0.997501082 ubox
25 97 0.010342386 ubox
26 64 0.003662220 ubox
26 93 0.996964078 ubox
27 63 0.003685865 ubox
27 67 0.004074758 ubox
27 91 0.978846024 ubox
27 95 0.010342386 ubox
28 62 0.003677990 ubox
28 66 0.004063721 ubox
28 73 0.005230712 ubox
28 90 0.980277145 ubox
28 94 0.010353931 ubox
29 65 0.004021651 ubox
29 72 0.005461239 ubox
29 87 0.111379198 ubox
29 90 0.063011919 ubox
29 93 0.010333317 ubox
30 71 0.004935279 ubox
31 37 0.006641441 ubox
31 78 0.004284954 ubox
31 85 0.005443326 ubox
31 86 0.992877030 ubox
31 91 0.004554672 ubox
32 36 0.005807247 ubox
32 77 0.004252813 ubox
32 84 0.005825810 ubox
32 85 0.992757138 ubox
33 76 0.004060979 ubox
33 77 0.003290087 ubox
33 84 0.990093936 ubox
33 85 0.004515952 ubox
34 69 0.014839334 ubox
34 81 0.007610690 ubox
34 82 0.030841486 ubox
34 83 0.984881135 ubox
34 89 0.004347293 ubox
34 90 0.003263527 ubox
35 68 0.019946766 ubox
35 69 0.034103902 ubox
35 74 0.004814960 ubox
35 80 0.008018157 ubox
35 81 0.038368760 ubox
35 82 0.951937733 ubox
35 83 0.023274462 ubox
35 88 0.004152260 ubox
35 89 0.008628412 ubox
36 43 0.004153408 ubox
36 66 0.009536555 ubox
36 68 0.048127684 ubox
36 69 0.646450699 ubox
36 73 0.006019123 ubox
36 74 0.074187131 ubox
36 80 0.021805981 ubox
36 81 0.628224258 ubox
36 82 0.026398192 ubox
36 83 0.030231243 ubox
36 88 0.008766367 ubox
37 42 0.004955667 ubox
37 65 0.017380339 ubox
37 66 0.141845204 ubox
37 68 0.802866458 ubox
37 72 0.006530082 ubox
37 73 0.078810096 ubox
37 82 0.033803432 ubox
37 87 0.008729952 ubox
38 64 0.017095670 ubox
38 65 0.143305491 ubox
38 66 0.429589330 ubox
38 68 0.420667882 ubox
38 72 0.078086865 ubox
38 73 0.004470697 ubox
38 82 0.005959180 ubox
39 62 0.011359097 ubox
39 64 0.141208531 ubox
39 65 0.428854551 ubox
39 66 0.887177403 ubox
39 68 0.010720870 ubox
39 72 0.004452646 ubox
40 61 0.009923972 ubox
40 62 0.009712579 ubox
40 64 0.127471255 ubox
40 65 0.889319450 ubox
40 66 0.008188388 ubox
40 69 0.021167933 ubox
41 58 0.010280870 ubox
41 62 0.083635624 ubox
41 64 0.979908513 ubox
41 65 0.009298750 ubox
41 68 0.022871646 ubox
42 49 0.008512404 ubox
42 57 0.010523156 ubox
42 63 0.974551977 ubox
42 67 0.022661088 ubox
42 78 0.003593016 ubox
43 48 0.007790003 ubox
43 77 0.003526531 ubox
44 53 0.003507989 ubox
44 56 0.014114313 ubox
44 61 0.888595142 ubox
44 62 0.029028771 ubox
45 52 0.003635770 ubox
45 55 0.014610591 ubox
45 60 0.997226893 ubox
46 54 0.014621011 ubox
46 57 0.003502895 ubox
46 59 0.999027435 ubox
46 63 0.023025323 ubox
46 67 0.019278235 ubox
47 58 0.998006652 ubox
47 62 0.023045600 ubox
47 66 0.019342990 ubox
48 53 0.023435323 ubox
48 56 0.122603511 ubox
48 58 0.008304550 ubox
48 61 0.021677114 ubox
48 65 0.019304416 ubox
49 58 0.019764539 ubox
49 64 0.019188378 ubox
50 55 0.180243523 ubox
50 60 0.004765494 ubox
51 55 0.035552638 ubox
52 56 0.013316173 ubox
52 61 0.015305449 ubox
53 60 0.014630760 ubox
54 58 0.003904371 ubox
54 62 0.005926907 ubox
55 61 0.005921411 ubox
55 69 0.003937444 ubox
56 60 0.005264881 ubox
57 68 0.026913450 ubox
58 67 0.027461817 ubox
59 66 0.027451702 ubox
60 65 0.026316091 ubox
65 79 0.003834874 ubox
66 78 0.003829024 ubox
67 72 0.007768862 ubox
67 73 0.006363718 ubox
67 82 0.003435587 ubox
67 87 0.012300139 ubox
68 71 0.006600052 ubox
68 78 0.010076740 ubox
68 79 0.005286219 ubox
68 86 0.012457682 ubox
69 71 0.007128132 ubox
69 77 0.009410769 ubox
69 85 0.011512972 ubox
70 72 0.004371866 ubox
70 82 0.003895101 ubox
71 80 0.866153100 ubox
71 81 0.031188990 ubox
71 82 0.003267934 ubox
71 87 0.055453973 ubox
71 88 0.008695349 ubox
72 77 0.003778614 ubox
72 78 0.019934398 ubox
72 79 0.962145256 ubox
72 86 0.073574634 ubox
73 77 0.013333102 ubox
73 78 0.959213167 ubox
73 79 0.024729608 ubox
73 85 0.073720293 ubox
73 86 0.010255943 ubox
74 84 0.073826743 ubox
74 85 0.009800258 ubox
75 80 0.003625595 ubox
75 81 0.005126668 ubox
75 83 0.073695380 ubox
75 90 0.004979729 ubox
76 80 0.005292359 ubox
76 81 0.004530483 ubox
76 82 0.072520429 ubox
76 83 0.007243803 ubox
76 89 0.009535441 ubox
77 81 0.055364693 ubox
77 82 0.007274552 ubox
77 83 0.005583474 ubox
77 88 0.010328582 ubox
78 82 0.006495469 ubox
78 87 0.010412980 ubox
81 106 0.043504645 ubox
82 105 0.065761405 ubox
83 104 0.068046515 ubox
84 103 0.068405875 ubox
85 102 0.068589627 ubox
86 101 0.068595047 ubox
87 99 0.008016004 ubox
90 96 0.004470057 ubox
90 98 0.067551909 ubox
91 97 0.067628588 ubox
93 137 0.003521638 ubox
95 135 0.003637952 ubox
96 134 0.003662220 ubox
97 133 0.003685865 ubox
97 137 0.004074758 ubox
98 132 0.003677990 ubox
98 136 0.004063721 ubox
99 135 0.004021651 ubox
101 107 0.006641441 ubox
102 106 0.005807247 ubox
104 139 0.014839334 ubox
105 138 0.019946766 ubox
105 139 0.034103902 ubox
106 113 0.004153408 ubox
106 136 0.009536555 ubox
106 138 0.048127684 ubox
106 139 0.646450699 ubox
107 112 0.004955667 ubox
107 135 0.017380339 ubox
107 136 0.141845204 ubox
107 138 0.802866458 ubox
108 134 0.017095670 ubox
108 135 0.143305491 ubox
108 136 0.429589330 ubox
108 138 0.420667882 ubox
109 132 0.011359097 ubox
109 134 0.141208531 ubox
109 135 0.428854551 ubox
109 136 0.887177403 ubox
109 138 0.010720870 ubox
110 131 0.009923972 ubox
110 132 0.009712579 ubox
110 134 0.127471255 ubox
110 135 0.889319450 ubox
110 136 0.008188388 ubox
110 139 0.021167933 ubox
111 128 0.010280870 ubox
111 132 0.083635624 ubox
111 134 0.979908513 ubox
111 135 0.009298750 ubox
111 138 0.022871646 ubox
112 119 0.008512404 ubox
112 127 0.010523156 ubox
112 133 0.974551977 ubox
112 137 0.022661088 ubox
113 118 0.007790003 ubox
114 123 0.003507989 ubox
114 126 0.014114313 ubox
114 131 0.888595142 ubox
114 132 0.029028771 ubox
115 122 0.003635770 ubox
115 125 0.014610591 ubox
115 130 0.997226893 ubox
116 124 0.014621011 ubox
116 127 0.003502895 ubox
116 129 0.999027435 ubox
116 133 0.023025323 ubox
116 137 0.019278235 ubox
117 128 0.998006652 ubox
117 132 0.023045600 ubox
117 136 0.019342990 ubox
118 123 0.023435323 ubox
118 126 0.122603511 ubox
118 128 0.008304550 ubox
118 131 0.021677114 ubox
118 135 0.019304416 ubox
119 128 0.019764539 ubox
119 134 0.019188378 ubox
120 125 0.180243523 ubox
120 130 0.004765494 ubox
121 125 0.035552638 ubox
122 126 0.013316173 ubox
122 131 0.015305449 ubox
123 130 0.014630760 ubox
124 128 0.003904371 ubox
124 132 0.005926907 ubox
125 131 0.005921411 ubox
125 139 0.003937444 ubox
126 130 0.005264881 ubox
127 138 0.026913450 ubox
128 137 0.027461817 ubox
129 136 0.027451702 ubox
130 135 0.026316091 ubox
1 10 0.9746794 lbox
2 9 0.9746794 lbox
3 8 0.9746794 lbox
12 105 0.9746794 lbox
13 104 0.9746794 lbox
14 103 0.9746794 lbox
15 102 0.9746794 lbox
16 101 0.9746794 lbox
20 98 0.9746794 lbox
21 97 0.9746794 lbox
23 96 0.9746794 lbox
24 95 0.9746794 lbox
25 94 0.9746794 lbox
26 93 0.9746794 lbox
27 91 0.9746794 lbox
28 90 0.9746794 lbox
31 86 0.9746794 lbox
32 85 0.9746794 lbox
33 84 0.9746794 lbox
34 83 0.9746794 lbox
35 82 0.9746794 lbox
36 69 0.9746794 lbox
37 68 0.9746794 lbox
39 66 0.9746794 lbox
40 65 0.9746794 lbox
41 64 0.9746794 lbox
42 63 0.9746794 lbox
44 61 0.9746794 lbox
45 60 0.9746794 lbox
46 59 0.9746794 lbox
47 58 0.9746794 lbox
71 80 0.9746794 lbox
72 79 0.9746794 lbox
73 78 0.9746794 lbox
106 139 0.9746794 lbox
107 138 0.9746794 lbox
109 136 0.9746794 lbox
110 135 0.9746794 lbox
111 134 0.9746794 lbox
112 133 0.9746794 lbox
114 131 0.9746794 lbox
115 130 0.9746794 lbox
116 129 0.9746794 lbox
117 128 0.9746794 lbox
showpage
end
%%EOF
