%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 17:24:56 2020
%%Title: RNA Dot Plot
%%BoundingBox: 66 211 518 662
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% Homodimer AA FreeEnergy= -46.467599641

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  % draw strand separators if required
  currentdict /nicks known {
    gsave
    % draw lines in red color
    0 1 1 sethsbcolor
    % draw with line thickness of 0.2
    0.2 setlinewidth
    nicks
    { 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
    } forall
    grestore
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (AArnacofold_pf_test_0016)
} def

/sequence { (\
AAAACAAGCGGAAAGGGUGUCUCGGCUGCGUCACGCCUAUUAGGAAGGAGCUUUGUACCACCCAACCCGGAAAACAAGCGGAAAGGGUGUCUCGGCUGCGUCACGCCUAUUAGGAAGGAGCUUUGUACCACCCAACCCGG\
) } def
/len { sequence length } bind def

/cutpoint 71 def

/nicks [ 71 ] def
72 216 translate
72 6 mul len 1 add div dup scale
/Helvetica findfont 0.95 scalefont setfont

drawseq
%data starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data

%draw the grid
drawgrid

%start of base pair probability data
%start of base pair probability data
5 10 0.007113400 ubox
5 11 0.003956177 ubox
5 139 0.012360686 ubox
5 140 0.037781694 ubox
8 137 0.004925448 ubox
8 138 0.059339559 ubox
9 139 0.982473565 ubox
9 140 0.018787175 ubox
10 133 0.004784096 ubox
10 136 0.009832646 ubox
10 137 0.094276984 ubox
10 138 0.993902991 ubox
11 132 0.004780519 ubox
11 136 0.098270838 ubox
11 137 0.992114868 ubox
11 138 0.009270920 ubox
15 63 0.004632013 ubox
15 131 0.008498175 ubox
15 132 0.011786863 ubox
15 133 0.998310987 ubox
15 138 0.004362345 ubox
16 62 0.004637213 ubox
16 129 0.015699775 ubox
16 131 0.011431409 ubox
16 132 0.999757439 ubox
16 133 0.006227284 ubox
16 137 0.004366533 ubox
17 61 0.004637205 ubox
17 128 0.016184331 ubox
17 129 0.004745998 ubox
17 131 0.999757290 ubox
17 132 0.005208474 ubox
17 136 0.004364876 ubox
18 60 0.004631837 ubox
18 127 0.016910421 ubox
18 130 0.998726779 ubox
18 135 0.004246352 ubox
19 34 0.003429711 ubox
19 59 0.004234914 ubox
19 126 0.018535311 ubox
19 128 0.365902315 ubox
19 129 0.927476000 ubox
20 33 0.003443937 ubox
20 125 0.020426413 ubox
20 127 0.509480042 ubox
21 55 0.004026866 ubox
21 125 0.761286921 ubox
22 125 0.057397362 ubox
22 127 0.052721307 ubox
23 30 0.006070071 ubox
23 125 0.520735528 ubox
24 29 0.006397049 ubox
24 32 0.004160592 ubox
24 37 0.003572431 ubox
24 52 0.004843786 ubox
24 121 0.004322645 ubox
24 122 0.847873467 ubox
24 123 0.042519530 ubox
24 124 0.449356821 ubox
24 126 0.017539553 ubox
24 128 0.020876720 ubox
24 129 0.011708745 ubox
25 31 0.004187342 ubox
25 36 0.003621709 ubox
25 51 0.005036663 ubox
25 121 0.875466733 ubox
25 122 0.017997940 ubox
25 123 0.408008949 ubox
25 124 0.059486396 ubox
25 126 0.094344968 ubox
25 128 0.013229346 ubox
26 30 0.004180218 ubox
26 35 0.003644471 ubox
26 50 0.005038233 ubox
26 120 0.875667590 ubox
26 125 0.094913397 ubox
27 49 0.005015817 ubox
27 118 0.004049254 ubox
27 119 0.867501692 ubox
27 127 0.012832636 ubox
28 32 0.003739837 ubox
28 34 0.005803528 ubox
28 36 0.016143233 ubox
28 106 0.007667025 ubox
28 121 0.479857808 ubox
28 122 0.015487094 ubox
28 123 0.012521307 ubox
28 126 0.013084176 ubox
29 35 0.022587231 ubox
29 47 0.004828416 ubox
29 105 0.008084674 ubox
29 117 0.844854762 ubox
29 118 0.150083383 ubox
29 120 0.479547641 ubox
29 125 0.013091005 ubox
30 34 0.026507334 ubox
30 36 0.005125457 ubox
30 104 0.008273864 ubox
30 121 0.026194240 ubox
30 124 0.011591066 ubox
31 35 0.005893459 ubox
31 45 0.004027705 ubox
31 103 0.008159305 ubox
31 114 0.004275128 ubox
31 115 0.151903151 ubox
31 116 0.093306047 ubox
31 117 0.022575252 ubox
31 118 0.168159969 ubox
31 119 0.438170056 ubox
31 120 0.021649613 ubox
32 44 0.004242808 ubox
32 114 0.096138397 ubox
32 117 0.165848727 ubox
32 118 0.455222717 ubox
33 101 0.008159305 ubox
34 43 0.004455798 ubox
34 100 0.008273864 ubox
34 113 0.020807908 ubox
34 114 0.011910344 ubox
34 117 0.110605252 ubox
34 118 0.008748710 ubox
35 99 0.008084674 ubox
36 44 0.004851477 ubox
36 48 0.003181119 ubox
36 98 0.007667025 ubox
36 113 0.009415288 ubox
36 114 0.994473355 ubox
37 43 0.005193187 ubox
37 47 0.003762032 ubox
37 113 0.999536645 ubox
38 42 0.004681826 ubox
38 46 0.003685796 ubox
38 109 0.004020605 ubox
38 112 0.998955688 ubox
39 108 0.004020605 ubox
39 110 0.020510223 ubox
39 111 0.974290448 ubox
40 109 0.020510223 ubox
41 109 0.974290448 ubox
42 108 0.998955688 ubox
43 104 0.020807908 ubox
43 106 0.009415288 ubox
43 107 0.999536645 ubox
44 101 0.004275128 ubox
44 102 0.096138397 ubox
44 104 0.011910344 ubox
44 106 0.994473355 ubox
45 53 0.003248752 ubox
45 101 0.151903151 ubox
46 52 0.003325554 ubox
46 101 0.093306047 ubox
47 51 0.003265693 ubox
47 59 0.003375000 ubox
47 99 0.844854762 ubox
47 101 0.022575252 ubox
47 102 0.165848727 ubox
47 104 0.110605252 ubox
48 58 0.003410522 ubox
48 97 0.004049254 ubox
48 99 0.150083383 ubox
48 101 0.168159969 ubox
48 102 0.455222717 ubox
48 104 0.008748710 ubox
49 97 0.867501692 ubox
49 101 0.438170056 ubox
50 56 0.003434628 ubox
50 96 0.875667590 ubox
50 99 0.479547641 ubox
50 101 0.021649613 ubox
51 55 0.003482473 ubox
51 94 0.004322645 ubox
51 95 0.875466733 ubox
51 98 0.479857808 ubox
51 100 0.026194240 ubox
52 94 0.847873467 ubox
52 95 0.017997940 ubox
52 98 0.015487094 ubox
53 94 0.042519530 ubox
53 95 0.408008949 ubox
53 98 0.012521307 ubox
54 94 0.449356821 ubox
54 95 0.059486396 ubox
54 100 0.011591066 ubox
55 90 0.020426413 ubox
55 91 0.761286921 ubox
55 92 0.057397362 ubox
55 93 0.520735528 ubox
55 96 0.094913397 ubox
55 99 0.013091005 ubox
56 89 0.018535311 ubox
56 94 0.017539553 ubox
56 95 0.094344968 ubox
56 98 0.013084176 ubox
57 88 0.016910421 ubox
57 90 0.509480042 ubox
57 92 0.052721307 ubox
57 97 0.012832636 ubox
58 87 0.016184331 ubox
58 89 0.365902315 ubox
58 94 0.020876720 ubox
58 95 0.013229346 ubox
59 86 0.015699775 ubox
59 87 0.004745998 ubox
59 89 0.927476000 ubox
59 94 0.011708745 ubox
60 88 0.998726779 ubox
61 85 0.008498175 ubox
61 86 0.011431409 ubox
61 87 0.999757290 ubox
62 81 0.004780519 ubox
62 85 0.011786863 ubox
62 86 0.999757439 ubox
62 87 0.005208474 ubox
63 80 0.004784096 ubox
63 85 0.998310987 ubox
63 86 0.006227284 ubox
65 88 0.004246352 ubox
66 80 0.009832646 ubox
66 81 0.098270838 ubox
66 87 0.004364876 ubox
67 78 0.004925448 ubox
67 80 0.094276984 ubox
67 81 0.992114868 ubox
67 86 0.004366533 ubox
68 78 0.059339559 ubox
68 80 0.993902991 ubox
68 81 0.009270920 ubox
68 85 0.004362345 ubox
69 75 0.012360686 ubox
69 79 0.982473565 ubox
70 75 0.037781694 ubox
70 79 0.018787175 ubox
75 80 0.007113400 ubox
75 81 0.003956177 ubox
85 133 0.004630374 ubox
86 132 0.004635571 ubox
87 131 0.004635563 ubox
88 130 0.004630197 ubox
89 104 0.003429710 ubox
89 129 0.004233414 ubox
90 103 0.003443936 ubox
91 125 0.004025512 ubox
93 100 0.006070070 ubox
94 99 0.006397048 ubox
94 102 0.004160592 ubox
94 107 0.003572427 ubox
94 122 0.004842389 ubox
95 101 0.004187342 ubox
95 106 0.003621705 ubox
95 121 0.005035230 ubox
96 100 0.004180218 ubox
96 105 0.003644468 ubox
96 120 0.005036800 ubox
97 119 0.005014390 ubox
98 102 0.003739836 ubox
98 104 0.005803528 ubox
98 106 0.016143232 ubox
99 105 0.022587231 ubox
99 117 0.004827043 ubox
100 104 0.026507334 ubox
100 106 0.005125457 ubox
101 105 0.005893459 ubox
101 115 0.004026573 ubox
102 114 0.004241617 ubox
104 113 0.004454600 ubox
106 114 0.004851148 ubox
106 118 0.003181117 ubox
107 113 0.005192877 ubox
107 117 0.003762029 ubox
108 112 0.004681547 ubox
108 116 0.003685794 ubox
115 123 0.003248749 ubox
116 122 0.003325551 ubox
117 121 0.003265690 ubox
117 129 0.003374999 ubox
118 128 0.003410521 ubox
120 126 0.003434628 ubox
121 125 0.003482472 ubox
9 139 0.9746794 lbox
10 138 0.9746794 lbox
11 137 0.9746794 lbox
15 133 0.9746794 lbox
16 132 0.9746794 lbox
17 131 0.9746794 lbox
18 130 0.9746794 lbox
19 129 0.9746794 lbox
21 125 0.9746794 lbox
24 122 0.9746794 lbox
25 121 0.9746794 lbox
26 120 0.9746794 lbox
27 119 0.9746794 lbox
29 117 0.9746794 lbox
36 114 0.9746794 lbox
37 113 0.9746794 lbox
38 112 0.9746794 lbox
39 111 0.9746794 lbox
41 109 0.9746794 lbox
42 108 0.9746794 lbox
43 107 0.9746794 lbox
44 106 0.9746794 lbox
47 99 0.9746794 lbox
49 97 0.9746794 lbox
50 96 0.9746794 lbox
51 95 0.9746794 lbox
52 94 0.9746794 lbox
55 91 0.9746794 lbox
59 89 0.9746794 lbox
60 88 0.9746794 lbox
61 87 0.9746794 lbox
62 86 0.9746794 lbox
63 85 0.9746794 lbox
67 81 0.9746794 lbox
68 80 0.9746794 lbox
69 79 0.9746794 lbox
showpage
end
%%EOF
