%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 17:24:57 2020
%%Title: RNA Dot Plot
%%BoundingBox: 66 211 518 662
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% Monomer B FreeEnergy= -21.152306993

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  % draw strand separators if required
  currentdict /nicks known {
    gsave
    % draw lines in red color
    0 1 1 sethsbcolor
    % draw with line thickness of 0.2
    0.2 setlinewidth
    nicks
    { 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
    } forall
    grestore
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (Brnacofold_pf_test_0022)
} def

/sequence { (\
GGAUGUGCGUCGUCUCGAUAUUAUUUAACGAGUGACGGUCAGACAACAAACAGUCUAGGCUCCGACGUUCCAUAAAGCAU\
) } def
/len { sequence length } bind def

72 216 translate
72 6 mul len 1 add div dup scale
/Helvetica findfont 0.95 scalefont setfont

drawseq
%data starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data

%draw the grid
drawgrid

%start of base pair probability data
%start of base pair probability data
1 8 0.007067672 ubox
1 44 0.051481085 ubox
1 63 0.142349157 ubox
1 66 0.004575946 ubox
1 70 0.449873141 ubox
1 71 0.851975682 ubox
1 73 0.007463385 ubox
1 78 0.020064989 ubox
2 14 0.003269335 ubox
2 40 0.010562470 ubox
2 44 0.003789494 ubox
2 62 0.142411115 ubox
2 63 0.003491262 ubox
2 69 0.458931599 ubox
2 70 0.851453652 ubox
2 71 0.012716061 ubox
2 73 0.010723068 ubox
2 78 0.012984195 ubox
3 13 0.003298719 ubox
3 39 0.010569025 ubox
3 61 0.132298914 ubox
3 68 0.642810861 ubox
3 69 0.718277942 ubox
3 73 0.144427069 ubox
3 80 0.043317472 ubox
4 12 0.003304989 ubox
4 38 0.010422162 ubox
4 41 0.054961703 ubox
4 52 0.003328114 ubox
4 59 0.004441506 ubox
4 64 0.016823510 ubox
4 65 0.006713728 ubox
4 67 0.784505166 ubox
4 72 0.149989441 ubox
4 74 0.032817711 ubox
4 75 0.005322857 ubox
4 79 0.048109619 ubox
5 11 0.003313303 ubox
5 40 0.059167829 ubox
5 51 0.003795274 ubox
5 60 0.029016887 ubox
5 63 0.017451143 ubox
5 66 0.802626220 ubox
5 68 0.024960941 ubox
5 69 0.011440216 ubox
5 70 0.049777556 ubox
5 71 0.149689377 ubox
5 73 0.036099907 ubox
5 78 0.049514810 ubox
5 80 0.065996399 ubox
6 38 0.004074537 ubox
6 41 0.004014886 ubox
6 50 0.003762437 ubox
6 57 0.003711835 ubox
6 59 0.027862183 ubox
6 64 0.140205599 ubox
6 65 0.772644407 ubox
6 67 0.067213710 ubox
6 72 0.036301504 ubox
6 77 0.048514911 ubox
6 79 0.072213328 ubox
7 36 0.003947744 ubox
7 39 0.014387543 ubox
7 40 0.009518641 ubox
7 60 0.015545575 ubox
7 61 0.015232517 ubox
7 62 0.046061629 ubox
7 63 0.228412768 ubox
7 66 0.069983973 ubox
7 68 0.541333570 ubox
7 69 0.016102474 ubox
7 70 0.009918043 ubox
7 71 0.033471995 ubox
7 78 0.074101729 ubox
8 37 0.740243635 ubox
8 38 0.011250616 ubox
8 59 0.014857391 ubox
8 64 0.199566435 ubox
8 67 0.545336057 ubox
8 77 0.073501893 ubox
9 19 0.003175959 ubox
9 36 0.835519740 ubox
9 47 0.003997166 ubox
9 62 0.012969511 ubox
9 63 0.064131149 ubox
9 66 0.544521964 ubox
10 18 0.003532432 ubox
10 31 0.003182338 ubox
10 35 0.837222600 ubox
10 38 0.006197084 ubox
10 46 0.003971365 ubox
10 65 0.544316355 ubox
11 17 0.003614880 ubox
11 30 0.003361876 ubox
11 34 0.837693056 ubox
11 37 0.041509045 ubox
11 64 0.543845916 ubox
11 67 0.005083941 ubox
12 16 0.003482123 ubox
12 29 0.003583979 ubox
12 33 0.808592091 ubox
12 36 0.152872690 ubox
12 44 0.007846990 ubox
12 60 0.008163225 ubox
12 62 0.017507853 ubox
12 63 0.510313069 ubox
12 66 0.005101901 ubox
13 28 0.003496733 ubox
13 31 0.007124498 ubox
13 32 0.012561844 ubox
13 34 0.057126985 ubox
13 35 0.153315386 ubox
13 37 0.004505074 ubox
13 43 0.008133034 ubox
13 59 0.009104065 ubox
13 65 0.005068164 ubox
14 30 0.007318479 ubox
14 32 0.986931222 ubox
14 34 0.125172139 ubox
14 42 0.008172390 ubox
14 58 0.009068016 ubox
14 59 0.004362707 ubox
14 64 0.004796472 ubox
15 31 0.996915321 ubox
15 32 0.009484477 ubox
15 35 0.006884732 ubox
15 41 0.008124045 ubox
15 57 0.008322441 ubox
15 58 0.003901213 ubox
16 30 0.998077930 ubox
16 32 0.030855048 ubox
16 34 0.007391803 ubox
16 37 0.018212701 ubox
16 58 0.003348346 ubox
17 25 0.011484893 ubox
17 26 0.022790834 ubox
17 29 0.994576289 ubox
17 33 0.005927948 ubox
17 36 0.019610710 ubox
17 40 0.015567234 ubox
17 62 0.004655133 ubox
18 22 0.004965059 ubox
18 24 0.028331311 ubox
18 25 0.056485811 ubox
18 26 0.045409210 ubox
18 39 0.015576480 ubox
18 61 0.003451207 ubox
19 23 0.025528374 ubox
19 27 0.893186767 ubox
19 28 0.152707900 ubox
19 30 0.004410952 ubox
19 34 0.014232551 ubox
19 38 0.015440513 ubox
20 24 0.019631500 ubox
20 25 0.090925259 ubox
20 26 0.897380207 ubox
20 33 0.015843162 ubox
21 27 0.058768825 ubox
21 28 0.050169019 ubox
21 31 0.003258162 ubox
21 32 0.015894796 ubox
21 35 0.038187715 ubox
22 27 0.046210270 ubox
22 28 0.016768351 ubox
22 30 0.003287921 ubox
22 31 0.015561068 ubox
22 34 0.041397075 ubox
23 33 0.041928250 ubox
24 28 0.005072290 ubox
24 32 0.041872475 ubox
25 31 0.041000140 ubox
25 35 0.003429974 ubox
26 30 0.036979541 ubox
26 34 0.003746554 ubox
27 33 0.003590936 ubox
27 69 0.003278235 ubox
28 68 0.003449809 ubox
29 34 0.003177831 ubox
29 37 0.007924031 ubox
29 67 0.003463897 ubox
30 36 0.008381518 ubox
30 62 0.004618537 ubox
30 66 0.003355112 ubox
31 61 0.004607140 ubox
32 36 0.006749573 ubox
32 60 0.004567274 ubox
32 62 0.005704867 ubox
32 63 0.004377030 ubox
33 37 0.003914379 ubox
33 41 0.005162739 ubox
33 59 0.004485678 ubox
34 40 0.009162181 ubox
34 55 0.007775465 ubox
34 61 0.003928164 ubox
34 62 0.098789091 ubox
34 63 0.028423554 ubox
35 39 0.007980788 ubox
35 54 0.007790206 ubox
35 61 0.078648388 ubox
36 53 0.007745790 ubox
36 59 0.006038975 ubox
36 64 0.014893963 ubox
37 60 0.049672848 ubox
37 61 0.599860620 ubox
37 62 0.162880991 ubox
37 63 0.048198172 ubox
38 47 0.004993750 ubox
38 51 0.006980710 ubox
38 60 0.989468521 ubox
38 61 0.006582477 ubox
38 62 0.043422365 ubox
38 63 0.008438172 ubox
38 66 0.022872688 ubox
39 46 0.004761792 ubox
39 50 0.006890237 ubox
39 57 0.011084973 ubox
39 58 0.047220405 ubox
39 59 0.990887398 ubox
39 65 0.022940361 ubox
40 58 0.990897564 ubox
40 59 0.015807179 ubox
40 64 0.023066095 ubox
41 56 0.991596707 ubox
42 47 0.006304285 ubox
42 55 0.998314420 ubox
42 62 0.005343006 ubox
43 54 0.998173745 ubox
43 61 0.005127317 ubox
44 53 0.997992796 ubox
45 69 0.004623651 ubox
46 54 0.008378322 ubox
46 68 0.005285059 ubox
47 53 0.011162956 ubox
47 67 0.005354238 ubox
49 69 0.036879614 ubox
50 68 0.041550848 ubox
51 67 0.041885786 ubox
52 61 0.008848423 ubox
53 60 0.009495165 ubox
53 66 0.053043765 ubox
54 59 0.009002259 ubox
54 65 0.053106299 ubox
55 64 0.053110479 ubox
57 68 0.003486518 ubox
57 73 0.003186815 ubox
58 62 0.005225525 ubox
58 63 0.016885657 ubox
58 66 0.006635648 ubox
58 69 0.008740217 ubox
58 71 0.012670675 ubox
59 63 0.007857271 ubox
59 66 0.005736365 ubox
59 68 0.015840758 ubox
59 70 0.012644288 ubox
59 78 0.014184324 ubox
60 64 0.007023121 ubox
60 67 0.016527223 ubox
60 77 0.014218686 ubox
61 65 0.004329409 ubox
61 67 0.003402461 ubox
61 76 0.013628751 ubox
62 67 0.017750076 ubox
63 67 0.008373551 ubox
64 69 0.003772334 ubox
64 70 0.032674670 ubox
64 71 0.027617785 ubox
64 73 0.004621562 ubox
64 78 0.012380123 ubox
65 69 0.028561194 ubox
65 73 0.003348056 ubox
65 80 0.008966118 ubox
66 77 0.015323787 ubox
67 71 0.008498205 ubox
67 73 0.007089633 ubox
67 78 0.089225518 ubox
67 80 0.004200983 ubox
68 72 0.006804756 ubox
68 74 0.006412557 ubox
68 75 0.007959430 ubox
68 76 0.007595442 ubox
68 77 0.089040027 ubox
68 79 0.004459013 ubox
69 74 0.007877670 ubox
69 75 0.008480347 ubox
69 76 0.077581038 ubox
70 77 0.008228136 ubox
71 77 0.028287267 ubox
72 80 0.026344931 ubox
73 77 0.008869425 ubox
73 79 0.028678122 ubox
74 80 0.009712374 ubox
75 80 0.011428704 ubox
76 80 0.007024376 ubox
1 71 0.9746794 lbox
2 70 0.9746794 lbox
3 69 0.9746794 lbox
7 68 0.9746794 lbox
8 67 0.9746794 lbox
9 66 0.9746794 lbox
10 65 0.9746794 lbox
11 64 0.9746794 lbox
12 63 0.9746794 lbox
14 32 0.9746794 lbox
15 31 0.9746794 lbox
16 30 0.9746794 lbox
17 29 0.9746794 lbox
19 27 0.9746794 lbox
20 26 0.9746794 lbox
37 61 0.9746794 lbox
38 60 0.9746794 lbox
39 59 0.9746794 lbox
40 58 0.9746794 lbox
41 56 0.9746794 lbox
42 55 0.9746794 lbox
43 54 0.9746794 lbox
44 53 0.9746794 lbox
showpage
end
%%EOF
