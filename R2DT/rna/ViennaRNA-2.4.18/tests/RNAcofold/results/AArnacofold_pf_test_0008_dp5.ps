%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 17:24:54 2020
%%Title: RNA Dot Plot
%%BoundingBox: 66 211 518 662
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% Homodimer AA FreeEnergy= -40.299919122

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  % draw strand separators if required
  currentdict /nicks known {
    gsave
    % draw lines in red color
    0 1 1 sethsbcolor
    % draw with line thickness of 0.2
    0.2 setlinewidth
    nicks
    { 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
    } forall
    grestore
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (AArnacofold_pf_test_0008)
} def

/sequence { (\
AGCACCGUGUAAAUGACGUAGUGCGAUGGAUUCGACAUUACGAUUGGCUUUUUAUAAACUACAGAAGCGGAGCACCGUGUAAAUGACGUAGUGCGAUGGAUUCGACAUUACGAUUGGCUUUUUAUAAACUACAGAAGCGG\
) } def
/len { sequence length } bind def

/cutpoint 71 def

/nicks [ 71 ] def
72 216 translate
72 6 mul len 1 add div dup scale
/Helvetica findfont 0.95 scalefont setfont

drawseq
%data starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data

%draw the grid
drawgrid

%start of base pair probability data
%start of base pair probability data
1 80 0.027602033 ubox
1 84 0.024358616 ubox
1 114 0.003888620 ubox
1 115 0.006469279 ubox
2 10 0.007012848 ubox
2 73 0.004517505 ubox
2 78 0.004690247 ubox
2 80 0.976647091 ubox
2 138 0.004329033 ubox
3 9 0.007173942 ubox
3 72 0.004517505 ubox
3 77 0.004924362 ubox
3 79 0.999228090 ubox
3 137 0.004255760 ubox
3 139 0.003385744 ubox
4 8 0.005815360 ubox
4 78 0.999193075 ubox
4 80 0.010523098 ubox
5 77 0.997674204 ubox
5 79 0.011069041 ubox
5 140 0.017041245 ubox
6 15 0.021154589 ubox
6 77 0.033986542 ubox
6 139 0.017222935 ubox
7 14 0.021231699 ubox
7 73 0.004924362 ubox
7 75 0.997674204 ubox
7 76 0.033986542 ubox
7 138 0.007546807 ubox
8 13 0.021112234 ubox
8 72 0.004690247 ubox
8 74 0.999193075 ubox
8 133 0.003904124 ubox
8 137 0.006950518 ubox
9 73 0.999228090 ubox
9 75 0.011069041 ubox
9 132 0.004875981 ubox
10 15 0.003315049 ubox
10 16 0.003520813 ubox
10 46 0.012442028 ubox
10 71 0.027602033 ubox
10 72 0.976647091 ubox
10 74 0.010523098 ubox
10 131 0.004850946 ubox
11 44 0.005873497 ubox
11 45 0.027407430 ubox
11 51 0.003586774 ubox
11 130 0.004635644 ubox
12 44 0.026543516 ubox
12 45 0.194300874 ubox
12 50 0.004077379 ubox
13 44 0.209375470 ubox
13 45 0.044345827 ubox
13 49 0.003974605 ubox
13 55 0.004369946 ubox
14 42 0.003253750 ubox
14 43 0.188442267 ubox
14 46 0.201877532 ubox
14 47 0.003987624 ubox
14 54 0.004554792 ubox
14 69 0.005639664 ubox
14 70 0.004157448 ubox
14 71 0.024358616 ubox
14 133 0.003791767 ubox
15 44 0.077509419 ubox
15 45 0.360381686 ubox
15 53 0.004569758 ubox
15 132 0.003800660 ubox
16 44 0.376783699 ubox
16 45 0.036942155 ubox
16 52 0.004503153 ubox
17 42 0.983866212 ubox
17 46 0.008649513 ubox
17 69 0.008405983 ubox
17 70 0.003745994 ubox
17 112 0.005197052 ubox
18 41 0.999872468 ubox
18 111 0.005302479 ubox
19 40 0.999694927 ubox
19 110 0.005302139 ubox
20 39 0.998851325 ubox
20 109 0.005297883 ubox
21 36 0.007383691 ubox
21 38 0.998981971 ubox
21 108 0.005298664 ubox
22 35 0.007500355 ubox
22 37 0.999654412 ubox
22 107 0.005302222 ubox
23 36 0.999669706 ubox
23 106 0.005302128 ubox
24 34 0.999370049 ubox
24 104 0.005245709 ubox
25 32 0.005539242 ubox
25 33 0.999692810 ubox
25 103 0.005244123 ubox
26 31 0.020737463 ubox
26 32 0.989493008 ubox
26 102 0.005150973 ubox
27 34 0.010648511 ubox
28 32 0.003220028 ubox
28 33 0.011134737 ubox
32 96 0.005150973 ubox
33 95 0.005244123 ubox
34 94 0.005245709 ubox
36 93 0.005302128 ubox
37 92 0.005302222 ubox
38 91 0.005298664 ubox
39 90 0.005297883 ubox
40 89 0.005302139 ubox
41 88 0.005302479 ubox
42 87 0.005197052 ubox
44 57 0.005312736 ubox
44 64 0.008894754 ubox
44 69 0.015169227 ubox
44 70 0.063996707 ubox
44 71 0.003888620 ubox
45 56 0.006101679 ubox
45 61 0.016686050 ubox
45 63 0.013225317 ubox
45 69 0.081525861 ubox
45 70 0.500546365 ubox
45 71 0.006469279 ubox
45 140 0.008804405 ubox
46 55 0.006196948 ubox
46 59 0.004323121 ubox
46 60 0.018923324 ubox
46 62 0.013957987 ubox
46 68 0.068208576 ubox
47 59 0.019185615 ubox
47 68 0.995591190 ubox
47 138 0.017197461 ubox
48 64 0.004267522 ubox
48 67 0.998499997 ubox
48 69 0.006358578 ubox
48 137 0.017263688 ubox
49 56 0.003354236 ubox
49 57 0.009587058 ubox
49 58 0.017748841 ubox
49 63 0.004149288 ubox
49 65 0.032110246 ubox
49 66 0.995401658 ubox
49 67 0.012150446 ubox
49 136 0.017232478 ubox
50 56 0.010180936 ubox
50 57 0.019206540 ubox
50 58 0.008037443 ubox
50 61 0.003854633 ubox
50 63 0.005244783 ubox
50 64 0.044299155 ubox
50 65 0.990976601 ubox
50 66 0.061556240 ubox
50 67 0.005483932 ubox
50 135 0.017158262 ubox
51 56 0.019384639 ubox
51 57 0.010269323 ubox
51 58 0.010776890 ubox
51 61 0.011162609 ubox
51 63 0.048851787 ubox
51 64 0.979222147 ubox
51 65 0.086433335 ubox
51 66 0.010178042 ubox
51 128 0.005678384 ubox
51 134 0.016616731 ubox
52 56 0.011138380 ubox
52 57 0.015649199 ubox
52 58 0.028698823 ubox
52 61 0.093784103 ubox
52 63 0.869135276 ubox
52 64 0.104977319 ubox
52 65 0.018116007 ubox
52 127 0.007746524 ubox
52 133 0.014048960 ubox
53 57 0.030463002 ubox
53 58 0.050615280 ubox
53 61 0.481015755 ubox
53 63 0.110542849 ubox
53 64 0.020912789 ubox
53 65 0.004550587 ubox
53 126 0.008685883 ubox
53 131 0.003737590 ubox
54 60 0.472716856 ubox
54 125 0.008727842 ubox
54 130 0.003641863 ubox
55 61 0.206781101 ubox
55 63 0.026544526 ubox
55 64 0.011727683 ubox
55 124 0.008727842 ubox
56 60 0.189941122 ubox
56 123 0.008685883 ubox
57 122 0.007746524 ubox
58 121 0.005678384 ubox
59 64 0.010235558 ubox
59 67 0.007728385 ubox
59 70 0.006371772 ubox
60 66 0.007610812 ubox
60 69 0.006371390 ubox
60 81 0.004635644 ubox
60 124 0.003641863 ubox
61 80 0.004850946 ubox
61 123 0.003737590 ubox
62 67 0.005845960 ubox
62 69 0.006610575 ubox
62 79 0.004875981 ubox
62 85 0.003800660 ubox
63 78 0.003904124 ubox
63 84 0.003791767 ubox
63 122 0.014048960 ubox
64 121 0.016616731 ubox
65 120 0.017158262 ubox
66 119 0.017232478 ubox
67 73 0.004255760 ubox
67 78 0.006950518 ubox
67 118 0.017263688 ubox
68 72 0.004329033 ubox
68 77 0.007546807 ubox
68 117 0.017197461 ubox
69 73 0.003385744 ubox
69 76 0.017222935 ubox
70 75 0.017041245 ubox
70 115 0.008804405 ubox
72 80 0.007012891 ubox
73 79 0.007173987 ubox
74 78 0.005815396 ubox
76 85 0.021154626 ubox
77 84 0.021231735 ubox
78 83 0.021112270 ubox
80 85 0.003315049 ubox
80 86 0.003520814 ubox
80 116 0.012442028 ubox
81 114 0.005873497 ubox
81 115 0.027407430 ubox
81 121 0.003586774 ubox
82 114 0.026543516 ubox
82 115 0.194300874 ubox
82 120 0.004077379 ubox
83 114 0.209375470 ubox
83 115 0.044345827 ubox
83 119 0.003974605 ubox
83 125 0.004369946 ubox
84 112 0.003253750 ubox
84 113 0.188442267 ubox
84 116 0.201877532 ubox
84 117 0.003987624 ubox
84 124 0.004554792 ubox
84 139 0.005639664 ubox
84 140 0.004157448 ubox
85 114 0.077509419 ubox
85 115 0.360381686 ubox
85 123 0.004569757 ubox
86 114 0.376783699 ubox
86 115 0.036942155 ubox
86 122 0.004503153 ubox
87 112 0.983866212 ubox
87 116 0.008649513 ubox
87 139 0.008405983 ubox
87 140 0.003745994 ubox
88 111 0.999872468 ubox
89 110 0.999694927 ubox
90 109 0.998851325 ubox
91 106 0.007383691 ubox
91 108 0.998981971 ubox
92 105 0.007500355 ubox
92 107 0.999654412 ubox
93 106 0.999669706 ubox
94 104 0.999370049 ubox
95 102 0.005539242 ubox
95 103 0.999692810 ubox
96 101 0.020737463 ubox
96 102 0.989493008 ubox
97 104 0.010648511 ubox
98 102 0.003220028 ubox
98 103 0.011134737 ubox
114 127 0.005312736 ubox
114 134 0.008894754 ubox
114 139 0.015169227 ubox
114 140 0.063996707 ubox
115 126 0.006101679 ubox
115 131 0.016686050 ubox
115 133 0.013225317 ubox
115 139 0.081525861 ubox
115 140 0.500546365 ubox
116 125 0.006196948 ubox
116 129 0.004323121 ubox
116 130 0.018923324 ubox
116 132 0.013957987 ubox
116 138 0.068208576 ubox
117 129 0.019185615 ubox
117 138 0.995591190 ubox
118 134 0.004267522 ubox
118 137 0.998499997 ubox
118 139 0.006358578 ubox
119 126 0.003354236 ubox
119 127 0.009587058 ubox
119 128 0.017748841 ubox
119 133 0.004149288 ubox
119 135 0.032110246 ubox
119 136 0.995401658 ubox
119 137 0.012150446 ubox
120 126 0.010180936 ubox
120 127 0.019206540 ubox
120 128 0.008037443 ubox
120 131 0.003854633 ubox
120 133 0.005244783 ubox
120 134 0.044299155 ubox
120 135 0.990976601 ubox
120 136 0.061556240 ubox
120 137 0.005483932 ubox
121 126 0.019384639 ubox
121 127 0.010269323 ubox
121 128 0.010776890 ubox
121 131 0.011162609 ubox
121 133 0.048851787 ubox
121 134 0.979222147 ubox
121 135 0.086433335 ubox
121 136 0.010178042 ubox
122 126 0.011138380 ubox
122 127 0.015649199 ubox
122 128 0.028698823 ubox
122 131 0.093784103 ubox
122 133 0.869135276 ubox
122 134 0.104977319 ubox
122 135 0.018116007 ubox
123 127 0.030463002 ubox
123 128 0.050615280 ubox
123 131 0.481015755 ubox
123 133 0.110542849 ubox
123 134 0.020912789 ubox
123 135 0.004550587 ubox
124 130 0.472716856 ubox
125 131 0.206781101 ubox
125 133 0.026544526 ubox
125 134 0.011727683 ubox
126 130 0.189941122 ubox
129 134 0.010235558 ubox
129 137 0.007728385 ubox
129 140 0.006371772 ubox
130 136 0.007610812 ubox
130 139 0.006371390 ubox
132 137 0.005845960 ubox
132 139 0.006610575 ubox
2 80 0.9746794 lbox
3 79 0.9746794 lbox
4 78 0.9746794 lbox
5 77 0.9746794 lbox
7 75 0.9746794 lbox
8 74 0.9746794 lbox
9 73 0.9746794 lbox
10 72 0.9746794 lbox
17 42 0.9746794 lbox
18 41 0.9746794 lbox
19 40 0.9746794 lbox
20 39 0.9746794 lbox
21 38 0.9746794 lbox
22 37 0.9746794 lbox
23 36 0.9746794 lbox
24 34 0.9746794 lbox
25 33 0.9746794 lbox
26 32 0.9746794 lbox
47 68 0.9746794 lbox
48 67 0.9746794 lbox
49 66 0.9746794 lbox
50 65 0.9746794 lbox
51 64 0.9746794 lbox
52 63 0.9746794 lbox
87 112 0.9746794 lbox
88 111 0.9746794 lbox
89 110 0.9746794 lbox
90 109 0.9746794 lbox
91 108 0.9746794 lbox
92 107 0.9746794 lbox
93 106 0.9746794 lbox
94 104 0.9746794 lbox
95 103 0.9746794 lbox
96 102 0.9746794 lbox
117 138 0.9746794 lbox
118 137 0.9746794 lbox
119 136 0.9746794 lbox
120 135 0.9746794 lbox
121 134 0.9746794 lbox
122 133 0.9746794 lbox
showpage
end
%%EOF
