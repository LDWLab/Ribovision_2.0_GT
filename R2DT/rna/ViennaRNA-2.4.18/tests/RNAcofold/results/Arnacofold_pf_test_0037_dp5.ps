%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 17:25:00 2020
%%Title: RNA Dot Plot
%%BoundingBox: 66 211 518 662
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% Monomer A FreeEnergy= -17.699224782

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  % draw strand separators if required
  currentdict /nicks known {
    gsave
    % draw lines in red color
    0 1 1 sethsbcolor
    % draw with line thickness of 0.2
    0.2 setlinewidth
    nicks
    { 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
    } forall
    grestore
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (Arnacofold_pf_test_0037)
} def

/sequence { (\
AGCUCCACGUCGGAAUGAUCUCGAGGUCAAUCUGGUCUUACGGCGCAAUAGUAUUUCCUGUCAGCGUUGC\
) } def
/len { sequence length } bind def

72 216 translate
72 6 mul len 1 add div dup scale
/Helvetica findfont 0.95 scalefont setfont

drawseq
%data starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data

%draw the grid
drawgrid

%start of base pair probability data
%start of base pair probability data
1 10 0.010969108 ubox
1 16 0.004924310 ubox
1 27 0.006786601 ubox
1 33 0.030880363 ubox
1 36 0.005550498 ubox
1 38 0.048599801 ubox
1 39 0.023115905 ubox
1 68 0.006611212 ubox
2 6 0.041051524 ubox
2 8 0.071030297 ubox
2 10 0.138184605 ubox
2 11 0.005847724 ubox
2 16 0.007285503 ubox
2 27 0.003317903 ubox
2 28 0.006050860 ubox
2 32 0.032594958 ubox
2 36 0.045263983 ubox
2 37 0.055780337 ubox
2 38 0.025017768 ubox
2 39 0.008726884 ubox
2 41 0.011604162 ubox
2 44 0.072198531 ubox
2 46 0.028430275 ubox
2 52 0.010709248 ubox
2 65 0.018348441 ubox
2 67 0.007590330 ubox
2 70 0.055525259 ubox
3 9 0.148883351 ubox
3 25 0.012075194 ubox
3 26 0.003286936 ubox
3 34 0.006560600 ubox
3 35 0.049224421 ubox
3 42 0.013986441 ubox
3 43 0.072790863 ubox
3 45 0.028454019 ubox
3 51 0.010958655 ubox
3 64 0.018365047 ubox
3 66 0.007647599 ubox
3 69 0.054316771 ubox
4 9 0.011054646 ubox
4 14 0.065962995 ubox
4 24 0.012196409 ubox
4 29 0.003784515 ubox
4 30 0.020024955 ubox
4 34 0.032951029 ubox
4 35 0.009441885 ubox
4 40 0.023360782 ubox
4 42 0.069473969 ubox
4 43 0.004356537 ubox
4 50 0.010626680 ubox
4 63 0.017257653 ubox
5 9 0.016568926 ubox
5 12 0.003390956 ubox
5 13 0.069587597 ubox
5 23 0.012201803 ubox
5 26 0.005344051 ubox
5 34 0.010498141 ubox
5 35 0.074787944 ubox
5 42 0.015252603 ubox
5 43 0.030765756 ubox
5 69 0.007189951 ubox
6 12 0.069598868 ubox
6 25 0.005371063 ubox
6 34 0.073929175 ubox
6 35 0.019659906 ubox
6 42 0.031480128 ubox
6 43 0.007378366 ubox
6 60 0.004456180 ubox
6 66 0.007008912 ubox
6 69 0.011687495 ubox
7 21 0.007195640 ubox
7 27 0.068644946 ubox
7 33 0.053009554 ubox
7 36 0.108737009 ubox
7 38 0.086294608 ubox
7 39 0.095463843 ubox
7 59 0.004232032 ubox
7 61 0.006072397 ubox
7 67 0.023954679 ubox
7 68 0.008800817 ubox
8 23 0.003868461 ubox
8 25 0.003474307 ubox
8 26 0.076388144 ubox
8 34 0.011355156 ubox
8 35 0.111818309 ubox
8 42 0.075491150 ubox
8 45 0.021547095 ubox
8 60 0.006222463 ubox
8 66 0.025346345 ubox
8 69 0.008281323 ubox
9 19 0.012436665 ubox
9 22 0.003861532 ubox
9 31 0.012808438 ubox
9 32 0.006888684 ubox
9 33 0.005831123 ubox
9 36 0.206189234 ubox
9 37 0.576041540 ubox
9 38 0.029268501 ubox
9 39 0.022286889 ubox
9 41 0.077693319 ubox
9 44 0.025521906 ubox
9 59 0.004563258 ubox
9 65 0.024830042 ubox
9 68 0.003437740 ubox
9 70 0.012090996 ubox
10 18 0.012968483 ubox
10 24 0.076741558 ubox
10 30 0.013092166 ubox
10 34 0.004290643 ubox
10 35 0.810782745 ubox
10 40 0.067609902 ubox
10 43 0.025549988 ubox
10 64 0.023485089 ubox
10 69 0.005093202 ubox
11 17 0.012990500 ubox
11 23 0.076992432 ubox
11 34 0.987472776 ubox
11 35 0.043394071 ubox
11 42 0.026023242 ubox
12 16 0.008016444 ubox
12 21 0.011479217 ubox
12 22 0.075966442 ubox
12 32 0.009320569 ubox
12 33 0.991618526 ubox
12 38 0.006824508 ubox
12 41 0.025953091 ubox
12 58 0.003180710 ubox
13 20 0.064979685 ubox
13 21 0.036735238 ubox
13 22 0.006183064 ubox
13 31 0.008141119 ubox
13 32 0.993769278 ubox
13 33 0.005995621 ubox
13 37 0.006962548 ubox
13 57 0.003196687 ubox
14 19 0.059632542 ubox
14 21 0.008129373 ubox
14 31 0.981462651 ubox
14 36 0.006770293 ubox
14 39 0.011096937 ubox
15 19 0.006316629 ubox
15 31 0.034169555 ubox
15 38 0.018684800 ubox
15 39 0.014916640 ubox
16 29 0.986946320 ubox
16 30 0.033747790 ubox
16 40 0.003393211 ubox
17 28 0.995038180 ubox
17 37 0.056521992 ubox
17 39 0.003489337 ubox
18 27 0.994835092 ubox
18 36 0.056602790 ubox
18 38 0.003355465 ubox
19 25 0.006535595 ubox
19 26 0.991695673 ubox
19 35 0.055584717 ubox
20 25 0.976292443 ubox
20 26 0.054524342 ubox
20 34 0.055446562 ubox
20 35 0.010725272 ubox
21 25 0.049631894 ubox
21 34 0.010502797 ubox
22 34 0.003983996 ubox
22 35 0.007490097 ubox
23 32 0.052601919 ubox
23 39 0.017250415 ubox
24 31 0.051921413 ubox
24 33 0.014339301 ubox
24 38 0.018273823 ubox
24 39 0.005786849 ubox
25 32 0.014588173 ubox
25 33 0.005487249 ubox
25 37 0.018489041 ubox
25 38 0.006499357 ubox
26 31 0.009898569 ubox
26 32 0.005643462 ubox
26 36 0.017579855 ubox
26 37 0.006894470 ubox
27 35 0.018410368 ubox
28 34 0.021793452 ubox
28 35 0.006798184 ubox
29 33 0.017681767 ubox
30 39 0.003185518 ubox
32 43 0.006460097 ubox
33 40 0.003461169 ubox
33 42 0.007757660 ubox
33 47 0.003476046 ubox
34 39 0.003795649 ubox
34 41 0.010887359 ubox
34 46 0.004099617 ubox
35 39 0.007297206 ubox
35 41 0.023942731 ubox
35 44 0.032178786 ubox
35 57 0.003164983 ubox
35 65 0.005196307 ubox
35 70 0.013001516 ubox
36 40 0.022671566 ubox
36 43 0.032293065 ubox
36 69 0.009825666 ubox
37 42 0.033791153 ubox
37 64 0.007391240 ubox
37 69 0.006604605 ubox
38 63 0.007517637 ubox
38 69 0.005915641 ubox
39 53 0.004253456 ubox
39 69 0.015158879 ubox
40 52 0.004403392 ubox
40 61 0.010758243 ubox
40 67 0.011908054 ubox
40 68 0.013975612 ubox
41 51 0.004416373 ubox
41 60 0.011247965 ubox
41 66 0.012800179 ubox
41 69 0.971684902 ubox
42 59 0.011142570 ubox
42 62 0.007780570 ubox
42 65 0.010588911 ubox
42 67 0.004816778 ubox
42 68 0.983278754 ubox
42 70 0.007912631 ubox
43 52 0.004673802 ubox
43 58 0.011114465 ubox
43 61 0.007837537 ubox
43 65 0.018995122 ubox
43 67 0.994248870 ubox
43 68 0.006556514 ubox
44 51 0.004946299 ubox
44 60 0.007841743 ubox
44 64 0.020322923 ubox
44 66 0.995606217 ubox
45 52 0.007445296 ubox
45 57 0.009780868 ubox
45 58 0.003193389 ubox
45 59 0.006054137 ubox
45 61 0.008082628 ubox
45 62 0.008413210 ubox
45 65 0.996351052 ubox
45 70 0.065614727 ubox
46 51 0.007772484 ubox
46 60 0.009333593 ubox
46 64 0.995115810 ubox
46 69 0.066439613 ubox
47 55 0.009851098 ubox
47 56 0.014499328 ubox
47 59 0.009339631 ubox
47 61 0.035485263 ubox
47 68 0.066326532 ubox
48 54 0.010019616 ubox
48 55 0.014488503 ubox
48 61 0.955261463 ubox
48 67 0.064806730 ubox
49 53 0.008924795 ubox
49 60 0.985256739 ubox
49 63 0.008112084 ubox
49 66 0.060201251 ubox
50 56 0.004602157 ubox
50 59 0.990001613 ubox
50 61 0.009555246 ubox
51 55 0.003747138 ubox
51 56 0.008869831 ubox
51 57 0.061201690 ubox
51 58 0.982967945 ubox
51 59 0.019332299 ubox
51 61 0.005605578 ubox
51 62 0.020162812 ubox
51 65 0.050616711 ubox
51 70 0.005453552 ubox
52 60 0.013642155 ubox
52 63 0.024991632 ubox
52 64 0.049591604 ubox
52 69 0.005486700 ubox
53 59 0.013775141 ubox
53 61 0.033774155 ubox
53 68 0.005372548 ubox
54 60 0.034417820 ubox
54 63 0.007492057 ubox
55 60 0.011938920 ubox
56 60 0.005883519 ubox
56 63 0.003815543 ubox
58 64 0.004536126 ubox
59 63 0.004272507 ubox
60 65 0.003697035 ubox
62 69 0.005040673 ubox
63 68 0.004599913 ubox
64 70 0.007742324 ubox
65 69 0.007753862 ubox
10 35 0.9746794 lbox
11 34 0.9746794 lbox
12 33 0.9746794 lbox
13 32 0.9746794 lbox
14 31 0.9746794 lbox
16 29 0.9746794 lbox
17 28 0.9746794 lbox
18 27 0.9746794 lbox
19 26 0.9746794 lbox
20 25 0.9746794 lbox
41 69 0.9746794 lbox
42 68 0.9746794 lbox
43 67 0.9746794 lbox
44 66 0.9746794 lbox
45 65 0.9746794 lbox
46 64 0.9746794 lbox
48 61 0.9746794 lbox
49 60 0.9746794 lbox
50 59 0.9746794 lbox
51 58 0.9746794 lbox
showpage
end
%%EOF
