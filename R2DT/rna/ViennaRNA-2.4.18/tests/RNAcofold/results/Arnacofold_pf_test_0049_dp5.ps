%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 17:25:02 2020
%%Title: RNA Dot Plot
%%BoundingBox: 66 211 518 662
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% Monomer A FreeEnergy= -13.515352520

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  % draw strand separators if required
  currentdict /nicks known {
    gsave
    % draw lines in red color
    0 1 1 sethsbcolor
    % draw with line thickness of 0.2
    0.2 setlinewidth
    nicks
    { 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
    } forall
    grestore
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (Arnacofold_pf_test_0049)
} def

/sequence { (\
AAAAGUUCCGUCUUAUAUUGUGUUAAGCAUAUCGCGUUGACAAAUGGGCCUCUCGGGAACAAACCUAUAA\
) } def
/len { sequence length } bind def

72 216 translate
72 6 mul len 1 add div dup scale
/Helvetica findfont 0.95 scalefont setfont

drawseq
%data starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data

%draw the grid
drawgrid

%start of base pair probability data
%start of base pair probability data
1 16 0.007847695 ubox
1 66 0.011736843 ubox
1 68 0.004673022 ubox
2 14 0.003411049 ubox
2 16 0.004378383 ubox
2 19 0.003571141 ubox
2 53 0.008634522 ubox
2 66 0.010871219 ubox
2 68 0.007716387 ubox
3 14 0.045624356 ubox
3 18 0.003416307 ubox
3 51 0.004112236 ubox
3 53 0.004069679 ubox
3 66 0.009760349 ubox
3 68 0.005069564 ubox
4 13 0.048878494 ubox
4 19 0.004747441 ubox
4 51 0.040571562 ubox
4 53 0.019718815 ubox
4 66 0.031519828 ubox
4 68 0.007043190 ubox
5 9 0.003415897 ubox
5 12 0.049231182 ubox
5 16 0.007152113 ubox
5 18 0.005180922 ubox
5 41 0.012616222 ubox
5 49 0.018675127 ubox
5 50 0.042821106 ubox
5 52 0.020882960 ubox
5 54 0.017515589 ubox
5 60 0.962812192 ubox
5 64 0.026033416 ubox
5 65 0.030099910 ubox
5 68 0.004142527 ubox
6 10 0.003181010 ubox
6 15 0.007341869 ubox
6 17 0.005175590 ubox
6 40 0.012475361 ubox
6 48 0.014344770 ubox
6 57 0.003723467 ubox
6 58 0.257589301 ubox
6 59 0.951901103 ubox
6 62 0.003286196 ubox
6 63 0.023945298 ubox
6 67 0.003438720 ubox
7 39 0.011922308 ubox
7 47 0.007516399 ubox
7 48 0.046665336 ubox
7 57 0.310616647 ubox
7 58 0.940311761 ubox
7 62 0.016927257 ubox
8 39 0.003264966 ubox
8 46 0.007196655 ubox
8 47 0.053577748 ubox
8 48 0.005843638 ubox
8 56 0.389495609 ubox
8 57 0.913278619 ubox
9 20 0.011139247 ubox
9 36 0.013770662 ubox
9 46 0.053608015 ubox
9 47 0.005903614 ubox
9 55 0.450062118 ubox
9 56 0.884349936 ubox
10 14 0.004203138 ubox
10 16 0.013282170 ubox
10 18 0.011848546 ubox
10 19 0.015272863 ubox
10 28 0.029474718 ubox
10 30 0.015217028 ubox
10 35 0.014622179 ubox
10 41 0.071001062 ubox
10 45 0.051457911 ubox
10 49 0.618762987 ubox
10 50 0.164298915 ubox
10 51 0.024607413 ubox
10 52 0.144882317 ubox
10 53 0.030117439 ubox
10 54 0.493414349 ubox
10 64 0.004330993 ubox
11 15 0.012815712 ubox
11 17 0.012069818 ubox
11 20 0.004120021 ubox
11 27 0.005345421 ubox
11 29 0.015777796 ubox
11 34 0.014334283 ubox
11 40 0.071131519 ubox
11 43 0.004056935 ubox
11 44 0.047109393 ubox
11 47 0.009692253 ubox
11 48 0.609351622 ubox
11 55 0.038239661 ubox
11 58 0.004944659 ubox
11 63 0.004107310 ubox
12 20 0.024849178 ubox
12 27 0.038456164 ubox
12 39 0.071076101 ubox
12 46 0.011484188 ubox
12 47 0.609287036 ubox
12 48 0.302999503 ubox
12 55 0.016402099 ubox
12 57 0.005199545 ubox
13 17 0.003969297 ubox
13 20 0.011156702 ubox
13 26 0.038938585 ubox
13 40 0.007659876 ubox
13 42 0.008011876 ubox
13 43 0.011600280 ubox
13 44 0.009324661 ubox
13 46 0.548012694 ubox
13 47 0.302844058 ubox
13 48 0.043485959 ubox
13 55 0.004320637 ubox
13 56 0.004902581 ubox
13 70 0.009912945 ubox
14 20 0.008851448 ubox
14 25 0.038975517 ubox
14 31 0.008666091 ubox
14 36 0.010763066 ubox
14 39 0.007926445 ubox
14 40 0.003771558 ubox
14 42 0.007490226 ubox
14 43 0.016220949 ubox
14 44 0.013550094 ubox
14 46 0.319054366 ubox
14 47 0.039822005 ubox
14 48 0.073102767 ubox
14 55 0.004307387 ubox
14 69 0.014310351 ubox
15 19 0.008359642 ubox
15 21 0.005968861 ubox
15 23 0.005145535 ubox
15 24 0.038666916 ubox
15 30 0.008637065 ubox
15 32 0.017261759 ubox
15 37 0.015670743 ubox
15 38 0.007942587 ubox
15 45 0.336211791 ubox
15 51 0.021475666 ubox
15 53 0.005411521 ubox
15 68 0.014798921 ubox
16 20 0.006455147 ubox
16 22 0.006564391 ubox
16 29 0.007252280 ubox
16 31 0.018321180 ubox
16 34 0.018000208 ubox
16 36 0.015142576 ubox
16 39 0.017019235 ubox
16 42 0.005444955 ubox
16 43 0.035602659 ubox
16 44 0.296891312 ubox
16 46 0.581924224 ubox
16 47 0.143854561 ubox
16 48 0.062374716 ubox
16 67 0.014751476 ubox
16 69 0.004286340 ubox
17 21 0.005834721 ubox
17 23 0.003590180 ubox
17 30 0.018112539 ubox
17 32 0.008420493 ubox
17 37 0.005820398 ubox
17 38 0.019990341 ubox
17 45 0.690614926 ubox
17 66 0.013896322 ubox
17 68 0.004497975 ubox
18 22 0.003457184 ubox
18 27 0.005767298 ubox
18 29 0.013264114 ubox
18 31 0.006951532 ubox
18 34 0.005027247 ubox
18 36 0.004655789 ubox
18 42 0.030153949 ubox
18 43 0.246057652 ubox
18 44 0.694523010 ubox
18 46 0.054638764 ubox
18 47 0.148724223 ubox
18 48 0.014989476 ubox
18 62 0.003176716 ubox
18 67 0.004152207 ubox
19 26 0.006120706 ubox
19 29 0.021029271 ubox
19 31 0.077525284 ubox
19 36 0.033592336 ubox
19 42 0.246284245 ubox
19 43 0.680863142 ubox
19 44 0.116838556 ubox
19 46 0.139891992 ubox
19 47 0.011981000 ubox
19 48 0.003765270 ubox
19 61 0.003428420 ubox
19 69 0.003252442 ubox
20 28 0.025457507 ubox
20 30 0.081467431 ubox
20 32 0.005359562 ubox
20 35 0.036275256 ubox
20 41 0.244930105 ubox
20 45 0.104572444 ubox
20 49 0.005043916 ubox
20 60 0.003424949 ubox
20 64 0.005275127 ubox
20 65 0.003382217 ubox
20 68 0.003187703 ubox
21 26 0.005353682 ubox
21 27 0.025226706 ubox
21 29 0.081812479 ubox
21 31 0.005725193 ubox
21 34 0.036265686 ubox
21 39 0.008082955 ubox
21 40 0.239696303 ubox
21 42 0.912974011 ubox
21 43 0.038656318 ubox
21 44 0.066100275 ubox
21 46 0.004170635 ubox
21 48 0.004124198 ubox
21 63 0.004582836 ubox
22 28 0.081893794 ubox
22 30 0.005786591 ubox
22 33 0.035983130 ubox
22 35 0.004226231 ubox
22 38 0.016267669 ubox
22 41 0.963579129 ubox
23 27 0.076611786 ubox
23 29 0.005645511 ubox
23 31 0.005515159 ubox
23 34 0.004113028 ubox
23 39 0.050615593 ubox
23 40 0.964323143 ubox
24 31 0.026885637 ubox
24 36 0.006349738 ubox
24 39 0.964584903 ubox
24 40 0.003939930 ubox
25 30 0.025771233 ubox
25 37 0.043942385 ubox
25 38 0.954686996 ubox
26 37 0.884083500 ubox
26 38 0.054038197 ubox
27 33 0.007657397 ubox
27 35 0.985569970 ubox
27 37 0.074536275 ubox
28 34 0.986119647 ubox
28 36 0.089205360 ubox
28 39 0.007729723 ubox
29 37 0.004459479 ubox
29 38 0.007765431 ubox
30 34 0.019124641 ubox
30 36 0.005234316 ubox
32 40 0.007206245 ubox
32 48 0.013280969 ubox
33 39 0.007913256 ubox
33 47 0.018274761 ubox
33 48 0.049414445 ubox
33 55 0.008759663 ubox
34 38 0.004891674 ubox
34 49 0.023611647 ubox
34 50 0.006258304 ubox
34 54 0.008732236 ubox
35 46 0.056539898 ubox
35 48 0.023651919 ubox
35 55 0.003800508 ubox
36 45 0.057064544 ubox
36 49 0.011301485 ubox
36 52 0.007368959 ubox
36 54 0.003824865 ubox
37 44 0.057064007 ubox
37 46 0.021288394 ubox
37 48 0.011343289 ubox
38 43 0.056064304 ubox
38 44 0.003182562 ubox
38 47 0.011242187 ubox
39 49 0.005923826 ubox
40 45 0.006713370 ubox
41 46 0.003920291 ubox
41 47 0.004799169 ubox
41 48 0.005087112 ubox
44 68 0.040317272 ubox
45 55 0.110835201 ubox
45 61 0.060984766 ubox
45 67 0.042144908 ubox
46 50 0.005353632 ubox
46 52 0.018236352 ubox
46 53 0.031234999 ubox
46 54 0.164590423 ubox
46 60 0.068884495 ubox
46 65 0.003663437 ubox
46 66 0.042717156 ubox
47 51 0.011982002 ubox
47 52 0.038704865 ubox
47 53 0.163547189 ubox
47 54 0.042062253 ubox
47 60 0.003707975 ubox
47 64 0.003666142 ubox
47 65 0.042830631 ubox
48 52 0.160244708 ubox
48 53 0.029652615 ubox
48 54 0.010902250 ubox
48 64 0.042787416 ubox
49 55 0.020803727 ubox
49 56 0.028845817 ubox
49 57 0.078247993 ubox
50 55 0.109883319 ubox
50 56 0.078548983 ubox
50 57 0.004648120 ubox
51 55 0.071806305 ubox
51 56 0.004368474 ubox
51 58 0.007828079 ubox
51 61 0.003222977 ubox
51 69 0.003729763 ubox
52 57 0.008083200 ubox
53 67 0.009550635 ubox
53 69 0.003915023 ubox
55 60 0.007548560 ubox
55 64 0.004122061 ubox
55 65 0.051318629 ubox
55 66 0.060165028 ubox
56 64 0.051360579 ubox
56 65 0.063361412 ubox
56 66 0.004605016 ubox
57 64 0.063272596 ubox
57 65 0.005813965 ubox
59 66 0.005209501 ubox
59 68 0.004579034 ubox
61 66 0.020237412 ubox
61 68 0.020222250 ubox
62 66 0.012479682 ubox
62 68 0.018655736 ubox
63 68 0.017202228 ubox
66 70 0.006003061 ubox
5 60 0.9746794 lbox
6 59 0.9746794 lbox
7 58 0.9746794 lbox
8 57 0.9746794 lbox
9 56 0.9746794 lbox
10 49 0.9746794 lbox
11 48 0.9746794 lbox
12 47 0.9746794 lbox
13 46 0.9746794 lbox
21 42 0.9746794 lbox
22 41 0.9746794 lbox
23 40 0.9746794 lbox
24 39 0.9746794 lbox
25 38 0.9746794 lbox
26 37 0.9746794 lbox
27 35 0.9746794 lbox
28 34 0.9746794 lbox
showpage
end
%%EOF
