%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 17:24:58 2020
%%Title: RNA Dot Plot
%%BoundingBox: 66 211 518 662
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% Monomer A FreeEnergy= -16.738126128

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  % draw strand separators if required
  currentdict /nicks known {
    gsave
    % draw lines in red color
    0 1 1 sethsbcolor
    % draw with line thickness of 0.2
    0.2 setlinewidth
    nicks
    { 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
    } forall
    grestore
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (Arnacofold_pf_test_0029)
} def

/sequence { (\
CCCCGGCCAAUACGCAGUUCUGGACGGGUCAUCUAAUAGGAACACAAGUCUGAGGAAAGUCCUUUUACUU\
) } def
/len { sequence length } bind def

72 216 translate
72 6 mul len 1 add div dup scale
/Helvetica findfont 0.95 scalefont setfont

drawseq
%data starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data

%draw the grid
drawgrid

%start of base pair probability data
%start of base pair probability data
1 27 0.006902526 ubox
1 28 0.060233472 ubox
1 39 0.016717066 ubox
1 40 0.020417370 ubox
2 26 0.006838793 ubox
2 27 0.051643605 ubox
2 28 0.986107558 ubox
2 39 0.015249750 ubox
2 40 0.003469847 ubox
3 23 0.007517591 ubox
3 26 0.039329470 ubox
3 27 0.997344156 ubox
3 28 0.032734322 ubox
3 40 0.004515382 ubox
4 14 0.011102318 ubox
4 17 0.004868157 ubox
4 22 0.007784347 ubox
4 26 0.997925275 ubox
4 27 0.032939534 ubox
4 39 0.004525632 ubox
5 13 0.011527936 ubox
5 21 0.007731179 ubox
5 25 0.984114446 ubox
5 30 0.018829751 ubox
5 62 0.003477259 ubox
6 15 0.025136612 ubox
6 20 0.007558729 ubox
6 25 0.059295356 ubox
6 29 0.018928550 ubox
6 61 0.003473977 ubox
7 14 0.025134102 ubox
7 22 0.006615945 ubox
7 23 0.980453187 ubox
7 28 0.018946779 ubox
8 17 0.004404254 ubox
8 22 0.998721319 ubox
8 23 0.008195620 ubox
8 27 0.018934396 ubox
9 18 0.007054711 ubox
9 19 0.062530283 ubox
9 21 0.979167455 ubox
10 18 0.130531848 ubox
10 19 0.154200965 ubox
10 21 0.023384502 ubox
11 16 0.013478261 ubox
11 17 0.134127676 ubox
11 22 0.004472971 ubox
11 24 0.006533224 ubox
12 18 0.896454721 ubox
12 19 0.040070253 ubox
12 21 0.007939956 ubox
13 17 0.890593010 ubox
13 22 0.015295595 ubox
13 23 0.007331645 ubox
13 26 0.003247515 ubox
14 18 0.010701311 ubox
14 19 0.009978708 ubox
14 20 0.027261148 ubox
14 21 0.012181364 ubox
14 25 0.003224332 ubox
14 60 0.005046283 ubox
15 22 0.011196346 ubox
15 59 0.005326991 ubox
16 21 0.010396111 ubox
17 43 0.026327462 ubox
17 68 0.003330768 ubox
18 41 0.003372070 ubox
18 42 0.026303527 ubox
18 56 0.007961705 ubox
18 57 0.003288837 ubox
18 67 0.003208624 ubox
19 40 0.004000939 ubox
19 41 0.026272108 ubox
19 53 0.003323845 ubox
19 55 0.008289964 ubox
19 56 0.003895925 ubox
20 39 0.004884432 ubox
20 40 0.026146160 ubox
20 52 0.003742359 ubox
20 54 0.008451330 ubox
20 55 0.003941677 ubox
21 35 0.003572913 ubox
21 38 0.005540025 ubox
21 39 0.025573834 ubox
21 52 0.004874492 ubox
21 53 0.007967538 ubox
21 54 0.003655993 ubox
22 34 0.006758202 ubox
22 37 0.005506054 ubox
22 51 0.014785669 ubox
23 33 0.006811511 ubox
23 50 0.015621101 ubox
24 32 0.006547770 ubox
24 49 0.015692054 ubox
25 48 0.015699166 ubox
26 30 0.003262870 ubox
26 33 0.007317808 ubox
26 34 0.016979040 ubox
27 32 0.006550693 ubox
27 33 0.017579541 ubox
27 34 0.016703508 ubox
27 45 0.003424380 ubox
28 32 0.011426540 ubox
28 33 0.018242722 ubox
28 37 0.006186769 ubox
28 43 0.047393605 ubox
28 45 0.093696196 ubox
29 35 0.009130915 ubox
29 36 0.013080703 ubox
29 38 0.011072350 ubox
29 39 0.007405710 ubox
29 40 0.119045137 ubox
29 41 0.119725613 ubox
29 42 0.051301749 ubox
29 44 0.105537101 ubox
29 46 0.008610029 ubox
29 53 0.006883296 ubox
29 56 0.007836135 ubox
30 39 0.151800103 ubox
30 40 0.127171622 ubox
30 52 0.009549645 ubox
30 54 0.003324431 ubox
30 55 0.008279342 ubox
30 59 0.003314136 ubox
31 37 0.033060636 ubox
31 51 0.009220454 ubox
31 69 0.003867033 ubox
31 70 0.015448303 ubox
32 36 0.030584427 ubox
32 38 0.028435824 ubox
32 39 0.027906183 ubox
32 40 0.103947508 ubox
32 41 0.587544361 ubox
32 42 0.023452125 ubox
32 44 0.005802499 ubox
32 53 0.009636616 ubox
32 55 0.004244117 ubox
32 56 0.032003825 ubox
33 39 0.163909046 ubox
33 40 0.626978461 ubox
33 48 0.008464600 ubox
33 52 0.011080623 ubox
33 54 0.006842886 ubox
33 55 0.034242786 ubox
34 38 0.148731267 ubox
34 39 0.597061684 ubox
34 40 0.017097349 ubox
34 41 0.019784702 ubox
34 42 0.009685764 ubox
34 44 0.005976428 ubox
34 46 0.004164622 ubox
34 47 0.008400992 ubox
34 53 0.006529945 ubox
34 54 0.033946444 ubox
34 67 0.071250278 ubox
35 65 0.006985798 ubox
35 66 0.075820123 ubox
36 49 0.009609912 ubox
36 64 0.007388039 ubox
36 65 0.072182411 ubox
36 66 0.004235905 ubox
37 41 0.007493062 ubox
37 42 0.012142498 ubox
37 44 0.012598296 ubox
37 46 0.012564710 ubox
37 47 0.006335649 ubox
37 48 0.009638455 ubox
37 52 0.037117879 ubox
37 53 0.003827548 ubox
37 67 0.004769498 ubox
38 51 0.048723712 ubox
38 63 0.079674360 ubox
38 66 0.004928484 ubox
38 69 0.010025855 ubox
38 70 0.006653199 ubox
39 43 0.029693555 ubox
39 45 0.176539064 ubox
39 50 0.049501273 ubox
39 51 0.054379640 ubox
39 62 0.083665790 ubox
39 65 0.004573625 ubox
39 68 0.010772702 ubox
39 69 0.008310750 ubox
39 70 0.003245778 ubox
40 45 0.058557533 ubox
40 49 0.044760991 ubox
40 50 0.058998960 ubox
40 51 0.004924250 ubox
40 61 0.083663271 ubox
40 64 0.003215293 ubox
40 66 0.004461548 ubox
40 68 0.008380288 ubox
40 70 0.005035260 ubox
41 49 0.047690378 ubox
41 51 0.003462283 ubox
41 60 0.076319472 ubox
41 65 0.004687605 ubox
41 66 0.006187414 ubox
41 69 0.003589018 ubox
41 70 0.006583447 ubox
42 49 0.048129718 ubox
42 60 0.031067415 ubox
42 65 0.008022597 ubox
42 69 0.004220920 ubox
42 70 0.009161823 ubox
43 48 0.060285940 ubox
43 52 0.011136713 ubox
43 54 0.006613256 ubox
43 55 0.009762547 ubox
43 59 0.043792330 ubox
44 51 0.010295481 ubox
44 60 0.006748506 ubox
44 69 0.004762399 ubox
44 70 0.018549788 ubox
45 52 0.021047354 ubox
45 54 0.041296243 ubox
45 55 0.017145749 ubox
45 59 0.010077920 ubox
46 51 0.019192420 ubox
46 64 0.006867300 ubox
46 66 0.007683791 ubox
46 69 0.023320168 ubox
46 70 0.804843147 ubox
47 51 0.003421801 ubox
47 63 0.007646999 ubox
47 65 0.008287197 ubox
47 66 0.008747298 ubox
47 69 0.967041632 ubox
47 70 0.020283562 ubox
48 61 0.006482883 ubox
48 62 0.007509571 ubox
48 64 0.004261792 ubox
48 65 0.009345462 ubox
48 66 0.007923297 ubox
48 68 0.985582822 ubox
48 69 0.011657267 ubox
48 70 0.004513334 ubox
49 53 0.006705553 ubox
49 54 0.006725559 ubox
49 55 0.013960424 ubox
49 56 0.035355016 ubox
49 67 0.960209889 ubox
50 54 0.013879160 ubox
50 55 0.035470981 ubox
50 59 0.027744629 ubox
51 58 0.027668452 ubox
51 67 0.010937204 ubox
52 61 0.004638446 ubox
52 63 0.006388608 ubox
52 64 0.977333497 ubox
52 65 0.062622706 ubox
52 66 0.011659766 ubox
52 68 0.004444065 ubox
52 70 0.008395845 ubox
53 60 0.004613944 ubox
53 63 0.992544906 ubox
53 64 0.055807719 ubox
53 65 0.007829173 ubox
53 66 0.003297729 ubox
53 69 0.009677931 ubox
53 70 0.003502016 ubox
54 61 0.004008561 ubox
54 62 0.994384915 ubox
54 63 0.047151878 ubox
54 64 0.003648865 ubox
54 65 0.003292962 ubox
54 68 0.009807185 ubox
54 69 0.004560231 ubox
55 60 0.003656097 ubox
55 61 0.994048618 ubox
55 62 0.047037452 ubox
55 64 0.003414566 ubox
55 66 0.006106789 ubox
55 68 0.004695618 ubox
56 60 0.864834937 ubox
56 63 0.003299855 ubox
56 65 0.006584127 ubox
56 66 0.005297393 ubox
57 64 0.006609560 ubox
57 65 0.008338386 ubox
57 66 0.005575380 ubox
57 70 0.021497988 ubox
58 63 0.005797580 ubox
58 64 0.008071111 ubox
58 65 0.005820670 ubox
58 69 0.025875702 ubox
59 63 0.005495009 ubox
59 64 0.005345759 ubox
59 68 0.026383158 ubox
60 67 0.024684427 ubox
2 28 0.9746794 lbox
3 27 0.9746794 lbox
4 26 0.9746794 lbox
5 25 0.9746794 lbox
7 23 0.9746794 lbox
8 22 0.9746794 lbox
9 21 0.9746794 lbox
12 18 0.9746794 lbox
13 17 0.9746794 lbox
46 70 0.9746794 lbox
47 69 0.9746794 lbox
48 68 0.9746794 lbox
49 67 0.9746794 lbox
52 64 0.9746794 lbox
53 63 0.9746794 lbox
54 62 0.9746794 lbox
55 61 0.9746794 lbox
56 60 0.9746794 lbox
showpage
end
%%EOF
