%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 17:24:58 2020
%%Title: RNA Dot Plot
%%BoundingBox: 66 211 518 662
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% Homodimer AA FreeEnergy= -48.947178743

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  % draw strand separators if required
  currentdict /nicks known {
    gsave
    % draw lines in red color
    0 1 1 sethsbcolor
    % draw with line thickness of 0.2
    0.2 setlinewidth
    nicks
    { 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
    } forall
    grestore
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (AArnacofold_pf_test_0027)
} def

/sequence { (\
GUAAAGAUCUUCCUGCAUCUAGCUGUCCACUAAAUCCGAGGCGGCGGGAUGUCCAACAAGGUCGAGGCCAGUAAAGAUCUUCCUGCAUCUAGCUGUCCACUAAAUCCGAGGCGGCGGGAUGUCCAACAAGGUCGAGGCCA\
) } def
/len { sequence length } bind def

/cutpoint 71 def

/nicks [ 71 ] def
72 216 translate
72 6 mul len 1 add div dup scale
/Helvetica findfont 0.95 scalefont setfont

drawseq
%data starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data

%draw the grid
drawgrid

%start of base pair probability data
%start of base pair probability data
1 9 0.003286244 ubox
1 63 0.004960055 ubox
1 138 0.039322440 ubox
1 139 0.006114254 ubox
2 64 0.020169873 ubox
2 65 0.035668696 ubox
2 137 0.039425109 ubox
2 140 0.004728306 ubox
4 81 0.005835847 ubox
5 14 0.011945104 ubox
5 80 0.006480981 ubox
6 12 0.005139854 ubox
6 13 0.012276182 ubox
6 63 0.990238799 ubox
6 79 0.006568002 ubox
6 133 0.043525639 ubox
7 11 0.004558721 ubox
7 62 0.991515946 ubox
7 78 0.006567178 ubox
7 132 0.043542930 ubox
8 61 0.990982044 ubox
8 65 0.102604205 ubox
8 77 0.006567178 ubox
8 131 0.043515446 ubox
9 60 0.991579636 ubox
9 61 0.013080540 ubox
9 64 0.109620487 ubox
9 76 0.006568002 ubox
9 130 0.043537822 ubox
10 55 0.003240817 ubox
10 56 0.016365223 ubox
10 58 0.027251216 ubox
10 59 0.985936062 ubox
10 60 0.013043519 ubox
10 64 0.004050290 ubox
10 65 0.005993484 ubox
10 75 0.006480981 ubox
10 129 0.043285623 ubox
11 55 0.030275546 ubox
11 56 0.060852984 ubox
11 58 0.921296148 ubox
11 59 0.016694784 ubox
11 64 0.005727670 ubox
11 74 0.005835847 ubox
11 128 0.040422540 ubox
12 61 0.114155765 ubox
12 131 0.003438508 ubox
13 60 0.114270140 ubox
13 130 0.003451094 ubox
14 55 0.461359494 ubox
14 56 0.073222205 ubox
14 58 0.025410576 ubox
14 59 0.112623678 ubox
14 125 0.020170535 ubox
14 126 0.003208844 ubox
14 129 0.003395745 ubox
15 52 0.859382317 ubox
15 53 0.286354018 ubox
15 54 0.383440204 ubox
15 57 0.026533206 ubox
15 122 0.037291436 ubox
15 123 0.012462645 ubox
15 124 0.016776333 ubox
16 51 0.997080804 ubox
16 121 0.043306688 ubox
17 50 0.998539544 ubox
17 52 0.006382011 ubox
17 120 0.043370528 ubox
18 48 0.011285005 ubox
18 49 0.998708099 ubox
18 51 0.003876339 ubox
18 119 0.043377866 ubox
19 47 0.021408528 ubox
19 48 0.998660561 ubox
19 118 0.043375803 ubox
20 46 0.024828509 ubox
20 47 0.924019437 ubox
20 117 0.040135108 ubox
22 45 0.998644118 ubox
22 115 0.043375987 ubox
23 44 0.998988116 ubox
23 47 0.008859369 ubox
23 114 0.043390948 ubox
24 43 0.998233905 ubox
24 46 0.009680395 ubox
24 113 0.043358463 ubox
25 42 0.998793798 ubox
25 45 0.009778071 ubox
25 112 0.043386012 ubox
26 39 0.013312455 ubox
26 40 0.006669511 ubox
26 41 0.896107447 ubox
26 44 0.006691307 ubox
26 111 0.041336778 ubox
27 38 0.019668461 ubox
27 40 0.889871781 ubox
27 41 0.439910684 ubox
27 43 0.006582798 ubox
27 44 0.007252968 ubox
27 110 0.040917983 ubox
27 111 0.013075577 ubox
28 38 0.679783606 ubox
28 40 0.442156669 ubox
28 41 0.011291809 ubox
28 43 0.007351884 ubox
28 108 0.022671821 ubox
28 110 0.013132482 ubox
29 35 0.031722294 ubox
30 38 0.328525027 ubox
30 40 0.054342388 ubox
30 41 0.013251341 ubox
30 108 0.008431027 ubox
31 38 0.082467630 ubox
31 39 0.064224230 ubox
31 40 0.014811712 ubox
32 105 0.003328100 ubox
35 39 0.008060175 ubox
35 102 0.003328100 ubox
35 109 0.005102240 ubox
36 108 0.005120121 ubox
38 98 0.022671821 ubox
38 100 0.008431027 ubox
38 106 0.005120121 ubox
39 105 0.005102240 ubox
40 97 0.040917983 ubox
40 98 0.013132482 ubox
41 96 0.041336778 ubox
41 97 0.013075577 ubox
42 95 0.043386012 ubox
43 94 0.043358463 ubox
44 93 0.043390948 ubox
45 92 0.043375987 ubox
47 90 0.040135108 ubox
48 89 0.043375803 ubox
49 88 0.043377866 ubox
50 87 0.043370528 ubox
51 86 0.043306688 ubox
52 85 0.037291436 ubox
53 61 0.015466889 ubox
53 85 0.012462645 ubox
54 60 0.015610392 ubox
54 85 0.016776333 ubox
55 84 0.020170535 ubox
56 84 0.003208844 ubox
58 81 0.040422540 ubox
59 80 0.043285623 ubox
59 84 0.003395745 ubox
60 69 0.006130157 ubox
60 79 0.043537822 ubox
60 83 0.003451094 ubox
60 139 0.024885547 ubox
61 68 0.006135134 ubox
61 78 0.043515446 ubox
61 82 0.003438508 ubox
61 138 0.024929904 ubox
62 67 0.005815196 ubox
62 77 0.043542930 ubox
62 137 0.024920528 ubox
63 76 0.043525639 ubox
63 136 0.024906991 ubox
64 139 0.007495392 ubox
66 133 0.024906991 ubox
66 138 0.003424028 ubox
66 139 0.997607498 ubox
67 72 0.039425109 ubox
67 132 0.024920528 ubox
67 138 0.998686106 ubox
68 71 0.039322440 ubox
68 131 0.024929904 ubox
68 136 0.003424028 ubox
68 137 0.998686106 ubox
69 71 0.006114254 ubox
69 130 0.024885547 ubox
69 134 0.007495392 ubox
69 136 0.997607498 ubox
70 72 0.004728306 ubox
71 79 0.003286294 ubox
71 133 0.004960055 ubox
72 134 0.020169873 ubox
72 135 0.035668696 ubox
75 84 0.011945326 ubox
76 82 0.005139950 ubox
76 83 0.012276410 ubox
76 133 0.990238799 ubox
77 81 0.004558806 ubox
77 132 0.991515946 ubox
78 131 0.990982044 ubox
78 135 0.102604205 ubox
79 130 0.991579636 ubox
79 131 0.013080540 ubox
79 134 0.109620487 ubox
80 125 0.003240817 ubox
80 126 0.016365223 ubox
80 128 0.027251216 ubox
80 129 0.985936062 ubox
80 130 0.013043519 ubox
80 134 0.004050290 ubox
80 135 0.005993478 ubox
81 125 0.030275546 ubox
81 126 0.060852984 ubox
81 128 0.921296148 ubox
81 129 0.016694784 ubox
81 134 0.005727664 ubox
82 131 0.114155765 ubox
83 130 0.114270140 ubox
84 125 0.461359494 ubox
84 126 0.073222205 ubox
84 128 0.025410576 ubox
84 129 0.112623678 ubox
85 122 0.859382317 ubox
85 123 0.286354018 ubox
85 124 0.383440204 ubox
85 127 0.026533206 ubox
86 121 0.997080804 ubox
87 120 0.998539544 ubox
87 122 0.006382011 ubox
88 118 0.011285005 ubox
88 119 0.998708099 ubox
88 121 0.003876339 ubox
89 117 0.021408528 ubox
89 118 0.998660561 ubox
90 116 0.024828509 ubox
90 117 0.924019437 ubox
92 115 0.998644118 ubox
93 114 0.998988116 ubox
93 117 0.008859369 ubox
94 113 0.998233905 ubox
94 116 0.009680395 ubox
95 112 0.998793798 ubox
95 115 0.009778071 ubox
96 109 0.013312455 ubox
96 110 0.006669511 ubox
96 111 0.896107447 ubox
96 114 0.006691307 ubox
97 108 0.019668461 ubox
97 110 0.889871781 ubox
97 111 0.439910684 ubox
97 113 0.006582798 ubox
97 114 0.007252968 ubox
98 108 0.679783606 ubox
98 110 0.442156669 ubox
98 111 0.011291809 ubox
98 113 0.007351884 ubox
99 105 0.031722294 ubox
100 108 0.328525027 ubox
100 110 0.054342388 ubox
100 111 0.013251341 ubox
101 108 0.082467630 ubox
101 109 0.064224230 ubox
101 110 0.014811712 ubox
105 109 0.008060175 ubox
123 131 0.015466889 ubox
124 130 0.015610392 ubox
130 139 0.006130154 ubox
131 138 0.006135132 ubox
132 137 0.005815194 ubox
6 63 0.9746794 lbox
7 62 0.9746794 lbox
8 61 0.9746794 lbox
9 60 0.9746794 lbox
10 59 0.9746794 lbox
11 58 0.9746794 lbox
15 52 0.9746794 lbox
16 51 0.9746794 lbox
17 50 0.9746794 lbox
18 49 0.9746794 lbox
19 48 0.9746794 lbox
20 47 0.9746794 lbox
22 45 0.9746794 lbox
23 44 0.9746794 lbox
24 43 0.9746794 lbox
25 42 0.9746794 lbox
26 41 0.9746794 lbox
27 40 0.9746794 lbox
28 38 0.9746794 lbox
66 139 0.9746794 lbox
67 138 0.9746794 lbox
68 137 0.9746794 lbox
69 136 0.9746794 lbox
76 133 0.9746794 lbox
77 132 0.9746794 lbox
78 131 0.9746794 lbox
79 130 0.9746794 lbox
80 129 0.9746794 lbox
81 128 0.9746794 lbox
85 122 0.9746794 lbox
86 121 0.9746794 lbox
87 120 0.9746794 lbox
88 119 0.9746794 lbox
89 118 0.9746794 lbox
90 117 0.9746794 lbox
92 115 0.9746794 lbox
93 114 0.9746794 lbox
94 113 0.9746794 lbox
95 112 0.9746794 lbox
96 111 0.9746794 lbox
97 110 0.9746794 lbox
98 108 0.9746794 lbox
showpage
end
%%EOF
