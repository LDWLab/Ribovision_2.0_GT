%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 17:24:54 2020
%%Title: RNA Dot Plot
%%BoundingBox: 66 211 518 662
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% Monomer B FreeEnergy= -16.244072586

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  % draw strand separators if required
  currentdict /nicks known {
    gsave
    % draw lines in red color
    0 1 1 sethsbcolor
    % draw with line thickness of 0.2
    0.2 setlinewidth
    nicks
    { 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
    } forall
    grestore
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (Brnacofold_pf_test_0010)
} def

/sequence { (\
CUGCGACACGAAGAUGAAAGUUCCUCCCUUGGAACCUUGCAAAAUAACACACAGCUCUUUAUGCAACCUCGGUCUUCUGU\
) } def
/len { sequence length } bind def

72 216 translate
72 6 mul len 1 add div dup scale
/Helvetica findfont 0.95 scalefont setfont

drawseq
%data starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data

%draw the grid
drawgrid

%start of base pair probability data
%start of base pair probability data
1 5 0.029532822 ubox
1 13 0.005637445 ubox
1 72 0.003640806 ubox
1 79 0.026831210 ubox
2 6 0.005174265 ubox
2 8 0.028081479 ubox
2 12 0.005148693 ubox
2 41 0.006941188 ubox
2 53 0.003283468 ubox
2 65 0.013003135 ubox
2 71 0.003660542 ubox
2 79 0.008338453 ubox
3 7 0.032071229 ubox
3 9 0.026883723 ubox
3 40 0.007509451 ubox
3 52 0.003325676 ubox
3 64 0.014059968 ubox
3 70 0.003648209 ubox
3 75 0.018263513 ubox
3 76 0.033105023 ubox
3 77 0.032428745 ubox
3 78 0.010914048 ubox
3 80 0.077829176 ubox
4 10 0.008391523 ubox
4 39 0.007508919 ubox
4 63 0.013989132 ubox
4 71 0.007087992 ubox
4 79 0.083855325 ubox
5 9 0.016107273 ubox
5 38 0.007089564 ubox
5 62 0.011820430 ubox
5 64 0.005222277 ubox
5 70 0.007224986 ubox
5 74 0.231317920 ubox
5 77 0.009395295 ubox
5 78 0.076714172 ubox
5 80 0.044314616 ubox
6 37 0.006503650 ubox
6 69 0.006913582 ubox
6 73 0.231687138 ubox
6 75 0.003412426 ubox
6 76 0.008920760 ubox
6 78 0.012662314 ubox
6 80 0.810507495 ubox
7 16 0.004635477 ubox
7 63 0.009074419 ubox
7 72 0.231434102 ubox
7 79 0.887950831 ubox
8 15 0.004168413 ubox
8 62 0.009406604 ubox
8 73 0.005956985 ubox
8 78 0.883138006 ubox
8 80 0.175783608 ubox
9 16 0.003678372 ubox
9 71 0.230927367 ubox
9 72 0.006054421 ubox
9 79 0.195069209 ubox
10 60 0.015767319 ubox
10 70 0.231655862 ubox
10 74 0.003387324 ubox
10 76 0.010250141 ubox
10 77 0.970924828 ubox
10 78 0.035660900 ubox
11 38 0.003644529 ubox
11 59 0.016693421 ubox
11 69 0.206686912 ubox
11 73 0.003246315 ubox
11 75 0.007867207 ubox
11 76 0.971764397 ubox
12 37 0.007960381 ubox
12 45 0.006146374 ubox
12 58 0.017696513 ubox
12 69 0.090062145 ubox
12 75 0.971687110 ubox
12 78 0.010882577 ubox
13 36 0.009014817 ubox
13 40 0.007001179 ubox
13 57 0.017732307 ubox
13 67 0.100620736 ubox
13 68 0.126855218 ubox
13 70 0.004030111 ubox
13 74 0.972170912 ubox
13 77 0.011420829 ubox
14 38 0.003229897 ubox
14 45 0.006205938 ubox
14 56 0.017293941 ubox
14 62 0.008344330 ubox
14 69 0.004215998 ubox
14 73 0.959066601 ubox
14 76 0.011071108 ubox
15 19 0.005917283 ubox
15 20 0.003353669 ubox
15 39 0.007263728 ubox
15 41 0.089697813 ubox
15 42 0.007443189 ubox
15 43 0.003420860 ubox
15 44 0.005465414 ubox
15 53 0.003947137 ubox
15 61 0.008532038 ubox
15 65 0.025004815 ubox
15 66 0.018296476 ubox
15 71 0.562711967 ubox
15 72 0.761479228 ubox
16 23 0.003391091 ubox
16 36 0.044783927 ubox
16 37 0.011952496 ubox
16 38 0.023568575 ubox
16 40 0.119411048 ubox
16 48 0.003579406 ubox
16 50 0.003583194 ubox
16 52 0.004541226 ubox
16 55 0.003425455 ubox
16 60 0.008679370 ubox
16 64 0.023904987 ubox
16 67 0.033328784 ubox
16 68 0.061640050 ubox
16 69 0.025795086 ubox
16 70 0.794116725 ubox
16 74 0.010723256 ubox
17 22 0.003215728 ubox
17 37 0.027121408 ubox
17 38 0.122843328 ubox
17 59 0.008555572 ubox
17 69 0.756875196 ubox
17 73 0.009555079 ubox
18 37 0.159639292 ubox
18 38 0.159920676 ubox
18 58 0.007530014 ubox
18 59 0.003260075 ubox
18 69 0.231551617 ubox
19 37 0.200708736 ubox
19 38 0.014839064 ubox
19 58 0.003166484 ubox
19 69 0.046869936 ubox
20 35 0.982716541 ubox
20 36 0.149678563 ubox
20 37 0.003889818 ubox
20 40 0.003373082 ubox
20 67 0.034715623 ubox
20 68 0.033598499 ubox
21 34 0.997001444 ubox
21 66 0.025253050 ubox
22 33 0.999267876 ubox
22 34 0.005231304 ubox
22 65 0.009089652 ubox
23 32 0.999854018 ubox
24 31 0.999520574 ubox
25 31 0.003732767 ubox
25 33 0.012982383 ubox
26 32 0.013676217 ubox
27 31 0.013612403 ubox
27 72 0.004871089 ubox
28 71 0.005009733 ubox
30 41 0.003213566 ubox
31 40 0.003271447 ubox
31 68 0.006247931 ubox
32 67 0.006248744 ubox
34 69 0.003511472 ubox
34 73 0.008111846 ubox
35 71 0.003233912 ubox
35 72 0.014178532 ubox
36 54 0.009075164 ubox
36 71 0.041257640 ubox
36 72 0.010730387 ubox
37 41 0.004964359 ubox
37 42 0.007446012 ubox
37 43 0.012375508 ubox
37 44 0.038342931 ubox
37 46 0.014362636 ubox
37 47 0.025173974 ubox
37 49 0.004477240 ubox
37 51 0.007382568 ubox
37 53 0.010290298 ubox
37 54 0.010232994 ubox
37 65 0.022082874 ubox
37 66 0.778881412 ubox
37 71 0.010123381 ubox
38 42 0.011517260 ubox
38 43 0.043657546 ubox
38 44 0.017426325 ubox
38 46 0.029583379 ubox
38 47 0.018853638 ubox
38 49 0.074841158 ubox
38 51 0.033809514 ubox
38 53 0.036747042 ubox
38 65 0.924261496 ubox
38 66 0.017874218 ubox
39 45 0.028182824 ubox
39 48 0.087816239 ubox
39 50 0.039403925 ubox
39 52 0.040476478 ubox
39 55 0.061866064 ubox
39 64 0.955996363 ubox
39 67 0.003975239 ubox
39 68 0.003509349 ubox
40 54 0.061925603 ubox
40 63 0.955992310 ubox
41 45 0.006188661 ubox
41 58 0.004277912 ubox
41 59 0.014037480 ubox
41 60 0.042220308 ubox
41 62 0.921878491 ubox
42 56 0.013675250 ubox
42 58 0.026411837 ubox
42 59 0.087346371 ubox
42 60 0.378865446 ubox
42 62 0.030033341 ubox
43 56 0.009625368 ubox
43 58 0.087787475 ubox
43 59 0.385384251 ubox
43 60 0.639837758 ubox
43 62 0.009615701 ubox
44 56 0.019645015 ubox
44 58 0.353372260 ubox
44 59 0.661287681 ubox
44 60 0.063029269 ubox
44 62 0.102832560 ubox
45 49 0.008879993 ubox
45 51 0.014127385 ubox
45 53 0.020290557 ubox
45 54 0.041838759 ubox
45 61 0.184537683 ubox
46 56 0.190382272 ubox
46 58 0.072697941 ubox
46 59 0.078537015 ubox
46 60 0.184416056 ubox
47 56 0.347199547 ubox
47 58 0.076222846 ubox
47 59 0.165130189 ubox
47 60 0.007686084 ubox
47 73 0.004270369 ubox
48 54 0.399372127 ubox
48 63 0.010389159 ubox
48 71 0.012131809 ubox
48 72 0.005563048 ubox
49 56 0.060460431 ubox
49 58 0.043736221 ubox
49 59 0.006438955 ubox
49 60 0.003968073 ubox
49 62 0.009881549 ubox
49 69 0.005611080 ubox
50 54 0.087154645 ubox
50 63 0.014915959 ubox
50 71 0.006505953 ubox
51 56 0.021616431 ubox
51 58 0.018785728 ubox
51 59 0.005685411 ubox
51 60 0.008379234 ubox
51 62 0.014366255 ubox
52 63 0.052037983 ubox
52 71 0.005353061 ubox
53 58 0.013724231 ubox
53 59 0.009899366 ubox
53 60 0.015433443 ubox
53 62 0.052433063 ubox
53 69 0.006213398 ubox
54 58 0.009142723 ubox
54 59 0.013006195 ubox
54 60 0.004957349 ubox
54 64 0.276020372 ubox
54 67 0.004352594 ubox
54 68 0.006177188 ubox
55 63 0.276291436 ubox
55 72 0.003162389 ubox
56 61 0.019189441 ubox
56 63 0.003223986 ubox
56 65 0.006222176 ubox
57 63 0.015965523 ubox
57 71 0.004428408 ubox
58 63 0.005037338 ubox
58 65 0.003625365 ubox
58 66 0.005053046 ubox
59 65 0.005437592 ubox
59 66 0.006470463 ubox
60 65 0.006744919 ubox
62 71 0.006170686 ubox
63 67 0.004231684 ubox
63 68 0.008652950 ubox
63 70 0.008539756 ubox
64 71 0.015072451 ubox
64 72 0.003522559 ubox
65 69 0.004453145 ubox
66 73 0.076741646 ubox
67 71 0.045725713 ubox
67 72 0.122791733 ubox
68 72 0.008413137 ubox
70 79 0.013595602 ubox
71 78 0.013965431 ubox
72 77 0.014005810 ubox
6 80 0.9746794 lbox
7 79 0.9746794 lbox
8 78 0.9746794 lbox
10 77 0.9746794 lbox
11 76 0.9746794 lbox
12 75 0.9746794 lbox
13 74 0.9746794 lbox
14 73 0.9746794 lbox
15 72 0.9746794 lbox
16 70 0.9746794 lbox
17 69 0.9746794 lbox
20 35 0.9746794 lbox
21 34 0.9746794 lbox
22 33 0.9746794 lbox
23 32 0.9746794 lbox
24 31 0.9746794 lbox
37 66 0.9746794 lbox
38 65 0.9746794 lbox
39 64 0.9746794 lbox
40 63 0.9746794 lbox
41 62 0.9746794 lbox
43 60 0.9746794 lbox
44 59 0.9746794 lbox
showpage
end
%%EOF
