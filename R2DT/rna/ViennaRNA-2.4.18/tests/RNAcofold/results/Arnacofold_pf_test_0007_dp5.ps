%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 17:24:54 2020
%%Title: RNA Dot Plot
%%BoundingBox: 66 211 518 662
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% Monomer A FreeEnergy= -13.768195944

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  % draw strand separators if required
  currentdict /nicks known {
    gsave
    % draw lines in red color
    0 1 1 sethsbcolor
    % draw with line thickness of 0.2
    0.2 setlinewidth
    nicks
    { 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
    } forall
    grestore
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (Arnacofold_pf_test_0007)
} def

/sequence { (\
GUUUAUGUCCUGGCUUCCACCUGGCCUAUAUCUACUUAAACAACGGACCCUACGCAGUGGCUUUCGUAAC\
) } def
/len { sequence length } bind def

72 216 translate
72 6 mul len 1 add div dup scale
/Helvetica findfont 0.95 scalefont setfont

drawseq
%data starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data

%draw the grid
drawgrid

%start of base pair probability data
%start of base pair probability data
1 9 0.007358863 ubox
1 10 0.009048106 ubox
1 29 0.004081663 ubox
1 31 0.012508389 ubox
1 32 0.023319007 ubox
1 33 0.009714357 ubox
1 35 0.334083988 ubox
1 36 0.003833138 ubox
1 37 0.007946990 ubox
1 41 0.922406383 ubox
1 53 0.009997891 ubox
1 55 0.005626170 ubox
1 61 0.003328172 ubox
1 70 0.013330806 ubox
2 7 0.003838226 ubox
2 28 0.004051062 ubox
2 30 0.014096600 ubox
2 34 0.333806543 ubox
2 38 0.004147107 ubox
2 39 0.008236321 ubox
2 40 0.922855858 ubox
2 52 0.009871943 ubox
2 54 0.005544632 ubox
2 60 0.003288338 ubox
2 69 0.013190659 ubox
3 30 0.007621222 ubox
3 34 0.012225917 ubox
3 38 0.009855868 ubox
3 39 0.922163288 ubox
3 40 0.004357187 ubox
3 68 0.011429310 ubox
3 69 0.008662217 ubox
4 28 0.025215211 ubox
4 30 0.060646408 ubox
4 34 0.043499717 ubox
4 38 0.920203844 ubox
4 39 0.004957176 ubox
4 52 0.004335868 ubox
4 68 0.010178459 ubox
5 27 0.026457705 ubox
5 29 0.064667958 ubox
5 31 0.349130014 ubox
5 33 0.048869621 ubox
5 36 0.031422267 ubox
5 37 0.887585859 ubox
5 51 0.004293314 ubox
5 67 0.009963244 ubox
6 28 0.065774486 ubox
6 30 0.372105494 ubox
6 34 0.092859203 ubox
6 38 0.004595207 ubox
6 42 0.016862535 ubox
6 56 0.003191950 ubox
6 66 0.009762433 ubox
7 25 0.044633481 ubox
7 26 0.039215688 ubox
7 27 0.058361437 ubox
7 29 0.372129961 ubox
7 31 0.093666984 ubox
7 32 0.116937167 ubox
7 33 0.082290458 ubox
7 35 0.846189857 ubox
7 36 0.011103594 ubox
7 37 0.005328939 ubox
7 41 0.018709172 ubox
7 48 0.022184695 ubox
7 55 0.003212320 ubox
7 61 0.004421112 ubox
7 65 0.009273970 ubox
7 70 0.005083338 ubox
8 24 0.034644556 ubox
8 28 0.361378022 ubox
8 30 0.112552043 ubox
8 34 0.823677283 ubox
8 40 0.017975653 ubox
8 47 0.022341682 ubox
8 60 0.004395822 ubox
8 69 0.004876075 ubox
9 23 0.034751692 ubox
9 24 0.168409645 ubox
9 46 0.022365592 ubox
9 59 0.004391479 ubox
10 23 0.168110738 ubox
10 24 0.013822197 ubox
10 45 0.022303226 ubox
10 57 0.004180180 ubox
11 19 0.033143644 ubox
11 23 0.013337654 ubox
11 28 0.176788485 ubox
11 30 0.099387412 ubox
11 34 0.009067352 ubox
11 43 0.004710135 ubox
11 56 0.004135145 ubox
12 18 0.033719951 ubox
12 20 0.009993435 ubox
12 21 0.168344289 ubox
12 22 0.010832998 ubox
12 25 0.009121330 ubox
12 26 0.981373130 ubox
12 27 0.053447114 ubox
12 29 0.028727766 ubox
12 31 0.004764437 ubox
12 32 0.012577681 ubox
12 33 0.007180955 ubox
12 55 0.003635338 ubox
12 62 0.007537163 ubox
13 17 0.033181657 ubox
13 18 0.003292644 ubox
13 20 0.168154874 ubox
13 21 0.010961149 ubox
13 25 0.982575361 ubox
13 26 0.045759460 ubox
13 29 0.007926602 ubox
13 31 0.008650818 ubox
13 32 0.006885300 ubox
13 61 0.007631801 ubox
14 23 0.033631453 ubox
14 24 0.982010863 ubox
14 60 0.007143011 ubox
15 19 0.013186101 ubox
15 23 0.970877680 ubox
15 24 0.006953507 ubox
15 28 0.004262155 ubox
15 59 0.006341119 ubox
16 23 0.035344830 ubox
16 24 0.004556146 ubox
16 28 0.004344067 ubox
16 47 0.003305793 ubox
17 23 0.022063373 ubox
17 24 0.064329252 ubox
17 46 0.003385755 ubox
17 57 0.004191170 ubox
17 60 0.003690204 ubox
18 23 0.070834168 ubox
18 24 0.003945244 ubox
18 45 0.003380092 ubox
18 59 0.004708547 ubox
19 58 0.004881056 ubox
20 57 0.003949511 ubox
21 57 0.003227209 ubox
22 56 0.004310707 ubox
23 32 0.003857651 ubox
23 33 0.003180355 ubox
23 41 0.003260852 ubox
23 49 0.005764850 ubox
23 55 0.004044666 ubox
24 32 0.003240695 ubox
24 48 0.005826757 ubox
25 46 0.006325850 ubox
26 45 0.006324269 ubox
27 34 0.018834359 ubox
27 38 0.021981688 ubox
27 40 0.004121025 ubox
28 33 0.021133593 ubox
28 37 0.023097089 ubox
29 34 0.005699384 ubox
29 38 0.021266744 ubox
30 36 0.003976462 ubox
30 37 0.022536699 ubox
31 47 0.004750931 ubox
32 46 0.004941879 ubox
32 60 0.003842213 ubox
33 38 0.004259121 ubox
33 39 0.004428669 ubox
33 40 0.004411412 ubox
33 42 0.004288857 ubox
33 45 0.004765513 ubox
33 59 0.003908572 ubox
33 68 0.003770044 ubox
34 58 0.003932401 ubox
34 67 0.003592971 ubox
35 57 0.003933841 ubox
35 66 0.003411589 ubox
36 40 0.003822683 ubox
36 42 0.006275249 ubox
36 43 0.005059636 ubox
36 56 0.003756607 ubox
36 68 0.004625827 ubox
36 69 0.013040104 ubox
37 42 0.009102215 ubox
37 68 0.015190232 ubox
38 67 0.009178155 ubox
40 58 0.004977807 ubox
40 67 0.011959221 ubox
41 57 0.005127713 ubox
41 66 0.011989665 ubox
42 64 0.004818994 ubox
42 67 0.037579022 ubox
43 58 0.003313476 ubox
43 63 0.004957045 ubox
43 64 0.007784641 ubox
43 67 0.961121146 ubox
44 54 0.009947874 ubox
44 57 0.003486385 ubox
44 66 0.997024072 ubox
45 53 0.010285736 ubox
45 62 0.026172319 ubox
45 63 0.004179588 ubox
45 64 0.019928542 ubox
45 65 0.997966905 ubox
46 61 0.032533678 ubox
46 62 0.009923444 ubox
46 63 0.079379796 ubox
46 64 0.991279577 ubox
46 65 0.023283018 ubox
47 58 0.004281146 ubox
47 62 0.109784717 ubox
47 63 0.971064571 ubox
47 64 0.026972848 ubox
47 67 0.004334979 ubox
48 57 0.005061194 ubox
48 59 0.010389658 ubox
48 60 0.237987595 ubox
48 66 0.004453054 ubox
49 59 0.238261871 ubox
49 60 0.349031461 ubox
50 57 0.231533822 ubox
50 59 0.349406263 ubox
50 60 0.903384546 ubox
51 56 0.216716863 ubox
51 57 0.031122994 ubox
51 59 0.904003912 ubox
51 60 0.003396987 ubox
51 68 0.026078841 ubox
52 58 0.908473247 ubox
52 62 0.012503200 ubox
52 63 0.005197961 ubox
52 67 0.027218186 ubox
53 57 0.899989637 ubox
53 59 0.013414687 ubox
53 60 0.008832155 ubox
53 66 0.027336535 ubox
54 58 0.008941432 ubox
54 61 0.028136278 ubox
54 65 0.026591242 ubox
55 60 0.028226897 ubox
56 62 0.008855041 ubox
56 63 0.014906621 ubox
56 64 0.016422306 ubox
57 61 0.009067831 ubox
57 62 0.011975620 ubox
57 63 0.015851362 ubox
57 70 0.004929955 ubox
58 69 0.004945748 ubox
60 67 0.007159473 ubox
61 66 0.007583140 ubox
1 41 0.9746794 lbox
2 40 0.9746794 lbox
3 39 0.9746794 lbox
4 38 0.9746794 lbox
5 37 0.9746794 lbox
7 35 0.9746794 lbox
8 34 0.9746794 lbox
12 26 0.9746794 lbox
13 25 0.9746794 lbox
14 24 0.9746794 lbox
15 23 0.9746794 lbox
43 67 0.9746794 lbox
44 66 0.9746794 lbox
45 65 0.9746794 lbox
46 64 0.9746794 lbox
47 63 0.9746794 lbox
50 60 0.9746794 lbox
51 59 0.9746794 lbox
52 58 0.9746794 lbox
53 57 0.9746794 lbox
showpage
end
%%EOF
