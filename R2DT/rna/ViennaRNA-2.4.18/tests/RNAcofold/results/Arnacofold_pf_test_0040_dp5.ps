%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 17:25:00 2020
%%Title: RNA Dot Plot
%%BoundingBox: 66 211 518 662
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% Monomer A FreeEnergy= -16.552938425

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  % draw strand separators if required
  currentdict /nicks known {
    gsave
    % draw lines in red color
    0 1 1 sethsbcolor
    % draw with line thickness of 0.2
    0.2 setlinewidth
    nicks
    { 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
    } forall
    grestore
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (Arnacofold_pf_test_0040)
} def

/sequence { (\
UUUGAUGUACUGAUGGCAAUUACAGAGGAAUGAUAUAGGCAGAUCCAUUCCUCGACCGAGCGCCUCCCUG\
) } def
/len { sequence length } bind def

72 216 translate
72 6 mul len 1 add div dup scale
/Helvetica findfont 0.95 scalefont setfont

drawseq
%data starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data

%draw the grid
drawgrid

%start of base pair probability data
%start of base pair probability data
1 5 0.008927260 ubox
1 7 0.021686998 ubox
1 9 0.015812861 ubox
1 12 0.008225770 ubox
1 13 0.027522714 ubox
1 24 0.005363631 ubox
1 60 0.007007753 ubox
1 70 0.003626120 ubox
2 7 0.023690366 ubox
2 9 0.029533067 ubox
2 12 0.028920120 ubox
2 13 0.042931871 ubox
2 19 0.011416453 ubox
2 59 0.009535460 ubox
2 70 0.005057156 ubox
3 7 0.009245848 ubox
3 9 0.025733214 ubox
3 12 0.046021011 ubox
3 13 0.020402126 ubox
3 16 0.005096724 ubox
3 18 0.013098131 ubox
3 22 0.023869591 ubox
3 24 0.005504938 ubox
3 58 0.009800461 ubox
3 70 0.004473079 ubox
4 8 0.023819142 ubox
4 10 0.064424566 ubox
4 11 0.039517742 ubox
4 14 0.005845607 ubox
4 17 0.013355733 ubox
4 20 0.003245965 ubox
4 21 0.026378162 ubox
4 23 0.005877549 ubox
4 57 0.010055598 ubox
4 64 0.004221528 ubox
4 66 0.049699392 ubox
4 67 0.018946884 ubox
4 68 0.020807255 ubox
4 69 0.005987229 ubox
5 11 0.026380541 ubox
5 14 0.101134798 ubox
5 20 0.026597701 ubox
5 65 0.049366663 ubox
5 69 0.018830075 ubox
6 12 0.007298612 ubox
6 13 0.103619123 ubox
6 15 0.005407729 ubox
6 18 0.024421314 ubox
6 19 0.022397188 ubox
6 24 0.034405462 ubox
6 62 0.005802962 ubox
6 70 0.016862630 ubox
7 11 0.010979100 ubox
7 14 0.038214176 ubox
7 17 0.029770162 ubox
7 23 0.038198538 ubox
7 61 0.007006168 ubox
7 63 0.033561416 ubox
7 64 0.003535432 ubox
7 65 0.003994484 ubox
7 66 0.007414250 ubox
7 67 0.042079279 ubox
7 68 0.054282792 ubox
7 69 0.024694745 ubox
8 12 0.006567375 ubox
8 13 0.038120920 ubox
8 15 0.003597794 ubox
8 16 0.028864270 ubox
8 22 0.037794557 ubox
8 60 0.006696392 ubox
8 62 0.033196896 ubox
8 70 0.149517865 ubox
9 14 0.008994945 ubox
9 20 0.005107535 ubox
9 21 0.035345023 ubox
9 65 0.007822309 ubox
9 69 0.179240947 ubox
10 15 0.026833071 ubox
10 16 0.007576672 ubox
10 58 0.003416605 ubox
10 60 0.032245818 ubox
10 70 0.138154084 ubox
11 15 0.006911615 ubox
11 18 0.026101478 ubox
11 19 0.016855911 ubox
11 22 0.016740538 ubox
11 24 0.004351128 ubox
11 59 0.030904235 ubox
11 60 0.006073389 ubox
11 70 0.019666954 ubox
12 17 0.027307580 ubox
12 21 0.020510038 ubox
12 23 0.004630049 ubox
12 57 0.003785919 ubox
12 61 0.003925639 ubox
12 63 0.003869654 ubox
12 64 0.007536089 ubox
12 65 0.014786795 ubox
12 66 0.740451187 ubox
12 67 0.323629821 ubox
12 68 0.092731105 ubox
12 69 0.020290057 ubox
13 20 0.022363463 ubox
13 65 0.733722600 ubox
13 69 0.009777945 ubox
14 19 0.022216573 ubox
14 24 0.010533335 ubox
14 58 0.028327081 ubox
14 62 0.005465941 ubox
14 70 0.004670109 ubox
15 23 0.011723496 ubox
15 57 0.034242647 ubox
15 61 0.005874898 ubox
15 63 0.039372605 ubox
15 64 0.994765529 ubox
15 65 0.007032978 ubox
15 66 0.003565268 ubox
15 67 0.005116304 ubox
15 68 0.006989045 ubox
16 56 0.034226823 ubox
16 61 0.058028095 ubox
16 63 0.995537337 ubox
16 64 0.005803600 ubox
16 66 0.004504801 ubox
16 67 0.006575951 ubox
17 54 0.018095100 ubox
17 60 0.058246080 ubox
17 62 0.994548512 ubox
20 54 0.003501414 ubox
20 55 0.011590748 ubox
20 58 0.061710239 ubox
20 59 0.789050678 ubox
20 60 0.094828114 ubox
21 54 0.011860786 ubox
21 55 0.015520054 ubox
21 58 0.765197829 ubox
21 59 0.101484305 ubox
21 60 0.017346807 ubox
23 54 0.164027659 ubox
23 58 0.017800851 ubox
23 70 0.003975349 ubox
24 69 0.003934222 ubox
25 53 0.999497496 ubox
25 56 0.004132619 ubox
25 68 0.003302145 ubox
26 52 0.999804895 ubox
27 51 0.999982059 ubox
28 50 0.999985784 ubox
29 48 0.003881391 ubox
29 49 0.999589508 ubox
30 48 0.998530620 ubox
31 41 0.004846773 ubox
31 47 0.995813847 ubox
32 40 0.005812740 ubox
32 45 0.571078974 ubox
32 46 0.819057777 ubox
33 44 0.802088940 ubox
34 38 0.003794409 ubox
34 39 0.010005993 ubox
34 41 0.021855926 ubox
34 42 0.050855001 ubox
34 43 0.792412925 ubox
35 44 0.168018633 ubox
35 48 0.003654778 ubox
36 41 0.175045897 ubox
36 42 0.110376284 ubox
36 43 0.170824411 ubox
36 47 0.004744289 ubox
37 44 0.034761878 ubox
38 44 0.014231060 ubox
38 45 0.089937457 ubox
38 46 0.030427530 ubox
39 44 0.061113732 ubox
39 45 0.034491383 ubox
54 61 0.028164254 ubox
54 63 0.003426345 ubox
54 66 0.005411427 ubox
54 67 0.003586924 ubox
54 68 0.008773284 ubox
55 65 0.005177786 ubox
55 69 0.006326092 ubox
56 60 0.009896052 ubox
56 62 0.003526165 ubox
56 70 0.004400037 ubox
57 62 0.003321239 ubox
58 63 0.003433514 ubox
58 64 0.004325293 ubox
58 66 0.047255578 ubox
58 67 0.004311287 ubox
58 68 0.003414933 ubox
59 65 0.047345790 ubox
59 69 0.007605716 ubox
60 64 0.046319459 ubox
60 67 0.003195432 ubox
60 68 0.007816396 ubox
62 66 0.003831220 ubox
62 67 0.005480554 ubox
64 70 0.004673696 ubox
65 70 0.004359300 ubox
66 70 0.007741143 ubox
12 66 0.9746794 lbox
13 65 0.9746794 lbox
15 64 0.9746794 lbox
16 63 0.9746794 lbox
17 62 0.9746794 lbox
20 59 0.9746794 lbox
21 58 0.9746794 lbox
25 53 0.9746794 lbox
26 52 0.9746794 lbox
27 51 0.9746794 lbox
28 50 0.9746794 lbox
29 49 0.9746794 lbox
30 48 0.9746794 lbox
31 47 0.9746794 lbox
32 46 0.9746794 lbox
showpage
end
%%EOF
