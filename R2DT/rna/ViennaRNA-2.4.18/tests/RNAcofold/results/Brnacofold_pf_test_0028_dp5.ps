%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 17:24:58 2020
%%Title: RNA Dot Plot
%%BoundingBox: 66 211 518 662
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% Monomer B FreeEnergy= -27.185316467

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  % draw strand separators if required
  currentdict /nicks known {
    gsave
    % draw lines in red color
    0 1 1 sethsbcolor
    % draw with line thickness of 0.2
    0.2 setlinewidth
    nicks
    { 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
    } forall
    grestore
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (Brnacofold_pf_test_0028)
} def

/sequence { (\
CUCCUUAGUCGGCCCGGGGUCCGGUUGGGACAGGGCGGAAUCACGCUGGAGAGUGUUCACGGAGACAGUCGUUUCAAUGG\
) } def
/len { sequence length } bind def

72 216 translate
72 6 mul len 1 add div dup scale
/Helvetica findfont 0.95 scalefont setfont

drawseq
%data starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data

%draw the grid
drawgrid

%start of base pair probability data
%start of base pair probability data
1 8 0.056441254 ubox
1 11 0.003887661 ubox
1 33 0.003963919 ubox
1 35 0.004325904 ubox
1 37 0.020847014 ubox
1 38 0.014678231 ubox
1 48 0.006450293 ubox
1 49 0.005848534 ubox
1 51 0.773550160 ubox
1 53 0.176680279 ubox
1 55 0.008093184 ubox
1 61 0.006005770 ubox
1 64 0.160236153 ubox
1 79 0.012025233 ubox
1 80 0.013410989 ubox
2 7 0.051604176 ubox
2 8 0.007884570 ubox
2 30 0.015008085 ubox
2 32 0.003187520 ubox
2 35 0.017479969 ubox
2 37 0.014444515 ubox
2 39 0.065332511 ubox
2 40 0.006771960 ubox
2 43 0.003680848 ubox
2 48 0.005553571 ubox
2 50 0.780584891 ubox
2 52 0.179010963 ubox
2 63 0.161671829 ubox
2 79 0.008773573 ubox
2 80 0.008877805 ubox
3 8 0.022683218 ubox
3 11 0.004609444 ubox
3 12 0.005831062 ubox
3 29 0.016354574 ubox
3 34 0.025640486 ubox
3 35 0.030830641 ubox
3 38 0.068650332 ubox
3 45 0.006876396 ubox
3 48 0.003713158 ubox
3 49 0.781388576 ubox
3 51 0.178358199 ubox
3 53 0.009193400 ubox
3 55 0.004333638 ubox
3 61 0.005586704 ubox
3 62 0.161933442 ubox
3 79 0.013844369 ubox
3 80 0.067123290 ubox
4 8 0.015185227 ubox
4 11 0.011247628 ubox
4 28 0.016336087 ubox
4 29 0.009836023 ubox
4 33 0.025775224 ubox
4 34 0.031101181 ubox
4 37 0.068558784 ubox
4 38 0.006490733 ubox
4 45 0.011648472 ubox
4 48 0.780218053 ubox
4 49 0.079060373 ubox
4 51 0.026095718 ubox
4 53 0.009391725 ubox
4 61 0.161866097 ubox
4 64 0.004736919 ubox
4 79 0.067740995 ubox
4 80 0.016494327 ubox
5 11 0.003175382 ubox
5 27 0.013462095 ubox
5 28 0.011093431 ubox
5 32 0.024652240 ubox
5 33 0.031410606 ubox
5 37 0.006425062 ubox
5 39 0.004507061 ubox
5 40 0.022301640 ubox
5 43 0.080220872 ubox
5 45 0.046683399 ubox
5 48 0.064091826 ubox
5 49 0.152948500 ubox
5 50 0.029119734 ubox
5 52 0.009388312 ubox
5 59 0.014535109 ubox
5 63 0.004770624 ubox
5 76 0.003190105 ubox
5 77 0.018964299 ubox
5 79 0.010715591 ubox
5 80 0.006150473 ubox
6 11 0.003973242 ubox
6 27 0.014576066 ubox
6 32 0.030482500 ubox
6 33 0.003180780 ubox
6 39 0.012530771 ubox
6 40 0.025412962 ubox
6 43 0.032583073 ubox
6 45 0.082769875 ubox
6 48 0.168886566 ubox
6 49 0.023165752 ubox
6 51 0.009058614 ubox
6 59 0.026124852 ubox
6 62 0.004415686 ubox
6 76 0.018319842 ubox
6 77 0.018552086 ubox
6 79 0.008444688 ubox
6 80 0.005621244 ubox
7 25 0.005004960 ubox
7 26 0.017092207 ubox
7 41 0.127868696 ubox
7 47 0.251335570 ubox
7 57 0.008720050 ubox
7 78 0.008396839 ubox
8 25 0.016592531 ubox
8 31 0.041881400 ubox
8 41 0.143588315 ubox
8 42 0.153511724 ubox
8 44 0.563742510 ubox
8 46 0.261979031 ubox
8 47 0.009710828 ubox
8 56 0.003954067 ubox
8 57 0.007554513 ubox
8 58 0.013619891 ubox
8 60 0.015324207 ubox
8 66 0.004021507 ubox
8 75 0.003279593 ubox
8 78 0.003523216 ubox
9 17 0.003628541 ubox
9 18 0.003398119 ubox
9 24 0.018839201 ubox
9 28 0.024684060 ubox
9 29 0.008820571 ubox
9 30 0.041515730 ubox
9 38 0.049403965 ubox
9 39 0.859621047 ubox
9 40 0.112496258 ubox
9 43 0.372319836 ubox
9 45 0.191351201 ubox
9 49 0.008103537 ubox
9 59 0.011405558 ubox
9 65 0.004004610 ubox
9 80 0.004274793 ubox
10 16 0.004619120 ubox
10 17 0.004308533 ubox
10 23 0.020688916 ubox
10 27 0.026336637 ubox
10 28 0.012573559 ubox
10 29 0.040409431 ubox
10 37 0.074333996 ubox
10 38 0.978906276 ubox
10 45 0.057072859 ubox
10 48 0.008457492 ubox
10 61 0.011378448 ubox
10 64 0.003977653 ubox
10 79 0.006496136 ubox
11 15 0.004344190 ubox
11 21 0.004833298 ubox
11 22 0.020595719 ubox
11 26 0.027984518 ubox
11 36 0.053542713 ubox
11 41 0.030002936 ubox
11 42 0.038137680 ubox
11 44 0.057834782 ubox
11 47 0.008824467 ubox
11 60 0.011407266 ubox
11 78 0.004576073 ubox
12 20 0.005416779 ubox
12 21 0.020469371 ubox
12 25 0.029115649 ubox
12 26 0.016445993 ubox
12 36 0.995813966 ubox
12 41 0.016970278 ubox
12 42 0.016797533 ubox
12 46 0.008800282 ubox
13 19 0.020867584 ubox
13 24 0.024548301 ubox
13 27 0.006084989 ubox
13 29 0.004286740 ubox
13 34 0.010016704 ubox
13 35 0.997615475 ubox
13 38 0.009087720 ubox
13 45 0.008712328 ubox
14 18 0.020721452 ubox
14 23 0.018720906 ubox
14 24 0.043436241 ubox
14 28 0.004368437 ubox
14 33 0.009885885 ubox
14 34 0.997595967 ubox
14 35 0.007124303 ubox
14 37 0.008950208 ubox
14 38 0.037810634 ubox
15 23 0.046311878 ubox
15 27 0.004362833 ubox
15 33 0.995654769 ubox
15 34 0.009662200 ubox
15 35 0.008444555 ubox
15 37 0.037890869 ubox
16 21 0.006412457 ubox
16 22 0.048952160 ubox
16 26 0.004242930 ubox
16 31 0.019220307 ubox
16 36 0.037868689 ubox
17 21 0.048164652 ubox
17 25 0.004060107 ubox
17 31 0.066243326 ubox
18 31 0.142053921 ubox
19 31 0.977741720 ubox
20 28 0.006500223 ubox
20 29 0.093357322 ubox
20 30 0.991107082 ubox
20 39 0.004576421 ubox
21 27 0.006539421 ubox
21 28 0.116871312 ubox
21 29 0.991577772 ubox
21 38 0.005047302 ubox
22 27 0.119107300 ubox
22 28 0.991154802 ubox
22 29 0.004226893 ubox
22 37 0.005047974 ubox
22 80 0.003894180 ubox
23 36 0.005032278 ubox
24 78 0.006022131 ubox
25 34 0.004799910 ubox
25 77 0.006572988 ubox
26 33 0.004530888 ubox
26 76 0.006770371 ubox
27 75 0.006810506 ubox
28 74 0.006791282 ubox
29 73 0.006801031 ubox
30 72 0.006814532 ubox
31 48 0.006999076 ubox
31 49 0.004301898 ubox
31 71 0.006802771 ubox
32 47 0.006638466 ubox
33 46 0.006211372 ubox
34 47 0.033604425 ubox
35 44 0.006042847 ubox
35 46 0.037751737 ubox
36 45 0.037952966 ubox
36 61 0.025325548 ubox
37 42 0.023192741 ubox
37 44 0.044544028 ubox
37 46 0.007611433 ubox
37 47 0.005391901 ubox
37 58 0.010203927 ubox
37 60 0.035921758 ubox
37 75 0.003992683 ubox
38 42 0.008534218 ubox
38 44 0.007112872 ubox
38 46 0.005694311 ubox
38 57 0.010185672 ubox
38 58 0.051254082 ubox
38 60 0.005992550 ubox
38 74 0.004003074 ubox
38 75 0.003521980 ubox
39 56 0.007448598 ubox
39 57 0.052543863 ubox
39 73 0.004014752 ubox
39 74 0.003548673 ubox
40 47 0.007313439 ubox
40 56 0.046919687 ubox
40 57 0.032905979 ubox
40 72 0.003781026 ubox
40 73 0.003245849 ubox
40 78 0.003673292 ubox
41 49 0.004131900 ubox
41 50 0.009113139 ubox
41 52 0.008548588 ubox
41 55 0.013436296 ubox
41 59 0.010195679 ubox
41 63 0.005432398 ubox
41 71 0.003596574 ubox
41 77 0.003584449 ubox
41 80 0.019307323 ubox
42 48 0.008025706 ubox
42 49 0.009743320 ubox
42 51 0.009181595 ubox
42 55 0.094762962 ubox
42 61 0.015603123 ubox
42 62 0.005942137 ubox
42 79 0.030091468 ubox
42 80 0.011120507 ubox
43 47 0.007236652 ubox
43 54 0.095738346 ubox
43 56 0.543238045 ubox
43 57 0.020584804 ubox
43 72 0.010756619 ubox
43 78 0.027772099 ubox
44 49 0.007942770 ubox
44 51 0.004482404 ubox
44 53 0.095719769 ubox
44 55 0.581699558 ubox
44 61 0.043217527 ubox
44 71 0.011515462 ubox
44 79 0.042932429 ubox
44 80 0.004246154 ubox
45 54 0.582641435 ubox
45 56 0.009503958 ubox
45 60 0.043918566 ubox
45 69 0.004913830 ubox
45 70 0.011258252 ubox
45 75 0.005983436 ubox
45 78 0.041821428 ubox
46 51 0.031672836 ubox
46 53 0.582923768 ubox
46 55 0.009941052 ubox
46 61 0.005200090 ubox
46 62 0.004004583 ubox
46 68 0.012290441 ubox
46 79 0.004493038 ubox
47 51 0.006517904 ubox
47 52 0.577063152 ubox
47 59 0.045147725 ubox
47 61 0.005473402 ubox
47 67 0.012287248 ubox
47 76 0.054653551 ubox
48 58 0.045764184 ubox
48 60 0.006792734 ubox
48 66 0.012265506 ubox
48 73 0.016845742 ubox
48 74 0.007275598 ubox
48 75 0.056365120 ubox
49 57 0.045581663 ubox
49 58 0.009481531 ubox
49 72 0.019540479 ubox
49 73 0.012160800 ubox
49 74 0.054158840 ubox
49 75 0.007010302 ubox
50 56 0.044997476 ubox
50 57 0.009541197 ubox
50 72 0.014426779 ubox
50 73 0.049401286 ubox
50 74 0.007055385 ubox
51 56 0.007455882 ubox
51 58 0.011147661 ubox
51 70 0.088525656 ubox
51 72 0.014450416 ubox
52 56 0.007979456 ubox
52 57 0.015665398 ubox
52 69 0.094095121 ubox
52 78 0.006289788 ubox
53 57 0.006115687 ubox
53 58 0.026886617 ubox
53 60 0.051666938 ubox
53 66 0.015461135 ubox
53 70 0.009269222 ubox
53 75 0.004190183 ubox
53 78 0.009324025 ubox
54 59 0.048426988 ubox
54 61 0.020876346 ubox
54 65 0.015424043 ubox
54 67 0.097294299 ubox
54 76 0.017215609 ubox
54 77 0.009625442 ubox
54 79 0.017215703 ubox
54 80 0.007801922 ubox
55 60 0.026722814 ubox
55 66 0.098065026 ubox
55 75 0.019018826 ubox
55 78 0.027629633 ubox
56 63 0.014374343 ubox
56 64 0.017586623 ubox
56 65 0.094017046 ubox
56 77 0.028219837 ubox
56 79 0.008678042 ubox
56 80 0.025073193 ubox
57 61 0.003535360 ubox
57 62 0.013310959 ubox
57 63 0.024733525 ubox
57 64 0.085712151 ubox
57 65 0.021938150 ubox
57 76 0.027997022 ubox
57 79 0.018090462 ubox
57 80 0.578594558 ubox
58 62 0.027113216 ubox
58 64 0.030725228 ubox
58 79 0.938863462 ubox
58 80 0.038182343 ubox
59 69 0.005781257 ubox
59 72 0.042702600 ubox
59 78 0.932428918 ubox
60 68 0.006092772 ubox
60 71 0.045322228 ubox
60 79 0.075984314 ubox
60 80 0.005842392 ubox
61 66 0.004785846 ubox
61 70 0.045067822 ubox
61 75 0.022600386 ubox
61 78 0.062216557 ubox
62 69 0.036280150 ubox
62 70 0.009996730 ubox
62 73 0.003210218 ubox
62 74 0.016957573 ubox
62 75 0.979767385 ubox
63 69 0.011163093 ubox
63 72 0.003283884 ubox
63 73 0.015533403 ubox
63 74 0.979580724 ubox
64 70 0.006547559 ubox
64 72 0.011742136 ubox
64 73 0.979189673 ubox
64 75 0.008501713 ubox
65 69 0.005905206 ubox
65 72 0.980243763 ubox
65 74 0.008597594 ubox
66 71 0.978673682 ubox
66 79 0.038991413 ubox
66 80 0.004271753 ubox
67 72 0.005475003 ubox
67 74 0.006275068 ubox
67 78 0.038162270 ubox
68 73 0.007010126 ubox
68 74 0.003977793 ubox
68 75 0.022608852 ubox
68 78 0.005415671 ubox
69 76 0.008364901 ubox
69 77 0.006376858 ubox
69 80 0.047314058 ubox
70 79 0.077802095 ubox
70 80 0.005952807 ubox
71 75 0.009228929 ubox
71 78 0.074845031 ubox
72 77 0.070710644 ubox
72 79 0.005124666 ubox
72 80 0.003793226 ubox
73 79 0.006080226 ubox
74 79 0.003247937 ubox
74 80 0.005507581 ubox
75 79 0.008650298 ubox
75 80 0.005797555 ubox
1 51 0.9746794 lbox
2 50 0.9746794 lbox
3 49 0.9746794 lbox
4 48 0.9746794 lbox
9 39 0.9746794 lbox
10 38 0.9746794 lbox
12 36 0.9746794 lbox
13 35 0.9746794 lbox
14 34 0.9746794 lbox
15 33 0.9746794 lbox
19 31 0.9746794 lbox
20 30 0.9746794 lbox
21 29 0.9746794 lbox
22 28 0.9746794 lbox
58 79 0.9746794 lbox
59 78 0.9746794 lbox
62 75 0.9746794 lbox
63 74 0.9746794 lbox
64 73 0.9746794 lbox
65 72 0.9746794 lbox
66 71 0.9746794 lbox
showpage
end
%%EOF
