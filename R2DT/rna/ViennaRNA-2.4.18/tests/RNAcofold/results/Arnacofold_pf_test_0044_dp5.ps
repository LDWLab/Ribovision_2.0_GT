%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 17:25:01 2020
%%Title: RNA Dot Plot
%%BoundingBox: 66 211 518 662
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% Monomer A FreeEnergy= -25.322641799

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  % draw strand separators if required
  currentdict /nicks known {
    gsave
    % draw lines in red color
    0 1 1 sethsbcolor
    % draw with line thickness of 0.2
    0.2 setlinewidth
    nicks
    { 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
    } forall
    grestore
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (Arnacofold_pf_test_0044)
} def

/sequence { (\
UCUGUACGGACGGAUGAGGGACCUUCUUUGAGUCAGCGGCCAAUGGUAGCAUCGCUGACCUCCCGUCUGA\
) } def
/len { sequence length } bind def

72 216 translate
72 6 mul len 1 add div dup scale
/Helvetica findfont 0.95 scalefont setfont

drawseq
%data starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data

%draw the grid
drawgrid

%start of base pair probability data
%start of base pair probability data
1 6 0.010575758 ubox
1 9 0.003640447 ubox
1 10 0.015245460 ubox
1 14 0.020157543 ubox
1 70 0.018047752 ubox
2 8 0.007131953 ubox
2 9 0.016947955 ubox
2 13 0.022119582 ubox
2 69 0.020532897 ubox
3 8 0.015901093 ubox
3 12 0.022125637 ubox
3 69 0.005004559 ubox
3 70 0.014516756 ubox
4 11 0.022183237 ubox
4 67 0.007380977 ubox
5 10 0.021118460 ubox
5 69 0.009300190 ubox
5 70 0.101688499 ubox
6 66 0.009142574 ubox
6 68 0.005226054 ubox
7 65 0.009440036 ubox
7 69 0.983837829 ubox
8 64 0.009409729 ubox
8 67 0.004199824 ubox
8 68 0.996995525 ubox
9 63 0.009321071 ubox
9 67 0.999144844 ubox
10 66 0.999048943 ubox
11 30 0.005005893 ubox
11 65 0.999134852 ubox
11 69 0.031890205 ubox
12 23 0.003585110 ubox
12 27 0.003202240 ubox
12 29 0.006048440 ubox
12 63 0.063124937 ubox
12 64 0.997023235 ubox
12 68 0.032349896 ubox
13 22 0.003725195 ubox
13 26 0.007566684 ubox
13 28 0.013591951 ubox
13 29 0.023565610 ubox
13 62 0.089135546 ubox
13 63 0.991751928 ubox
13 64 0.003539097 ubox
13 67 0.032429879 ubox
14 24 0.004250529 ubox
14 25 0.010097432 ubox
14 27 0.060944753 ubox
14 28 0.108690089 ubox
14 29 0.063327166 ubox
14 61 0.102086640 ubox
14 66 0.032355076 ubox
15 20 0.004864799 ubox
15 21 0.007916278 ubox
15 30 0.104553432 ubox
15 31 0.179583893 ubox
15 65 0.031495107 ubox
16 22 0.010331906 ubox
16 23 0.025754140 ubox
16 24 0.003329061 ubox
16 25 0.125265458 ubox
16 26 0.471606326 ubox
16 27 0.006592904 ubox
16 28 0.236757070 ubox
16 29 0.487889323 ubox
16 60 0.142187432 ubox
16 61 0.009219501 ubox
16 62 0.457446879 ubox
16 63 0.004121377 ubox
16 64 0.025745967 ubox
16 66 0.004129931 ubox
16 67 0.018287780 ubox
17 24 0.141002948 ubox
17 25 0.470858188 ubox
17 27 0.257965418 ubox
17 28 0.513051605 ubox
17 29 0.396353207 ubox
17 61 0.460015571 ubox
17 66 0.017945530 ubox
18 22 0.009409609 ubox
18 23 0.146367007 ubox
18 24 0.467256519 ubox
18 25 0.009005904 ubox
18 26 0.260583679 ubox
18 27 0.522120627 ubox
18 28 0.421699558 ubox
18 29 0.014067299 ubox
18 59 0.004344156 ubox
18 60 0.458365262 ubox
18 61 0.015153283 ubox
18 62 0.049458999 ubox
18 63 0.020101558 ubox
18 64 0.030098059 ubox
19 23 0.457509842 ubox
19 24 0.014897401 ubox
19 25 0.241717575 ubox
19 26 0.525534968 ubox
19 27 0.458489577 ubox
19 28 0.021819772 ubox
19 29 0.027773826 ubox
19 59 0.390804021 ubox
19 60 0.023044015 ubox
19 61 0.049402591 ubox
19 62 0.020349425 ubox
19 63 0.031226029 ubox
19 64 0.008528207 ubox
20 24 0.157460607 ubox
20 25 0.413503557 ubox
20 26 0.469050359 ubox
20 27 0.021604085 ubox
20 28 0.037494721 ubox
20 29 0.036305463 ubox
20 33 0.006546817 ubox
20 34 0.137588317 ubox
20 53 0.003186206 ubox
20 59 0.024173685 ubox
20 60 0.049621784 ubox
20 61 0.017546966 ubox
20 62 0.031771018 ubox
20 63 0.008503459 ubox
21 25 0.408654525 ubox
21 27 0.036486072 ubox
21 28 0.035324888 ubox
21 29 0.010071552 ubox
21 33 0.153338480 ubox
21 47 0.004350284 ubox
21 61 0.031186862 ubox
22 30 0.021592503 ubox
22 32 0.161304677 ubox
22 46 0.005050625 ubox
22 57 0.004385230 ubox
23 30 0.204835385 ubox
23 32 0.204850788 ubox
23 45 0.005022340 ubox
23 49 0.003335310 ubox
24 30 0.031663712 ubox
24 31 0.205675925 ubox
24 32 0.087101515 ubox
24 48 0.003230785 ubox
25 30 0.184329800 ubox
25 31 0.122294480 ubox
25 32 0.007627434 ubox
25 46 0.005005482 ubox
25 58 0.006119867 ubox
26 30 0.126560602 ubox
26 32 0.042544269 ubox
26 45 0.006354498 ubox
26 57 0.006017542 ubox
27 31 0.039502292 ubox
27 32 0.007943552 ubox
28 32 0.004517657 ubox
28 43 0.008577086 ubox
29 42 0.009831423 ubox
29 54 0.004756835 ubox
29 58 0.010660341 ubox
30 41 0.009979769 ubox
30 53 0.005087205 ubox
30 59 0.004717712 ubox
30 60 0.273705760 ubox
30 61 0.056947297 ubox
30 62 0.720316920 ubox
30 63 0.004301246 ubox
31 52 0.004939800 ubox
31 56 0.016399815 ubox
31 61 0.721900256 ubox
32 40 0.010123300 ubox
32 55 0.016547177 ubox
32 59 0.763130250 ubox
32 60 0.511545574 ubox
32 62 0.003341085 ubox
33 39 0.010080405 ubox
33 54 0.016012371 ubox
33 58 0.979793727 ubox
34 38 0.009729602 ubox
34 57 0.990102816 ubox
35 52 0.010615585 ubox
35 56 0.993655913 ubox
36 47 0.005131314 ubox
36 50 0.047414295 ubox
36 55 0.994263227 ubox
36 59 0.003815416 ubox
37 45 0.003362514 ubox
37 46 0.005638864 ubox
37 49 0.047530596 ubox
37 54 0.994219194 ubox
37 57 0.092827595 ubox
38 44 0.003238476 ubox
38 47 0.003516505 ubox
38 50 0.014584625 ubox
38 52 0.029575336 ubox
38 53 0.985058744 ubox
38 56 0.093708441 ubox
39 44 0.003255678 ubox
39 47 0.470820638 ubox
39 50 0.576417748 ubox
39 52 0.489605413 ubox
39 53 0.026425552 ubox
39 55 0.093882313 ubox
40 45 0.017545846 ubox
40 46 0.516602226 ubox
40 49 0.583246946 ubox
40 54 0.092189603 ubox
41 45 0.513277867 ubox
41 46 0.079082398 ubox
41 49 0.112379920 ubox
41 54 0.017291801 ubox
42 47 0.113949421 ubox
42 52 0.031074090 ubox
43 47 0.025217052 ubox
43 52 0.406277894 ubox
44 48 0.033218326 ubox
44 49 0.025071109 ubox
44 51 0.551907463 ubox
45 50 0.553568961 ubox
45 52 0.006960219 ubox
45 53 0.007804379 ubox
45 60 0.004856400 ubox
46 50 0.008424670 ubox
46 52 0.009533480 ubox
46 59 0.004895221 ubox
47 51 0.009760336 ubox
47 57 0.010299913 ubox
47 58 0.003561105 ubox
48 52 0.004286788 ubox
48 56 0.016258887 ubox
49 55 0.016752201 ubox
50 54 0.016633630 ubox
52 58 0.008594858 ubox
53 57 0.009330749 ubox
7 69 0.9746794 lbox
8 68 0.9746794 lbox
9 67 0.9746794 lbox
10 66 0.9746794 lbox
11 65 0.9746794 lbox
12 64 0.9746794 lbox
13 63 0.9746794 lbox
16 26 0.9746794 lbox
17 25 0.9746794 lbox
18 24 0.9746794 lbox
19 23 0.9746794 lbox
30 62 0.9746794 lbox
31 61 0.9746794 lbox
32 60 0.9746794 lbox
33 58 0.9746794 lbox
34 57 0.9746794 lbox
35 56 0.9746794 lbox
36 55 0.9746794 lbox
37 54 0.9746794 lbox
38 53 0.9746794 lbox
39 50 0.9746794 lbox
40 49 0.9746794 lbox
showpage
end
%%EOF
