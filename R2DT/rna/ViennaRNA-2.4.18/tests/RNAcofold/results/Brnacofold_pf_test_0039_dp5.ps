%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 17:25:00 2020
%%Title: RNA Dot Plot
%%BoundingBox: 66 211 518 662
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% Monomer B FreeEnergy= -16.908913247

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  % draw strand separators if required
  currentdict /nicks known {
    gsave
    % draw lines in red color
    0 1 1 sethsbcolor
    % draw with line thickness of 0.2
    0.2 setlinewidth
    nicks
    { 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
    } forall
    grestore
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (Brnacofold_pf_test_0039)
} def

/sequence { (\
AAAUAACCGUGUCGGCUUGACCCACCGUCAUUCUGGGGUGCUUAUACAACAACCACCACGAAACCAUUAACCCACACGUA\
) } def
/len { sequence length } bind def

72 216 translate
72 6 mul len 1 add div dup scale
/Helvetica findfont 0.95 scalefont setfont

drawseq
%data starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data

%draw the grid
drawgrid

%start of base pair probability data
%start of base pair probability data
1 79 0.009284170 ubox
2 79 0.016375456 ubox
3 45 0.004176531 ubox
3 79 0.024811511 ubox
4 44 0.004358761 ubox
4 69 0.003181236 ubox
4 78 0.010394406 ubox
4 80 0.081099145 ubox
5 43 0.004381629 ubox
5 68 0.003347936 ubox
5 79 0.081894858 ubox
6 28 0.005144376 ubox
6 42 0.004162637 ubox
6 79 0.243507901 ubox
7 15 0.014928629 ubox
7 27 0.005316895 ubox
7 36 0.003332660 ubox
7 78 0.179105937 ubox
8 14 0.014999593 ubox
8 27 0.005619230 ubox
8 35 0.003348711 ubox
8 40 0.004341256 ubox
8 60 0.018847797 ubox
8 78 0.961900895 ubox
9 13 0.014034890 ubox
9 25 0.005805390 ubox
9 26 0.005804501 ubox
9 31 0.014550281 ubox
9 39 0.004114686 ubox
9 47 0.010718332 ubox
9 59 0.019044434 ubox
9 64 0.004804794 ubox
9 75 0.013973530 ubox
9 77 0.999102458 ubox
10 24 0.005780857 ubox
10 30 0.016862858 ubox
10 38 0.004247034 ubox
10 46 0.010730186 ubox
10 58 0.018954891 ubox
10 63 0.004661524 ubox
10 74 0.013998896 ubox
10 76 0.999020604 ubox
11 21 0.004975103 ubox
11 23 0.005150848 ubox
11 25 0.005899340 ubox
11 29 0.017725239 ubox
11 45 0.010727910 ubox
11 57 0.018015212 ubox
11 73 0.013860304 ubox
11 75 0.999168557 ubox
12 20 0.005683353 ubox
12 24 0.005883085 ubox
12 36 0.031722325 ubox
12 44 0.010671248 ubox
12 55 0.003998966 ubox
12 61 0.007655879 ubox
12 74 0.987216632 ubox
13 19 0.005984559 ubox
13 27 0.030662054 ubox
13 35 0.124957528 ubox
13 36 0.003720773 ubox
13 60 0.009263842 ubox
14 18 0.003758569 ubox
14 22 0.011515169 ubox
14 23 0.012446055 ubox
14 26 0.031647825 ubox
14 29 0.014505047 ubox
14 33 0.013436606 ubox
14 34 0.127764267 ubox
14 42 0.010688943 ubox
14 54 0.011443745 ubox
14 59 0.009080561 ubox
14 65 0.016740695 ubox
14 71 0.020986393 ubox
14 72 0.876715307 ubox
14 73 0.452914896 ubox
15 21 0.011556476 ubox
15 22 0.012379726 ubox
15 25 0.031554373 ubox
15 28 0.014706330 ubox
15 32 0.013152982 ubox
15 33 0.130603825 ubox
15 41 0.011026945 ubox
15 53 0.011442554 ubox
15 64 0.016778236 ubox
15 71 0.873958956 ubox
15 72 0.448942746 ubox
15 73 0.008135216 ubox
16 27 0.015619948 ubox
16 36 0.011247088 ubox
16 40 0.011036695 ubox
16 60 0.005729022 ubox
17 24 0.008378316 ubox
17 30 0.038591648 ubox
17 35 0.011219626 ubox
17 49 0.006558142 ubox
17 52 0.008653700 ubox
17 63 0.005250056 ubox
17 66 0.010484480 ubox
17 69 0.132206911 ubox
17 70 0.286945166 ubox
18 24 0.016564205 ubox
18 27 0.017683127 ubox
18 30 0.868952081 ubox
18 44 0.003703657 ubox
18 48 0.006816276 ubox
18 51 0.008739198 ubox
18 62 0.003377877 ubox
18 66 0.034194699 ubox
18 69 0.252028077 ubox
18 70 0.023018426 ubox
19 23 0.018182117 ubox
19 25 0.007749487 ubox
19 26 0.027917625 ubox
19 29 0.975304121 ubox
19 33 0.004119768 ubox
19 43 0.003919752 ubox
19 47 0.006818318 ubox
19 50 0.008708267 ubox
19 65 0.031451753 ubox
19 67 0.007757046 ubox
19 68 0.201275678 ubox
19 71 0.007515623 ubox
20 28 0.975519188 ubox
20 32 0.003886019 ubox
20 39 0.011871116 ubox
20 42 0.003986499 ubox
20 43 0.003720515 ubox
20 67 0.189472443 ubox
20 68 0.008009975 ubox
21 27 0.972933320 ubox
21 36 0.005992727 ubox
21 37 0.035271510 ubox
21 38 0.012743595 ubox
21 40 0.004782482 ubox
22 27 0.051729626 ubox
22 35 0.005855628 ubox
22 36 0.043783449 ubox
22 37 0.012731826 ubox
22 38 0.007901490 ubox
23 27 0.010648138 ubox
23 35 0.043864579 ubox
23 36 0.012296031 ubox
23 37 0.008237269 ubox
23 40 0.016933455 ubox
24 34 0.040277439 ubox
24 39 0.017076474 ubox
24 67 0.018157782 ubox
24 68 0.003902449 ubox
25 35 0.008846656 ubox
25 36 0.043363152 ubox
25 38 0.017085726 ubox
25 60 0.003400078 ubox
26 35 0.043621836 ubox
26 37 0.017068577 ubox
26 60 0.082616022 ubox
27 31 0.006021968 ubox
27 32 0.007881748 ubox
27 33 0.021068720 ubox
27 34 0.033797872 ubox
27 59 0.083209477 ubox
27 64 0.137437166 ubox
27 65 0.024624667 ubox
27 67 0.017530637 ubox
28 35 0.008843723 ubox
28 36 0.011510011 ubox
28 58 0.064394169 ubox
28 60 0.003379795 ubox
28 61 0.046049468 ubox
28 62 0.011075787 ubox
28 63 0.132479981 ubox
28 66 0.022369903 ubox
29 35 0.013682130 ubox
29 36 0.003307023 ubox
29 60 0.046189383 ubox
30 34 0.011213134 ubox
30 67 0.012317642 ubox
30 68 0.006826201 ubox
31 55 0.004814762 ubox
31 58 0.008549031 ubox
31 60 0.008294804 ubox
31 61 0.142514522 ubox
31 62 0.805833131 ubox
31 63 0.051042280 ubox
31 66 0.012660250 ubox
31 69 0.009462948 ubox
31 70 0.004962358 ubox
32 58 0.003803015 ubox
32 60 0.146598905 ubox
32 61 0.926108805 ubox
32 62 0.047477709 ubox
32 63 0.008275625 ubox
32 69 0.004376954 ubox
33 60 0.938256404 ubox
34 51 0.023675971 ubox
34 55 0.027098719 ubox
34 58 0.967697064 ubox
34 60 0.042480193 ubox
34 61 0.037689082 ubox
34 62 0.004469495 ubox
34 66 0.036650974 ubox
35 50 0.024948343 ubox
35 53 0.004074607 ubox
35 54 0.028784370 ubox
35 56 0.010561064 ubox
35 57 0.981536740 ubox
35 59 0.075051284 ubox
35 65 0.040381354 ubox
35 73 0.006998607 ubox
35 75 0.003194538 ubox
36 53 0.028765145 ubox
36 54 0.014106529 ubox
36 56 0.980726656 ubox
36 57 0.018187386 ubox
36 59 0.069781484 ubox
36 64 0.040302396 ubox
36 65 0.004944857 ubox
36 72 0.007261076 ubox
36 73 0.091221880 ubox
37 50 0.005217289 ubox
37 53 0.015072061 ubox
37 54 0.980748019 ubox
37 56 0.016067411 ubox
37 57 0.150690300 ubox
37 64 0.004648545 ubox
37 65 0.012622295 ubox
37 71 0.006807251 ubox
37 72 0.091358212 ubox
38 47 0.029523205 ubox
38 50 0.025738350 ubox
38 53 0.981566859 ubox
38 54 0.011410117 ubox
38 56 0.152887651 ubox
38 59 0.019576508 ubox
38 64 0.012937958 ubox
38 71 0.091348247 ubox
39 46 0.029707819 ubox
39 48 0.060857570 ubox
39 49 0.025894654 ubox
39 51 0.240594222 ubox
39 52 0.944907015 ubox
39 55 0.153072978 ubox
39 58 0.019623690 ubox
39 61 0.003585009 ubox
39 63 0.012841229 ubox
39 66 0.004391854 ubox
39 69 0.004444996 ubox
39 70 0.090414777 ubox
40 45 0.026659436 ubox
40 47 0.088383846 ubox
40 50 0.339629314 ubox
40 53 0.013003344 ubox
40 54 0.152306999 ubox
40 57 0.019503764 ubox
40 65 0.005422937 ubox
40 68 0.005788551 ubox
41 60 0.004406273 ubox
42 46 0.021961837 ubox
42 48 0.100276448 ubox
42 49 0.374962010 ubox
42 51 0.037921185 ubox
42 52 0.110751138 ubox
42 55 0.006017951 ubox
42 61 0.003262569 ubox
42 63 0.004447341 ubox
42 66 0.003945221 ubox
42 69 0.003650787 ubox
42 70 0.005043149 ubox
43 48 0.351150133 ubox
43 49 0.083347367 ubox
43 51 0.112088244 ubox
43 52 0.021500119 ubox
43 60 0.003249461 ubox
43 62 0.004476174 ubox
43 66 0.011046689 ubox
43 69 0.010191900 ubox
44 67 0.011862639 ubox
44 68 0.010159371 ubox
45 49 0.028478777 ubox
45 51 0.014808853 ubox
45 52 0.009408493 ubox
45 62 0.003432133 ubox
45 63 0.003794732 ubox
45 66 0.011531521 ubox
47 60 0.009455769 ubox
50 60 0.015457020 ubox
53 60 0.008425055 ubox
54 60 0.009925221 ubox
56 60 0.003421538 ubox
58 67 0.005867720 ubox
58 79 0.005617457 ubox
59 78 0.005973059 ubox
60 64 0.016341306 ubox
60 65 0.064824375 ubox
60 67 0.006018019 ubox
60 68 0.024832580 ubox
60 71 0.008854377 ubox
60 72 0.007264603 ubox
60 73 0.008970653 ubox
60 77 0.005889969 ubox
61 67 0.025310134 ubox
61 68 0.033787747 ubox
62 67 0.033665656 ubox
62 68 0.039342872 ubox
63 67 0.035903162 ubox
63 68 0.037717267 ubox
70 79 0.008967557 ubox
71 78 0.009293552 ubox
8 78 0.9746794 lbox
9 77 0.9746794 lbox
10 76 0.9746794 lbox
11 75 0.9746794 lbox
12 74 0.9746794 lbox
14 72 0.9746794 lbox
15 71 0.9746794 lbox
18 30 0.9746794 lbox
19 29 0.9746794 lbox
20 28 0.9746794 lbox
21 27 0.9746794 lbox
31 62 0.9746794 lbox
32 61 0.9746794 lbox
33 60 0.9746794 lbox
34 58 0.9746794 lbox
35 57 0.9746794 lbox
36 56 0.9746794 lbox
37 54 0.9746794 lbox
38 53 0.9746794 lbox
39 52 0.9746794 lbox
showpage
end
%%EOF
