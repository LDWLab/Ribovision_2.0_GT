%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 17:24:57 2020
%%Title: RNA Dot Plot
%%BoundingBox: 66 211 518 662
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% Homodimer AA FreeEnergy= -39.092635788

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  % draw strand separators if required
  currentdict /nicks known {
    gsave
    % draw lines in red color
    0 1 1 sethsbcolor
    % draw with line thickness of 0.2
    0.2 setlinewidth
    nicks
    { 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
    } forall
    grestore
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (AArnacofold_pf_test_0022)
} def

/sequence { (\
CGAUCUUGAUUGGAUGAUCAUUUGAAUACAGAUUCCACAUCUUGCCGCUGAAAAAAUGGCUAGUGAGGGCCGAUCUUGAUUGGAUGAUCAUUUGAAUACAGAUUCCACAUCUUGCCGCUGAAAAAAUGGCUAGUGAGGGC\
) } def
/len { sequence length } bind def

/cutpoint 71 def

/nicks [ 71 ] def
72 216 translate
72 6 mul len 1 add div dup scale
/Helvetica findfont 0.95 scalefont setfont

drawseq
%data starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data

%draw the grid
drawgrid

%start of base pair probability data
%start of base pair probability data
1 8 0.011059977 ubox
1 12 0.014108785 ubox
1 101 0.005913359 ubox
1 137 0.005543455 ubox
1 138 0.008704793 ubox
1 139 0.020218100 ubox
2 7 0.008553200 ubox
2 11 0.014516583 ubox
2 99 0.004195582 ubox
2 103 0.025432324 ubox
2 104 0.850870849 ubox
2 105 0.072308502 ubox
2 106 0.013009589 ubox
2 108 0.004586041 ubox
2 140 0.009626841 ubox
3 10 0.014364350 ubox
3 15 0.008012427 ubox
3 97 0.003759717 ubox
3 103 0.970227100 ubox
3 104 0.058506475 ubox
4 9 0.013155141 ubox
4 14 0.008540293 ubox
4 95 0.003425131 ubox
4 96 0.003774433 ubox
4 101 0.003659418 ubox
4 102 0.987642195 ubox
4 139 0.008038490 ubox
5 12 0.004001875 ubox
5 13 0.008892398 ubox
5 94 0.003668235 ubox
5 101 0.989827360 ubox
5 137 0.003951274 ubox
5 138 0.010542856 ubox
6 12 0.008801329 ubox
6 95 0.003260098 ubox
6 96 0.005257302 ubox
6 98 0.008732345 ubox
6 100 0.894614803 ubox
6 101 0.100995249 ubox
6 102 0.008470913 ubox
6 136 0.003863142 ubox
6 137 0.010496811 ubox
7 94 0.003980205 ubox
7 95 0.007192614 ubox
7 96 0.018503156 ubox
7 98 0.474097254 ubox
7 100 0.391392945 ubox
7 101 0.007685270 ubox
7 135 0.003337542 ubox
7 136 0.010272924 ubox
8 97 0.473428159 ubox
8 99 0.542466322 ubox
8 104 0.003268030 ubox
9 93 0.005697501 ubox
9 97 0.699003922 ubox
9 103 0.003805069 ubox
9 134 0.009628872 ubox
10 94 0.007942329 ubox
10 95 0.705501757 ubox
10 96 0.675449665 ubox
10 98 0.016714745 ubox
10 102 0.003655853 ubox
10 133 0.009452747 ubox
11 94 0.742655075 ubox
11 95 0.633245061 ubox
11 96 0.029491506 ubox
11 98 0.005601412 ubox
11 100 0.003250501 ubox
11 101 0.003433849 ubox
11 132 0.008880251 ubox
12 92 0.009453650 ubox
12 93 0.864580032 ubox
12 97 0.005298634 ubox
12 99 0.003633956 ubox
12 131 0.007489589 ubox
13 91 0.006137158 ubox
13 92 0.940477253 ubox
13 93 0.324305948 ubox
14 91 0.970607024 ubox
14 92 0.233172774 ubox
15 90 0.997606453 ubox
16 89 0.999975323 ubox
17 88 0.999744681 ubox
18 87 0.999744681 ubox
19 86 0.999975323 ubox
20 33 0.007469088 ubox
20 85 0.997606453 ubox
21 32 0.008482633 ubox
21 83 0.006137158 ubox
21 84 0.970607024 ubox
22 31 0.009084721 ubox
22 82 0.009453650 ubox
22 83 0.940477253 ubox
22 84 0.233172774 ubox
23 30 0.010368896 ubox
23 79 0.005697501 ubox
23 82 0.864580032 ubox
23 83 0.324305948 ubox
24 29 0.011197968 ubox
24 35 0.008802060 ubox
24 75 0.003668235 ubox
24 77 0.003980205 ubox
24 80 0.007942329 ubox
24 81 0.742655075 ubox
25 34 0.009304910 ubox
25 74 0.003425131 ubox
25 76 0.003260098 ubox
25 77 0.007192614 ubox
25 80 0.705501757 ubox
25 81 0.633245061 ubox
26 33 0.009673651 ubox
26 74 0.003774433 ubox
26 76 0.005257302 ubox
26 77 0.018503156 ubox
26 80 0.675449665 ubox
26 81 0.029491506 ubox
27 32 0.009214661 ubox
27 73 0.003759717 ubox
27 78 0.473428159 ubox
27 79 0.699003922 ubox
27 82 0.005298634 ubox
28 76 0.008732345 ubox
28 77 0.474097254 ubox
28 80 0.016714745 ubox
28 81 0.005601412 ubox
29 72 0.004195582 ubox
29 78 0.542466322 ubox
29 82 0.003633956 ubox
30 42 0.007109581 ubox
30 76 0.894614803 ubox
30 77 0.391392945 ubox
30 81 0.003250501 ubox
31 41 0.007756123 ubox
31 70 0.006510310 ubox
31 71 0.005913359 ubox
31 74 0.003659418 ubox
31 75 0.989827360 ubox
31 76 0.100995249 ubox
31 77 0.007685270 ubox
31 81 0.003433849 ubox
32 40 0.007729146 ubox
32 74 0.987642195 ubox
32 76 0.008470913 ubox
32 80 0.003655853 ubox
33 39 0.007356585 ubox
33 67 0.003562854 ubox
33 69 0.017061180 ubox
33 72 0.025432324 ubox
33 73 0.970227100 ubox
33 79 0.003805069 ubox
34 66 0.007600397 ubox
34 67 0.005895039 ubox
34 68 0.035287932 ubox
34 69 0.373669948 ubox
34 72 0.850870849 ubox
34 73 0.058506475 ubox
34 78 0.003268030 ubox
35 65 0.007163367 ubox
35 67 0.064709101 ubox
35 68 0.898553128 ubox
35 69 0.378951119 ubox
35 72 0.072308502 ubox
36 65 0.102228826 ubox
36 67 0.899540133 ubox
36 68 0.383538686 ubox
36 69 0.021326414 ubox
36 72 0.013009589 ubox
37 64 0.103669035 ubox
38 63 0.100607453 ubox
38 65 0.930173538 ubox
38 67 0.082101766 ubox
38 68 0.032618926 ubox
38 69 0.055555474 ubox
38 72 0.004586041 ubox
39 61 0.012100848 ubox
39 64 0.917744613 ubox
40 62 0.033239427 ubox
40 63 0.390018679 ubox
40 65 0.035806094 ubox
40 66 0.081497562 ubox
40 68 0.099875982 ubox
40 69 0.015732132 ubox
41 63 0.884129411 ubox
41 65 0.082418606 ubox
41 67 0.133192563 ubox
41 68 0.020719307 ubox
41 69 0.007966466 ubox
42 62 0.836422931 ubox
42 63 0.052382789 ubox
42 66 0.133559113 ubox
42 67 0.019906530 ubox
42 68 0.008009480 ubox
42 69 0.003195432 ubox
43 62 0.079113229 ubox
43 63 0.011435235 ubox
43 65 0.132877776 ubox
43 66 0.018249989 ubox
43 67 0.007755646 ubox
43 68 0.004186569 ubox
43 69 0.006435848 ubox
44 60 0.988486348 ubox
44 61 0.018944685 ubox
44 64 0.129853927 ubox
44 70 0.020964935 ubox
45 59 0.990752136 ubox
45 63 0.129874624 ubox
45 67 0.008673989 ubox
45 68 0.003948666 ubox
45 69 0.021192498 ubox
46 58 0.990545942 ubox
46 59 0.005032486 ubox
46 63 0.007417634 ubox
46 65 0.019151592 ubox
46 67 0.003946818 ubox
46 68 0.020922060 ubox
47 57 0.885995780 ubox
47 60 0.132087594 ubox
47 61 0.007199389 ubox
47 64 0.022118779 ubox
48 58 0.007425368 ubox
48 59 0.132418701 ubox
48 63 0.022189427 ubox
48 67 0.015193381 ubox
49 53 0.033876950 ubox
49 54 0.154068440 ubox
49 55 0.576434473 ubox
49 56 0.484463868 ubox
49 58 0.131149369 ubox
49 62 0.022076570 ubox
49 66 0.015142522 ubox
50 57 0.066046512 ubox
50 60 0.005988150 ubox
50 61 0.020247181 ubox
51 57 0.015803473 ubox
51 64 0.010555293 ubox
52 57 0.010538736 ubox
53 57 0.006015940 ubox
54 61 0.005489479 ubox
61 82 0.007489589 ubox
62 81 0.008880251 ubox
63 70 0.006213974 ubox
63 80 0.009452747 ubox
64 69 0.006274350 ubox
64 79 0.009628872 ubox
65 77 0.003337542 ubox
66 76 0.003863142 ubox
66 77 0.010272924 ubox
67 71 0.005543455 ubox
67 75 0.003951274 ubox
67 76 0.010496811 ubox
68 71 0.008704793 ubox
68 75 0.010542856 ubox
69 71 0.020218100 ubox
69 74 0.008038490 ubox
70 72 0.009626841 ubox
71 78 0.011059977 ubox
71 82 0.014108785 ubox
72 77 0.008553200 ubox
72 81 0.014516583 ubox
73 80 0.014364350 ubox
73 85 0.008012427 ubox
74 79 0.013155141 ubox
74 84 0.008540293 ubox
75 82 0.004001875 ubox
75 83 0.008892398 ubox
76 82 0.008801329 ubox
90 103 0.007469088 ubox
91 102 0.008482633 ubox
92 101 0.009084721 ubox
93 100 0.010368896 ubox
94 99 0.011197968 ubox
94 105 0.008802060 ubox
95 104 0.009304910 ubox
96 103 0.009673651 ubox
97 102 0.009214661 ubox
100 112 0.007109581 ubox
101 111 0.007756123 ubox
101 140 0.006510310 ubox
102 110 0.007729146 ubox
103 109 0.007356585 ubox
103 137 0.003562854 ubox
103 139 0.017061180 ubox
104 136 0.007600397 ubox
104 137 0.005895039 ubox
104 138 0.035287932 ubox
104 139 0.373669948 ubox
105 135 0.007163367 ubox
105 137 0.064709101 ubox
105 138 0.898553128 ubox
105 139 0.378951119 ubox
106 135 0.102228826 ubox
106 137 0.899540133 ubox
106 138 0.383538686 ubox
106 139 0.021326414 ubox
107 134 0.103669035 ubox
108 133 0.100607453 ubox
108 135 0.930173538 ubox
108 137 0.082101766 ubox
108 138 0.032618926 ubox
108 139 0.055555474 ubox
109 131 0.012100848 ubox
109 134 0.917744613 ubox
110 132 0.033239427 ubox
110 133 0.390018679 ubox
110 135 0.035806094 ubox
110 136 0.081497562 ubox
110 138 0.099875982 ubox
110 139 0.015732132 ubox
111 133 0.884129411 ubox
111 135 0.082418606 ubox
111 137 0.133192563 ubox
111 138 0.020719307 ubox
111 139 0.007966466 ubox
112 132 0.836422931 ubox
112 133 0.052382789 ubox
112 136 0.133559113 ubox
112 137 0.019906530 ubox
112 138 0.008009480 ubox
112 139 0.003195432 ubox
113 132 0.079113229 ubox
113 133 0.011435235 ubox
113 135 0.132877776 ubox
113 136 0.018249989 ubox
113 137 0.007755646 ubox
113 138 0.004186569 ubox
113 139 0.006435848 ubox
114 130 0.988486348 ubox
114 131 0.018944685 ubox
114 134 0.129853927 ubox
114 140 0.020964935 ubox
115 129 0.990752136 ubox
115 133 0.129874624 ubox
115 137 0.008673989 ubox
115 138 0.003948666 ubox
115 139 0.021192498 ubox
116 128 0.990545942 ubox
116 129 0.005032486 ubox
116 133 0.007417634 ubox
116 135 0.019151592 ubox
116 137 0.003946818 ubox
116 138 0.020922060 ubox
117 127 0.885995780 ubox
117 130 0.132087594 ubox
117 131 0.007199389 ubox
117 134 0.022118779 ubox
118 128 0.007425368 ubox
118 129 0.132418701 ubox
118 133 0.022189427 ubox
118 137 0.015193381 ubox
119 123 0.033876950 ubox
119 124 0.154068440 ubox
119 125 0.576434473 ubox
119 126 0.484463868 ubox
119 128 0.131149369 ubox
119 132 0.022076570 ubox
119 136 0.015142522 ubox
120 127 0.066046512 ubox
120 130 0.005988150 ubox
120 131 0.020247181 ubox
121 127 0.015803473 ubox
121 134 0.010555293 ubox
122 127 0.010538736 ubox
123 127 0.006015940 ubox
124 131 0.005489479 ubox
133 140 0.006213974 ubox
134 139 0.006274350 ubox
2 104 0.9746794 lbox
3 103 0.9746794 lbox
4 102 0.9746794 lbox
5 101 0.9746794 lbox
6 100 0.9746794 lbox
7 98 0.9746794 lbox
8 97 0.9746794 lbox
10 95 0.9746794 lbox
11 94 0.9746794 lbox
12 93 0.9746794 lbox
13 92 0.9746794 lbox
14 91 0.9746794 lbox
15 90 0.9746794 lbox
16 89 0.9746794 lbox
17 88 0.9746794 lbox
18 87 0.9746794 lbox
19 86 0.9746794 lbox
20 85 0.9746794 lbox
21 84 0.9746794 lbox
22 83 0.9746794 lbox
23 82 0.9746794 lbox
24 81 0.9746794 lbox
25 80 0.9746794 lbox
27 78 0.9746794 lbox
28 77 0.9746794 lbox
30 76 0.9746794 lbox
31 75 0.9746794 lbox
32 74 0.9746794 lbox
33 73 0.9746794 lbox
34 72 0.9746794 lbox
35 68 0.9746794 lbox
36 67 0.9746794 lbox
38 65 0.9746794 lbox
39 64 0.9746794 lbox
41 63 0.9746794 lbox
42 62 0.9746794 lbox
44 60 0.9746794 lbox
45 59 0.9746794 lbox
46 58 0.9746794 lbox
47 57 0.9746794 lbox
49 55 0.9746794 lbox
105 138 0.9746794 lbox
106 137 0.9746794 lbox
108 135 0.9746794 lbox
109 134 0.9746794 lbox
111 133 0.9746794 lbox
112 132 0.9746794 lbox
114 130 0.9746794 lbox
115 129 0.9746794 lbox
116 128 0.9746794 lbox
117 127 0.9746794 lbox
119 125 0.9746794 lbox
showpage
end
%%EOF
