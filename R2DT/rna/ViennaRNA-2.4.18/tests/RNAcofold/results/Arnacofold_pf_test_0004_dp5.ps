%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 17:24:53 2020
%%Title: RNA Dot Plot
%%BoundingBox: 66 211 518 662
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% Monomer A FreeEnergy= -17.970811287

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  % draw strand separators if required
  currentdict /nicks known {
    gsave
    % draw lines in red color
    0 1 1 sethsbcolor
    % draw with line thickness of 0.2
    0.2 setlinewidth
    nicks
    { 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
    } forall
    grestore
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (Arnacofold_pf_test_0004)
} def

/sequence { (\
ACUGAAAGCAAUUGCUCCCGAUUCCUCGGCUUGGUGACCCAAUAUGACUACGCCAAGGGUACCAAUCCGU\
) } def
/len { sequence length } bind def

72 216 translate
72 6 mul len 1 add div dup scale
/Helvetica findfont 0.95 scalefont setfont

drawseq
%data starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data

%draw the grid
drawgrid

%start of base pair probability data
%start of base pair probability data
1 12 0.003639271 ubox
1 22 0.063715087 ubox
1 23 0.018140526 ubox
1 26 0.007133957 ubox
1 60 0.015912293 ubox
1 70 0.057376490 ubox
2 8 0.023761198 ubox
2 14 0.009446928 ubox
2 20 0.129224846 ubox
2 29 0.038665163 ubox
2 59 0.016836430 ubox
2 69 0.067089659 ubox
3 7 0.021706123 ubox
3 8 0.004982046 ubox
3 10 0.038462212 ubox
3 11 0.004895497 ubox
3 14 0.006281485 ubox
3 20 0.579283301 ubox
3 21 0.057286292 ubox
3 28 0.038968398 ubox
3 58 0.015570528 ubox
3 64 0.010196660 ubox
3 69 0.026049298 ubox
4 9 0.043098729 ubox
4 13 0.010705054 ubox
4 15 0.013036768 ubox
4 16 0.004146689 ubox
4 17 0.096033179 ubox
4 18 0.089593851 ubox
4 19 0.722941038 ubox
4 22 0.005360362 ubox
4 23 0.010986686 ubox
4 24 0.187718800 ubox
4 25 0.017979449 ubox
4 26 0.004443944 ubox
4 27 0.054661323 ubox
4 30 0.006803756 ubox
4 63 0.010942992 ubox
4 67 0.064312112 ubox
4 68 0.034823199 ubox
4 70 0.003590735 ubox
5 12 0.010391495 ubox
5 13 0.007649855 ubox
5 16 0.074032484 ubox
5 22 0.011630954 ubox
5 23 0.188525623 ubox
5 26 0.048753651 ubox
5 66 0.060381406 ubox
5 70 0.004225598 ubox
6 12 0.007320012 ubox
6 13 0.016944462 ubox
6 16 0.032604171 ubox
6 22 0.186173825 ubox
6 23 0.011387719 ubox
6 26 0.022679905 ubox
6 32 0.004896935 ubox
6 66 0.006251309 ubox
6 70 0.003896707 ubox
7 12 0.018724305 ubox
7 13 0.006688421 ubox
7 16 0.901879559 ubox
7 22 0.008225329 ubox
7 23 0.003761444 ubox
7 26 0.286172727 ubox
7 31 0.006617916 ubox
8 12 0.004784708 ubox
8 13 0.008301689 ubox
8 15 0.926072956 ubox
8 17 0.006255540 ubox
8 18 0.004908401 ubox
8 19 0.009209365 ubox
8 23 0.004404643 ubox
8 24 0.086185255 ubox
8 25 0.303955826 ubox
8 26 0.006866305 ubox
8 27 0.008134983 ubox
8 30 0.007254313 ubox
8 70 0.007698494 ubox
9 14 0.924852122 ubox
9 20 0.009714825 ubox
9 29 0.006579807 ubox
9 69 0.008197961 ubox
10 16 0.003957266 ubox
10 22 0.004210617 ubox
10 23 0.318163607 ubox
11 16 0.004822499 ubox
11 22 0.344615486 ubox
11 23 0.004486884 ubox
11 66 0.006504879 ubox
12 21 0.346144594 ubox
12 65 0.006950239 ubox
13 20 0.345173791 ubox
13 21 0.006400166 ubox
13 61 0.006588825 ubox
13 64 0.007054962 ubox
14 18 0.011010121 ubox
14 19 0.333259823 ubox
14 25 0.003243970 ubox
14 30 0.009880001 ubox
14 60 0.007334820 ubox
14 63 0.006947768 ubox
14 68 0.003768965 ubox
14 70 0.005636649 ubox
15 20 0.014106572 ubox
15 29 0.008091377 ubox
15 59 0.007434862 ubox
15 69 0.006055785 ubox
16 21 0.003396764 ubox
16 28 0.004869670 ubox
16 58 0.006917244 ubox
17 29 0.012362636 ubox
17 57 0.003754746 ubox
17 59 0.006182418 ubox
17 69 0.005901782 ubox
18 28 0.009302743 ubox
18 29 0.216356354 ubox
18 58 0.006098900 ubox
18 69 0.018853693 ubox
19 28 0.219246029 ubox
19 57 0.005769151 ubox
19 69 0.014482813 ubox
20 24 0.019956304 ubox
20 25 0.072967137 ubox
20 26 0.010464894 ubox
20 27 0.227578074 ubox
20 62 0.012284412 ubox
20 63 0.014271688 ubox
20 67 0.045090161 ubox
20 68 0.011363548 ubox
20 70 0.005699045 ubox
21 26 0.208452064 ubox
21 60 0.018601962 ubox
21 66 0.046189030 ubox
21 70 0.012659172 ubox
22 59 0.013489822 ubox
22 61 0.011479396 ubox
22 65 0.045834517 ubox
22 69 0.005653316 ubox
23 59 0.068593839 ubox
23 64 0.032619119 ubox
24 29 0.004117966 ubox
24 58 0.093003490 ubox
24 59 0.013384955 ubox
24 69 0.009328466 ubox
25 57 0.093317559 ubox
25 58 0.013201057 ubox
25 59 0.003381342 ubox
25 69 0.016834008 ubox
26 55 0.003615986 ubox
26 56 0.092423401 ubox
26 57 0.012218598 ubox
26 58 0.003390237 ubox
26 69 0.013285459 ubox
27 57 0.003667934 ubox
27 59 0.003436016 ubox
27 69 0.932196781 ubox
28 54 0.095763129 ubox
28 63 0.003519816 ubox
28 67 0.017458275 ubox
28 68 0.969449652 ubox
29 53 0.095905683 ubox
29 62 0.003524524 ubox
29 66 0.017970093 ubox
29 67 0.968522630 ubox
29 68 0.007710632 ubox
29 70 0.007903131 ubox
30 52 0.095822411 ubox
30 57 0.067028423 ubox
30 69 0.018268816 ubox
31 42 0.008665845 ubox
31 56 0.071299908 ubox
31 64 0.006707579 ubox
31 65 0.946490633 ubox
32 41 0.008998856 ubox
32 50 0.093251557 ubox
32 55 0.072299437 ubox
32 64 0.990347560 ubox
32 65 0.010039052 ubox
33 40 0.009041952 ubox
33 49 0.095360254 ubox
33 54 0.072525196 ubox
33 63 0.992713278 ubox
34 39 0.008973992 ubox
34 48 0.095481567 ubox
34 53 0.072525479 ubox
34 62 0.992699198 ubox
35 47 0.095018698 ubox
35 52 0.072461295 ubox
35 61 0.974512772 ubox
36 45 0.004912787 ubox
36 51 0.071710588 ubox
36 60 0.687235413 ubox
37 45 0.064056378 ubox
37 49 0.030911809 ubox
37 60 0.711173092 ubox
38 46 0.006471362 ubox
38 58 0.046694944 ubox
38 59 0.991426251 ubox
39 46 0.012368098 ubox
39 57 0.046533398 ubox
39 58 0.991490607 ubox
39 59 0.014926560 ubox
40 46 0.048303665 ubox
40 52 0.005407897 ubox
40 57 0.990141433 ubox
40 58 0.015542807 ubox
41 45 0.039808036 ubox
41 49 0.012532406 ubox
42 49 0.008362142 ubox
43 47 0.004039082 ubox
43 50 0.035639464 ubox
43 52 0.042812180 ubox
43 55 0.049333527 ubox
43 56 0.081872824 ubox
43 57 0.007826036 ubox
44 49 0.034459672 ubox
45 50 0.026965182 ubox
45 52 0.482687641 ubox
45 55 0.268772619 ubox
45 56 0.045322898 ubox
46 51 0.525622831 ubox
46 53 0.149968509 ubox
46 54 0.279619684 ubox
48 52 0.096311141 ubox
48 57 0.011649129 ubox
49 55 0.006111523 ubox
49 56 0.021613283 ubox
51 57 0.005736697 ubox
57 68 0.030746236 ubox
58 63 0.004606498 ubox
58 67 0.033793330 ubox
58 68 0.050848774 ubox
59 66 0.033198144 ubox
59 67 0.050952325 ubox
59 68 0.005942431 ubox
60 65 0.032993664 ubox
61 66 0.006724013 ubox
61 70 0.012235929 ubox
62 69 0.013778940 ubox
63 69 0.006512621 ubox
3 20 0.9746794 lbox
4 19 0.9746794 lbox
7 16 0.9746794 lbox
8 15 0.9746794 lbox
9 14 0.9746794 lbox
27 69 0.9746794 lbox
28 68 0.9746794 lbox
29 67 0.9746794 lbox
31 65 0.9746794 lbox
32 64 0.9746794 lbox
33 63 0.9746794 lbox
34 62 0.9746794 lbox
35 61 0.9746794 lbox
36 60 0.9746794 lbox
38 59 0.9746794 lbox
39 58 0.9746794 lbox
40 57 0.9746794 lbox
showpage
end
%%EOF
