%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 17:25:00 2020
%%Title: RNA Dot Plot
%%BoundingBox: 66 211 518 662
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% Monomer B FreeEnergy= -24.424753388

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  % draw strand separators if required
  currentdict /nicks known {
    gsave
    % draw lines in red color
    0 1 1 sethsbcolor
    % draw with line thickness of 0.2
    0.2 setlinewidth
    nicks
    { 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
    } forall
    grestore
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (Brnacofold_pf_test_0036)
} def

/sequence { (\
AGGUAUCUCGGCCAAGGUUGUGUUCAAACGCGGCUCCAUGGCUGACAGUAUCGAACUCGCAAGACACCCAUCUUAUGACG\
) } def
/len { sequence length } bind def

72 216 translate
72 6 mul len 1 add div dup scale
/Helvetica findfont 0.95 scalefont setfont

drawseq
%data starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data

%draw the grid
drawgrid

%start of base pair probability data
%start of base pair probability data
1 8 0.004834680 ubox
1 51 0.003512699 ubox
1 57 0.007753691 ubox
1 73 0.004286057 ubox
2 7 0.008610033 ubox
2 46 0.006083801 ubox
2 49 0.009758153 ubox
2 51 0.010753773 ubox
2 52 0.985476105 ubox
2 56 0.010509090 ubox
2 57 0.013897502 ubox
2 58 0.003834895 ubox
2 68 0.057559245 ubox
2 69 0.011145617 ubox
2 72 0.004857598 ubox
2 79 0.008478642 ubox
3 7 0.003714482 ubox
3 46 0.010241546 ubox
3 49 0.005211698 ubox
3 51 0.991474526 ubox
3 52 0.035872926 ubox
3 56 0.017380811 ubox
3 67 0.057803938 ubox
3 68 0.010475686 ubox
3 71 0.004625812 ubox
3 79 0.011207364 ubox
4 45 0.006646862 ubox
4 47 0.009861632 ubox
4 48 0.003878867 ubox
4 50 0.992596670 ubox
4 55 0.016914720 ubox
4 66 0.056451018 ubox
4 70 0.004461602 ubox
4 78 0.010212941 ubox
5 49 0.987901034 ubox
5 51 0.009388388 ubox
6 45 0.005688487 ubox
6 47 0.155949267 ubox
6 48 0.936810399 ubox
6 50 0.009557989 ubox
6 54 0.017708313 ubox
6 64 0.053967658 ubox
6 78 0.003541248 ubox
7 44 0.006196743 ubox
7 48 0.152006307 ubox
7 53 0.018147292 ubox
7 63 0.054529050 ubox
7 77 0.003892170 ubox
8 45 0.974277876 ubox
8 47 0.093566989 ubox
8 62 0.038734426 ubox
9 44 0.999122324 ubox
10 43 0.999184455 ubox
11 42 0.999988913 ubox
12 41 0.999994963 ubox
13 40 0.999948739 ubox
14 39 0.986826523 ubox
15 35 0.042593758 ubox
15 39 0.030365119 ubox
16 34 0.032154492 ubox
16 35 0.928923189 ubox
16 36 0.202818070 ubox
16 37 0.269152873 ubox
17 34 0.971435056 ubox
17 35 0.005582491 ubox
17 36 0.234143397 ubox
17 37 0.005424580 ubox
18 32 0.008956438 ubox
18 33 0.985988626 ubox
19 30 0.005726908 ubox
19 32 0.993714487 ubox
19 33 0.012847077 ubox
20 29 0.007415663 ubox
20 31 0.999023467 ubox
20 34 0.017291601 ubox
21 28 0.007532723 ubox
21 30 0.998655160 ubox
21 32 0.038892822 ubox
21 33 0.013734364 ubox
22 29 0.997287827 ubox
22 31 0.040959402 ubox
23 27 0.028219936 ubox
23 28 0.922174502 ubox
23 30 0.039488694 ubox
24 28 0.028279974 ubox
25 30 0.003739450 ubox
44 60 0.004828562 ubox
46 53 0.010767884 ubox
46 59 0.019591256 ubox
47 57 0.043071405 ubox
48 52 0.004445399 ubox
48 56 0.047856817 ubox
48 58 0.004402318 ubox
48 60 0.013120613 ubox
48 65 0.010919495 ubox
48 67 0.010057016 ubox
48 79 0.004437004 ubox
49 54 0.003197582 ubox
49 55 0.046772363 ubox
49 59 0.012227476 ubox
49 64 0.010709478 ubox
49 66 0.009880426 ubox
49 78 0.003346528 ubox
51 61 0.007789361 ubox
51 64 0.011458279 ubox
52 59 0.030122410 ubox
52 63 0.012008577 ubox
52 80 0.039039235 ubox
53 57 0.004204646 ubox
53 58 0.044835170 ubox
53 60 0.031497792 ubox
53 65 0.014654656 ubox
53 67 0.013194662 ubox
53 68 0.020404580 ubox
53 69 0.015423572 ubox
53 72 0.016522906 ubox
53 79 0.126185466 ubox
54 71 0.015865250 ubox
56 63 0.028057962 ubox
56 77 0.027740888 ubox
56 80 0.267972197 ubox
57 62 0.026132406 ubox
57 64 0.090201655 ubox
57 75 0.007313297 ubox
57 77 0.009552231 ubox
57 78 0.881004947 ubox
57 80 0.008177186 ubox
58 63 0.096922223 ubox
58 77 0.944945020 ubox
58 80 0.129663943 ubox
59 65 0.012762607 ubox
59 67 0.007631892 ubox
59 68 0.008060479 ubox
59 69 0.004922092 ubox
59 72 0.004622027 ubox
59 74 0.005999785 ubox
59 76 0.923481076 ubox
59 79 0.141945953 ubox
60 77 0.152647248 ubox
60 80 0.004744892 ubox
61 73 0.006622335 ubox
61 74 0.931965705 ubox
61 76 0.131292856 ubox
62 71 0.006909833 ubox
62 73 0.976642331 ubox
62 74 0.015439853 ubox
62 76 0.007589424 ubox
63 67 0.004509319 ubox
63 68 0.013021102 ubox
63 69 0.016485546 ubox
63 72 0.979430755 ubox
63 73 0.007601871 ubox
63 74 0.040665297 ubox
63 79 0.008741405 ubox
64 71 0.906321753 ubox
64 73 0.041142966 ubox
64 74 0.004231845 ubox
65 77 0.015134851 ubox
65 80 0.005719012 ubox
66 71 0.011200561 ubox
66 73 0.003320205 ubox
66 76 0.013687943 ubox
67 77 0.003978876 ubox
67 80 0.009424143 ubox
68 77 0.011896701 ubox
68 80 0.007663007 ubox
69 77 0.068426903 ubox
69 80 0.031297763 ubox
70 76 0.067237587 ubox
71 75 0.059637661 ubox
71 78 0.077652930 ubox
72 77 0.083757379 ubox
72 80 0.004176669 ubox
2 52 0.9746794 lbox
3 51 0.9746794 lbox
4 50 0.9746794 lbox
5 49 0.9746794 lbox
6 48 0.9746794 lbox
8 45 0.9746794 lbox
9 44 0.9746794 lbox
10 43 0.9746794 lbox
11 42 0.9746794 lbox
12 41 0.9746794 lbox
13 40 0.9746794 lbox
14 39 0.9746794 lbox
16 35 0.9746794 lbox
17 34 0.9746794 lbox
18 33 0.9746794 lbox
19 32 0.9746794 lbox
20 31 0.9746794 lbox
21 30 0.9746794 lbox
22 29 0.9746794 lbox
23 28 0.9746794 lbox
57 78 0.9746794 lbox
58 77 0.9746794 lbox
59 76 0.9746794 lbox
61 74 0.9746794 lbox
62 73 0.9746794 lbox
63 72 0.9746794 lbox
64 71 0.9746794 lbox
showpage
end
%%EOF
