%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 17:24:58 2020
%%Title: RNA Dot Plot
%%BoundingBox: 66 211 518 662
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% Monomer A FreeEnergy= -8.423033670

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  % draw strand separators if required
  currentdict /nicks known {
    gsave
    % draw lines in red color
    0 1 1 sethsbcolor
    % draw with line thickness of 0.2
    0.2 setlinewidth
    nicks
    { 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
    } forall
    grestore
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (Arnacofold_pf_test_0028)
} def

/sequence { (\
UAGUACAGAAGAUCGCCGUAAGAAGUCAGAUAACAAGGAUAUACGACCCCUUAUCAUAUUAGCGUACCCG\
) } def
/len { sequence length } bind def

72 216 translate
72 6 mul len 1 add div dup scale
/Helvetica findfont 0.95 scalefont setfont

drawseq
%data starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data

%draw the grid
drawgrid

%start of base pair probability data
%start of base pair probability data
1 8 0.003843526 ubox
1 10 0.003539463 ubox
1 23 0.005744326 ubox
1 61 0.019129928 ubox
1 66 0.003778033 ubox
1 70 0.026066545 ubox
2 60 0.020237097 ubox
2 65 0.003897578 ubox
3 13 0.008286708 ubox
3 14 0.007297568 ubox
3 16 0.012611466 ubox
3 17 0.004360875 ubox
3 34 0.004345401 ubox
3 59 0.020534487 ubox
3 63 0.010392850 ubox
3 67 0.979383590 ubox
3 68 0.046634736 ubox
3 69 0.020019034 ubox
4 9 0.003390867 ubox
4 11 0.003469832 ubox
4 12 0.008680000 ubox
4 15 0.012411407 ubox
4 20 0.017972555 ubox
4 33 0.004153929 ubox
4 58 0.020488401 ubox
4 62 0.010129819 ubox
4 66 0.983462228 ubox
5 19 0.019076624 ubox
5 57 0.019357506 ubox
5 65 0.983583647 ubox
6 11 0.015904373 ubox
6 15 0.010591620 ubox
6 18 0.019195850 ubox
6 62 0.005067658 ubox
6 64 0.977753302 ubox
6 70 0.010364041 ubox
7 13 0.009734149 ubox
7 59 0.007244371 ubox
7 60 0.009316669 ubox
7 65 0.006919482 ubox
8 13 0.003680375 ubox
8 14 0.066579652 ubox
8 16 0.017658124 ubox
8 17 0.035367750 ubox
8 27 0.033828389 ubox
8 34 0.005197120 ubox
8 55 0.011505396 ubox
8 59 0.008075119 ubox
8 60 0.038340295 ubox
8 63 0.903994087 ubox
8 65 0.003961304 ubox
8 67 0.010086876 ubox
8 68 0.015268908 ubox
8 69 0.029610148 ubox
9 13 0.058025271 ubox
9 26 0.030286153 ubox
9 52 0.009935973 ubox
9 54 0.009912945 ubox
9 57 0.007316032 ubox
9 59 0.037432957 ubox
9 60 0.086475339 ubox
9 65 0.004696586 ubox
10 19 0.004953795 ubox
10 26 0.020323936 ubox
10 51 0.010549092 ubox
10 57 0.007470628 ubox
10 59 0.086462520 ubox
10 60 0.060552604 ubox
10 65 0.005327388 ubox
11 16 0.020873950 ubox
11 17 0.030447916 ubox
11 27 0.102757770 ubox
11 34 0.003976172 ubox
11 50 0.010563743 ubox
11 55 0.023148702 ubox
11 57 0.009200433 ubox
11 59 0.058143391 ubox
11 60 0.895826476 ubox
11 63 0.032181379 ubox
11 65 0.006642401 ubox
11 67 0.054754591 ubox
11 68 0.024943238 ubox
11 69 0.022087858 ubox
12 19 0.007385446 ubox
12 26 0.102283017 ubox
12 31 0.024942714 ubox
12 54 0.020866732 ubox
12 57 0.092681729 ubox
12 59 0.898633886 ubox
12 60 0.069983294 ubox
12 65 0.030390879 ubox
13 18 0.007114041 ubox
13 22 0.003480265 ubox
13 23 0.065385587 ubox
13 24 0.005043968 ubox
13 25 0.091446528 ubox
13 28 0.005202642 ubox
13 30 0.025985609 ubox
13 46 0.006416862 ubox
13 53 0.014258687 ubox
13 56 0.094968487 ubox
13 58 0.857559645 ubox
13 61 0.008865092 ubox
13 62 0.003402000 ubox
13 64 0.007290254 ubox
13 66 0.027602551 ubox
14 18 0.003992681 ubox
14 22 0.072749333 ubox
14 25 0.029536384 ubox
14 29 0.026185380 ubox
14 45 0.006524056 ubox
14 62 0.007279363 ubox
14 64 0.128985431 ubox
14 70 0.016179642 ubox
15 26 0.025290529 ubox
15 27 0.016263577 ubox
15 44 0.006457130 ubox
15 47 0.007959073 ubox
15 54 0.016287153 ubox
15 55 0.197511586 ubox
15 57 0.199660382 ubox
15 59 0.007739495 ubox
15 63 0.139565376 ubox
15 65 0.013995785 ubox
15 67 0.004902834 ubox
15 68 0.006236292 ubox
15 69 0.017589310 ubox
16 22 0.077939083 ubox
16 25 0.027565179 ubox
16 38 0.006091872 ubox
16 62 0.138803930 ubox
16 64 0.013148049 ubox
17 22 0.050706517 ubox
17 25 0.022426491 ubox
17 29 0.004105201 ubox
17 37 0.006178656 ubox
17 45 0.014393000 ubox
17 62 0.015045909 ubox
17 64 0.030524901 ubox
17 70 0.004525770 ubox
18 27 0.018453028 ubox
18 34 0.005533534 ubox
18 44 0.014558421 ubox
18 54 0.944486494 ubox
18 55 0.103091974 ubox
18 57 0.011676053 ubox
18 59 0.024072814 ubox
18 60 0.026104563 ubox
18 63 0.032857555 ubox
18 67 0.041056447 ubox
18 69 0.004234873 ubox
19 24 0.006525219 ubox
19 25 0.003528316 ubox
19 33 0.005345953 ubox
19 43 0.014520255 ubox
19 53 0.983097155 ubox
19 56 0.009200618 ubox
19 58 0.023905021 ubox
19 61 0.023961126 ubox
19 62 0.031434928 ubox
19 66 0.041198653 ubox
20 42 0.013650936 ubox
20 51 0.005248755 ubox
20 52 0.985878084 ubox
20 57 0.021741510 ubox
20 60 0.025853386 ubox
20 65 0.039907801 ubox
21 26 0.004241484 ubox
21 51 0.986407105 ubox
21 59 0.024104119 ubox
21 60 0.010108298 ubox
22 27 0.016189980 ubox
22 48 0.004678767 ubox
22 49 0.018305353 ubox
22 50 0.985648104 ubox
22 55 0.014667256 ubox
22 59 0.008401739 ubox
22 60 0.009941352 ubox
22 63 0.024449341 ubox
23 42 0.003568183 ubox
23 52 0.004088654 ubox
23 54 0.014034018 ubox
23 57 0.004174799 ubox
23 59 0.010007099 ubox
23 60 0.018395413 ubox
24 31 0.003337277 ubox
24 51 0.005450049 ubox
24 52 0.003359232 ubox
24 57 0.004057257 ubox
24 59 0.018760340 ubox
24 60 0.049749014 ubox
25 34 0.019971276 ubox
25 40 0.012457063 ubox
25 44 0.006552433 ubox
25 47 0.985754651 ubox
25 48 0.017881867 ubox
25 49 0.004057804 ubox
25 50 0.004440245 ubox
25 57 0.017189011 ubox
25 59 0.056680899 ubox
25 60 0.010763567 ubox
25 63 0.011947008 ubox
25 67 0.003333970 ubox
26 33 0.019037828 ubox
26 38 0.005165028 ubox
26 39 0.013290798 ubox
26 43 0.006256223 ubox
26 46 0.986727945 ubox
26 56 0.016669190 ubox
26 58 0.057289261 ubox
26 62 0.011433654 ubox
26 66 0.003272722 ubox
27 37 0.005830862 ubox
27 38 0.013371903 ubox
27 45 0.985220531 ubox
27 62 0.003602509 ubox
28 40 0.017884890 ubox
28 42 0.031133477 ubox
28 57 0.016276376 ubox
28 59 0.003713858 ubox
28 60 0.005667080 ubox
29 34 0.019587848 ubox
29 40 0.006106623 ubox
29 42 0.021294728 ubox
29 44 0.300989116 ubox
29 55 0.145152670 ubox
29 59 0.004027943 ubox
29 60 0.019308342 ubox
29 63 0.006566207 ubox
30 40 0.082487992 ubox
30 42 0.891870431 ubox
30 54 0.145307749 ubox
30 57 0.009285904 ubox
30 59 0.020133605 ubox
31 36 0.010430716 ubox
31 37 0.015704754 ubox
31 38 0.018938514 ubox
31 39 0.082053990 ubox
31 41 0.898147934 ubox
31 43 0.091792238 ubox
31 53 0.144987623 ubox
31 56 0.009135167 ubox
31 58 0.020193087 ubox
31 61 0.007751133 ubox
32 40 0.873192487 ubox
32 42 0.088681194 ubox
32 52 0.136837764 ubox
32 57 0.019358162 ubox
32 60 0.008409485 ubox
33 40 0.061677430 ubox
33 42 0.017485413 ubox
33 51 0.114365788 ubox
33 52 0.005512102 ubox
33 54 0.012002120 ubox
33 59 0.007952166 ubox
34 38 0.388293787 ubox
35 40 0.018078001 ubox
35 42 0.005310586 ubox
35 51 0.008860179 ubox
35 52 0.062410993 ubox
35 57 0.003449243 ubox
36 40 0.008226968 ubox
36 42 0.007063721 ubox
36 51 0.090904443 ubox
36 52 0.003325151 ubox
36 57 0.003975059 ubox
37 42 0.005863206 ubox
37 44 0.067899156 ubox
37 47 0.014382992 ubox
37 48 0.089794814 ubox
37 49 0.073968897 ubox
37 50 0.098196984 ubox
37 51 0.004341087 ubox
37 68 0.007404259 ubox
37 69 0.017587521 ubox
38 42 0.003308277 ubox
38 44 0.016462664 ubox
38 47 0.090029618 ubox
38 48 0.073901748 ubox
38 49 0.097906826 ubox
38 50 0.004660183 ubox
38 55 0.023080618 ubox
38 60 0.006045137 ubox
38 67 0.007431283 ubox
38 68 0.017592787 ubox
39 54 0.023141145 ubox
39 59 0.006274193 ubox
40 45 0.012287193 ubox
40 46 0.025555132 ubox
40 53 0.023122154 ubox
40 58 0.006305371 ubox
40 66 0.004347864 ubox
41 52 0.022868765 ubox
41 57 0.006263218 ubox
41 65 0.004192814 ubox
42 46 0.004467992 ubox
42 56 0.005795615 ubox
42 64 0.003957758 ubox
42 66 0.019142491 ubox
43 65 0.019583367 ubox
44 62 0.003715878 ubox
44 64 0.019645238 ubox
45 50 0.006240507 ubox
45 55 0.005755402 ubox
45 63 0.019539367 ubox
46 54 0.005501480 ubox
47 62 0.010260046 ubox
50 62 0.008249444 ubox
51 58 0.004847835 ubox
51 61 0.007830597 ubox
51 62 0.009261369 ubox
52 58 0.004970873 ubox
52 61 0.013130397 ubox
53 57 0.004610155 ubox
53 59 0.004391398 ubox
53 60 0.013899283 ubox
54 58 0.004314721 ubox
55 62 0.019282223 ubox
55 64 0.005208850 ubox
56 60 0.004994031 ubox
56 65 0.005547810 ubox
57 61 0.004992030 ubox
57 62 0.007161667 ubox
57 64 0.005589082 ubox
57 66 0.010202544 ubox
58 65 0.010944048 ubox
59 64 0.010295402 ubox
62 67 0.005476323 ubox
62 68 0.003658271 ubox
62 69 0.006813292 ubox
63 70 0.018898223 ubox
64 68 0.004050451 ubox
64 69 0.020197051 ubox
3 67 0.9746794 lbox
4 66 0.9746794 lbox
5 65 0.9746794 lbox
6 64 0.9746794 lbox
8 63 0.9746794 lbox
11 60 0.9746794 lbox
12 59 0.9746794 lbox
13 58 0.9746794 lbox
18 54 0.9746794 lbox
19 53 0.9746794 lbox
20 52 0.9746794 lbox
21 51 0.9746794 lbox
22 50 0.9746794 lbox
25 47 0.9746794 lbox
26 46 0.9746794 lbox
27 45 0.9746794 lbox
30 42 0.9746794 lbox
31 41 0.9746794 lbox
32 40 0.9746794 lbox
showpage
end
%%EOF
