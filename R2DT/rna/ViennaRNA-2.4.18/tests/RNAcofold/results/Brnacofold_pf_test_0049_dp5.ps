%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 17:25:02 2020
%%Title: RNA Dot Plot
%%BoundingBox: 66 211 518 662
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% Monomer B FreeEnergy= -26.881507340

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  % draw strand separators if required
  currentdict /nicks known {
    gsave
    % draw lines in red color
    0 1 1 sethsbcolor
    % draw with line thickness of 0.2
    0.2 setlinewidth
    nicks
    { 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
    } forall
    grestore
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (Brnacofold_pf_test_0049)
} def

/sequence { (\
GAUGCCAGUAAGCCUGGCACAUGAGCCAGAAGGAGCUUAGAACGUUUUAUCAUGAGGGCAUGACAGAGCGACGCUCCCUG\
) } def
/len { sequence length } bind def

72 216 translate
72 6 mul len 1 add div dup scale
/Helvetica findfont 0.95 scalefont setfont

drawseq
%data starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data

%draw the grid
drawgrid

%start of base pair probability data
%start of base pair probability data
1 5 0.008316900 ubox
1 6 0.046247318 ubox
1 9 0.003784443 ubox
1 13 0.011957228 ubox
1 14 0.003733534 ubox
1 20 0.584576539 ubox
1 22 0.032260884 ubox
1 26 0.011030763 ubox
1 27 0.009829101 ubox
1 72 0.003754586 ubox
1 76 0.009998665 ubox
1 77 0.004320730 ubox
1 78 0.029568921 ubox
1 79 0.005861661 ubox
2 9 0.036957017 ubox
2 15 0.003340082 ubox
2 22 0.056380057 ubox
2 61 0.005074201 ubox
2 75 0.009644955 ubox
2 79 0.007514586 ubox
3 7 0.003553613 ubox
3 8 0.037076314 ubox
3 10 0.012690790 ubox
3 11 0.012298140 ubox
3 12 0.009852890 ubox
3 19 0.826644726 ubox
3 21 0.033775055 ubox
3 24 0.003874260 ubox
3 30 0.003279978 ubox
3 60 0.005244305 ubox
3 80 0.003740890 ubox
4 9 0.011840413 ubox
4 13 0.275193624 ubox
4 18 0.893348311 ubox
4 20 0.015825643 ubox
4 26 0.003242755 ubox
4 59 0.005295396 ubox
4 74 0.009283903 ubox
4 78 0.006816852 ubox
5 12 0.275151562 ubox
5 17 0.893633096 ubox
5 25 0.003256190 ubox
5 58 0.005292455 ubox
5 73 0.009250531 ubox
5 80 0.006299454 ubox
6 12 0.024077650 ubox
6 16 0.893631195 ubox
6 57 0.005282265 ubox
6 80 0.123303517 ubox
7 15 0.893055995 ubox
7 79 0.125266952 ubox
8 13 0.051832186 ubox
8 14 0.887984259 ubox
8 78 0.124593887 ubox
9 30 0.004580514 ubox
9 31 0.003217191 ubox
9 39 0.015237481 ubox
9 80 0.004339315 ubox
10 38 0.016221168 ubox
10 79 0.004822367 ubox
11 37 0.016407967 ubox
11 75 0.018557347 ubox
11 79 0.022673454 ubox
12 36 0.016439973 ubox
12 74 0.018684239 ubox
12 78 0.023153362 ubox
13 29 0.013778408 ubox
13 35 0.016424072 ubox
13 73 0.018645761 ubox
13 80 0.003497395 ubox
14 29 0.446761634 ubox
15 28 0.448359156 ubox
16 27 0.448757216 ubox
17 26 0.448766813 ubox
18 25 0.448357461 ubox
20 25 0.058488519 ubox
20 29 0.035769786 ubox
20 40 0.016154683 ubox
20 62 0.003166427 ubox
20 80 0.011513979 ubox
21 61 0.003190767 ubox
21 79 0.010979718 ubox
22 28 0.043299130 ubox
22 29 0.010061769 ubox
22 30 0.014524844 ubox
22 31 0.020768671 ubox
22 39 0.047919194 ubox
22 60 0.003188096 ubox
22 80 0.003557913 ubox
23 27 0.047177350 ubox
23 36 0.008175441 ubox
23 38 0.052286600 ubox
23 59 0.003167800 ubox
23 76 0.012980469 ubox
23 78 0.012705707 ubox
24 37 0.052735874 ubox
24 75 0.013057383 ubox
24 79 0.050596315 ubox
25 36 0.052800373 ubox
25 74 0.013059902 ubox
25 78 0.051919260 ubox
26 33 0.011206079 ubox
26 35 0.052469773 ubox
26 73 0.012788288 ubox
26 80 0.033531659 ubox
27 32 0.013489178 ubox
27 33 0.032283089 ubox
27 40 0.003389927 ubox
27 80 0.747666743 ubox
28 37 0.005618788 ubox
28 79 0.760208785 ubox
29 36 0.006001139 ubox
29 78 0.752785279 ubox
29 79 0.016724453 ubox
30 38 0.010489969 ubox
30 79 0.170569501 ubox
31 37 0.011044380 ubox
31 79 0.181635087 ubox
32 36 0.010882246 ubox
32 48 0.003455694 ubox
32 76 0.004479384 ubox
32 77 0.982350068 ubox
32 78 0.153327280 ubox
33 47 0.003713423 ubox
33 76 0.992171640 ubox
33 77 0.108766220 ubox
34 46 0.003759542 ubox
34 75 0.997925663 ubox
35 45 0.003782261 ubox
35 74 0.998099309 ubox
35 76 0.006003823 ubox
36 44 0.003785903 ubox
36 73 0.996732500 ubox
37 41 0.015557966 ubox
37 42 0.018304988 ubox
37 70 0.006268156 ubox
37 71 0.239773836 ubox
37 73 0.019844823 ubox
38 42 0.012262726 ubox
38 70 0.091558766 ubox
38 71 0.461159814 ubox
38 73 0.007199274 ubox
39 75 0.007075798 ubox
40 69 0.013799524 ubox
40 72 0.393950725 ubox
40 74 0.009097034 ubox
40 76 0.009277454 ubox
41 75 0.009079375 ubox
43 66 0.005651022 ubox
43 68 0.004751751 ubox
43 70 0.989866260 ubox
43 73 0.004744242 ubox
44 64 0.003233660 ubox
44 69 0.999753177 ubox
44 72 0.005849590 ubox
45 66 0.004014721 ubox
45 67 0.007260919 ubox
45 68 0.999337305 ubox
45 71 0.005690984 ubox
46 65 0.004220767 ubox
46 66 0.008036054 ubox
46 67 0.998226560 ubox
46 68 0.006749577 ubox
46 70 0.004645312 ubox
47 65 0.008558887 ubox
47 66 0.996569322 ubox
47 67 0.009459637 ubox
48 65 0.933894759 ubox
48 66 0.011042868 ubox
50 63 0.988685555 ubox
51 62 0.999920931 ubox
52 61 0.999538882 ubox
53 60 0.999081726 ubox
54 59 0.994990916 ubox
66 76 0.008539851 ubox
67 75 0.008765722 ubox
68 74 0.008795606 ubox
69 73 0.008731807 ubox
72 80 0.003413820 ubox
74 80 0.003290263 ubox
3 19 0.9746794 lbox
4 18 0.9746794 lbox
5 17 0.9746794 lbox
6 16 0.9746794 lbox
7 15 0.9746794 lbox
8 14 0.9746794 lbox
27 80 0.9746794 lbox
28 79 0.9746794 lbox
29 78 0.9746794 lbox
32 77 0.9746794 lbox
33 76 0.9746794 lbox
34 75 0.9746794 lbox
35 74 0.9746794 lbox
36 73 0.9746794 lbox
43 70 0.9746794 lbox
44 69 0.9746794 lbox
45 68 0.9746794 lbox
46 67 0.9746794 lbox
47 66 0.9746794 lbox
48 65 0.9746794 lbox
50 63 0.9746794 lbox
51 62 0.9746794 lbox
52 61 0.9746794 lbox
53 60 0.9746794 lbox
54 59 0.9746794 lbox
showpage
end
%%EOF
