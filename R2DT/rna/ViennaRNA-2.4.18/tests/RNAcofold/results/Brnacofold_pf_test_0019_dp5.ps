%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 17:24:56 2020
%%Title: RNA Dot Plot
%%BoundingBox: 66 211 518 662
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% Monomer B FreeEnergy= -18.292018034

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  % draw strand separators if required
  currentdict /nicks known {
    gsave
    % draw lines in red color
    0 1 1 sethsbcolor
    % draw with line thickness of 0.2
    0.2 setlinewidth
    nicks
    { 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
    } forall
    grestore
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (Brnacofold_pf_test_0019)
} def

/sequence { (\
GCAUUCAUCCGUCGCAUUUCACGAAAUCUCCCACCGAACGACUGAACGCUACUAAGUGGGGGAGGACUACGGACGAUUAC\
) } def
/len { sequence length } bind def

72 216 translate
72 6 mul len 1 add div dup scale
/Helvetica findfont 0.95 scalefont setfont

drawseq
%data starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data

%draw the grid
drawgrid

%start of base pair probability data
%start of base pair probability data
1 6 0.025264992 ubox
1 9 0.006230270 ubox
1 10 0.009262233 ubox
1 12 0.006208983 ubox
1 13 0.003212712 ubox
1 15 0.031043642 ubox
1 74 0.018499658 ubox
1 77 0.015032452 ubox
1 78 0.041674203 ubox
1 80 0.145250220 ubox
2 11 0.007996932 ubox
2 14 0.031042247 ubox
2 72 0.008427776 ubox
2 75 0.012573433 ubox
3 8 0.004570639 ubox
3 12 0.017118054 ubox
3 77 0.142069268 ubox
3 78 0.316388083 ubox
4 11 0.016492241 ubox
4 73 0.008704637 ubox
4 75 0.010013812 ubox
4 76 0.129340308 ubox
4 79 0.033913935 ubox
5 65 0.003334523 ubox
5 69 0.004026998 ubox
5 72 0.008993573 ubox
5 73 0.007116904 ubox
5 75 0.098443681 ubox
5 76 0.853304560 ubox
5 79 0.023978347 ubox
6 11 0.009026142 ubox
6 64 0.003445136 ubox
6 71 0.009118199 ubox
6 72 0.007356750 ubox
6 75 0.907206688 ubox
7 77 0.091170809 ubox
7 78 0.053539677 ubox
8 24 0.003368817 ubox
8 66 0.018708832 ubox
8 73 0.942484416 ubox
8 76 0.097704189 ubox
8 79 0.008519327 ubox
9 65 0.019992945 ubox
9 72 0.955520933 ubox
9 75 0.070458383 ubox
10 23 0.020259241 ubox
10 64 0.019907445 ubox
10 71 0.955528886 ubox
10 75 0.259227180 ubox
11 20 0.009616279 ubox
11 22 0.027171216 ubox
11 67 0.071255496 ubox
11 70 0.949546255 ubox
11 74 0.270694668 ubox
11 77 0.097111940 ubox
11 78 0.005326495 ubox
11 80 0.005513027 ubox
12 16 0.003545694 ubox
12 21 0.027176738 ubox
12 24 0.325850460 ubox
12 25 0.015064316 ubox
12 26 0.007251263 ubox
12 65 0.017714311 ubox
12 66 0.090051442 ubox
12 69 0.865960981 ubox
12 72 0.033209411 ubox
12 73 0.268689292 ubox
12 76 0.102186988 ubox
12 79 0.005144348 ubox
13 23 0.456170845 ubox
13 64 0.035719962 ubox
13 65 0.101039941 ubox
13 71 0.061883085 ubox
13 72 0.263432769 ubox
13 75 0.103200248 ubox
14 18 0.008041211 ubox
14 19 0.013190332 ubox
14 20 0.044014939 ubox
14 22 0.454732330 ubox
14 27 0.003295007 ubox
14 28 0.007074631 ubox
14 67 0.579305243 ubox
14 68 0.106428622 ubox
14 70 0.080332828 ubox
14 74 0.102870682 ubox
15 23 0.074323298 ubox
15 64 0.124331669 ubox
15 65 0.201077421 ubox
15 71 0.092558300 ubox
15 72 0.032227180 ubox
15 75 0.004520989 ubox
16 27 0.105379906 ubox
16 68 0.124491963 ubox
16 77 0.015188954 ubox
17 21 0.020024148 ubox
17 23 0.010401467 ubox
17 24 0.053130667 ubox
17 25 0.082047850 ubox
17 26 0.131544214 ubox
17 63 0.023545536 ubox
17 64 0.149284225 ubox
17 65 0.073641452 ubox
17 66 0.153198516 ubox
17 69 0.041545386 ubox
17 71 0.011108159 ubox
17 72 0.006222037 ubox
17 73 0.023145782 ubox
17 75 0.004020129 ubox
17 76 0.016294728 ubox
18 23 0.052557844 ubox
18 24 0.093223129 ubox
18 25 0.138368429 ubox
18 26 0.037776121 ubox
18 62 0.010231866 ubox
18 63 0.065996928 ubox
18 64 0.082042435 ubox
18 65 0.157088177 ubox
18 66 0.396115343 ubox
18 69 0.021600336 ubox
18 71 0.010593663 ubox
18 72 0.024749803 ubox
18 73 0.039847890 ubox
18 75 0.016042619 ubox
18 76 0.003507771 ubox
19 23 0.085446216 ubox
19 24 0.122415139 ubox
19 25 0.040680039 ubox
19 26 0.021787828 ubox
19 61 0.006090939 ubox
19 62 0.044141146 ubox
19 63 0.045418495 ubox
19 64 0.148652561 ubox
19 65 0.404778585 ubox
19 66 0.289970518 ubox
19 69 0.019619400 ubox
19 71 0.023236598 ubox
19 72 0.040392691 ubox
19 73 0.084555478 ubox
19 75 0.003348819 ubox
19 76 0.005936105 ubox
20 60 0.003221691 ubox
20 61 0.040189223 ubox
20 62 0.037735778 ubox
20 64 0.406875367 ubox
20 65 0.293614705 ubox
20 71 0.042381427 ubox
20 72 0.085837192 ubox
20 75 0.006319332 ubox
21 27 0.007902030 ubox
21 68 0.075567005 ubox
22 60 0.003301260 ubox
22 61 0.011596807 ubox
22 62 0.006434227 ubox
22 64 0.280929476 ubox
22 65 0.026189433 ubox
22 71 0.102893213 ubox
23 27 0.006248653 ubox
23 28 0.015536186 ubox
23 30 0.004913189 ubox
23 67 0.155418436 ubox
23 68 0.060448338 ubox
23 70 0.102873918 ubox
24 29 0.005048609 ubox
24 68 0.067378483 ubox
25 68 0.044160380 ubox
26 68 0.033643685 ubox
27 62 0.011628166 ubox
27 63 0.886557274 ubox
27 64 0.017055253 ubox
27 65 0.291331855 ubox
27 66 0.063348329 ubox
28 61 0.018869513 ubox
28 62 0.907718554 ubox
28 64 0.409764548 ubox
28 65 0.049726914 ubox
29 60 0.003375461 ubox
29 61 0.908145796 ubox
29 62 0.003455166 ubox
29 63 0.413002258 ubox
29 64 0.023769916 ubox
29 66 0.019609275 ubox
30 60 0.910047009 ubox
30 61 0.007433099 ubox
30 62 0.413622172 ubox
30 65 0.020567126 ubox
31 59 0.910095409 ubox
31 60 0.007793556 ubox
31 61 0.413581929 ubox
31 62 0.008497008 ubox
31 64 0.020561150 ubox
31 65 0.003854499 ubox
32 58 0.910084275 ubox
32 59 0.007926223 ubox
32 60 0.413077172 ubox
32 61 0.008914485 ubox
32 62 0.005385056 ubox
32 64 0.003898520 ubox
33 57 0.909256322 ubox
34 40 0.009629470 ubox
34 44 0.007733243 ubox
34 56 0.904186201 ubox
34 58 0.018995781 ubox
34 59 0.403148753 ubox
34 60 0.011643338 ubox
34 61 0.020287912 ubox
34 62 0.004578080 ubox
35 40 0.038565921 ubox
35 44 0.089707209 ubox
35 48 0.181597582 ubox
35 56 0.074392501 ubox
35 58 0.401818127 ubox
35 59 0.014203670 ubox
35 60 0.020296566 ubox
35 61 0.004576218 ubox
36 42 0.028202044 ubox
36 43 0.074717667 ubox
36 47 0.180592662 ubox
36 49 0.028622927 ubox
36 50 0.021381951 ubox
36 52 0.454828890 ubox
36 53 0.072169582 ubox
36 57 0.300949174 ubox
37 43 0.016342756 ubox
37 50 0.365488362 ubox
37 53 0.276813026 ubox
37 57 0.031324583 ubox
38 43 0.016644047 ubox
38 50 0.277476521 ubox
38 53 0.055330629 ubox
38 57 0.121913699 ubox
39 44 0.122506298 ubox
39 48 0.692446815 ubox
39 56 0.145579660 ubox
39 58 0.009078624 ubox
39 59 0.057859493 ubox
40 47 0.685038451 ubox
40 49 0.223963680 ubox
40 50 0.087551823 ubox
40 52 0.092473433 ubox
40 53 0.041671380 ubox
40 57 0.014525762 ubox
41 50 0.104496363 ubox
41 53 0.052597181 ubox
41 57 0.172261319 ubox
42 48 0.260055266 ubox
42 56 0.193577393 ubox
42 59 0.005080694 ubox
43 48 0.039716528 ubox
43 51 0.082480958 ubox
43 54 0.040204968 ubox
43 55 0.191722929 ubox
43 56 0.004934496 ubox
43 58 0.003997277 ubox
44 49 0.210687109 ubox
44 50 0.081947227 ubox
44 52 0.065764846 ubox
44 53 0.046683477 ubox
45 50 0.044260952 ubox
45 53 0.033246967 ubox
45 57 0.003623495 ubox
46 50 0.013940515 ubox
46 53 0.022917855 ubox
46 57 0.066769194 ubox
47 56 0.075680616 ubox
47 58 0.058939261 ubox
47 61 0.004178337 ubox
48 52 0.019717047 ubox
48 53 0.006352555 ubox
48 57 0.107613782 ubox
49 56 0.119320569 ubox
49 59 0.036045283 ubox
50 54 0.007687515 ubox
50 55 0.114552436 ubox
50 56 0.004784334 ubox
50 58 0.036212786 ubox
51 57 0.038447624 ubox
52 56 0.038652523 ubox
52 59 0.003697867 ubox
53 58 0.003472945 ubox
61 67 0.003651665 ubox
61 68 0.004606063 ubox
62 67 0.005077906 ubox
63 68 0.009193286 ubox
64 68 0.012235592 ubox
64 70 0.045395118 ubox
64 74 0.007696318 ubox
65 70 0.021608002 ubox
65 74 0.005357176 ubox
67 71 0.010223531 ubox
67 72 0.010922052 ubox
71 80 0.003417544 ubox
75 80 0.009274592 ubox
5 76 0.9746794 lbox
6 75 0.9746794 lbox
8 73 0.9746794 lbox
9 72 0.9746794 lbox
10 71 0.9746794 lbox
11 70 0.9746794 lbox
12 69 0.9746794 lbox
27 63 0.9746794 lbox
28 62 0.9746794 lbox
29 61 0.9746794 lbox
30 60 0.9746794 lbox
31 59 0.9746794 lbox
32 58 0.9746794 lbox
33 57 0.9746794 lbox
34 56 0.9746794 lbox
showpage
end
%%EOF
