%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 17:21:25 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  % draw strand separators if required
  currentdict /nicks known {
    gsave
    % draw lines in red color
    0 1 1 sethsbcolor
    % draw with line thickness of 0.2
    0.2 setlinewidth
    nicks
    { 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
    } forall
    grestore
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (rnafold_cmd_test_0027)
} def

/sequence { (\
UCCGGGCUUUGUCCAUCUCCGAAAGUCUCAGGAUUUGCCCUGACCCCAUACAGGCCGAGGGGUGGGAUCCUACCUAGACGACCUUGAGAUCAUGAAUUCA\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
[ (Protein binding)
  [ 22 0.978214741 0.6000 0.8000 0.9500]
  [ 23 0.978214741 0.6000 0.8000 0.9500]
  [ 24 0.978214741 0.6000 0.8000 0.9500]
  [ 38 0.968972743 0.6000 0.8000 0.9500]
  [ 39 0.968972743 0.6000 0.8000 0.9500]
  [ 40 0.968972743 0.6000 0.8000 0.9500]
  [ 44 0.720187366 0.6000 0.8000 0.9500]
  [ 45 0.965256155 0.6000 0.8000 0.9500]
  [ 46 0.965256155 0.6000 0.8000 0.9500]
  [ 47 0.642689288 0.6000 0.8000 0.9500]
]
] def

/leftData [
[ (Protein binding)
  [ 22 0.978214741 0.6000 0.8000 0.9500]
  [ 23 0.978214741 0.6000 0.8000 0.9500]
  [ 24 0.978214741 0.6000 0.8000 0.9500]
  [ 38 0.968972743 0.6000 0.8000 0.9500]
  [ 39 0.968972743 0.6000 0.8000 0.9500]
  [ 40 0.968972743 0.6000 0.8000 0.9500]
  [ 44 0.720187366 0.6000 0.8000 0.9500]
  [ 45 0.965256155 0.6000 0.8000 0.9500]
  [ 46 0.965256155 0.6000 0.8000 0.9500]
  [ 47 0.642689288 0.6000 0.8000 0.9500]
]
] def

/bottomData [
[ (Protein binding)
  [ 22 0.978214741 0.6000 0.8000 0.9500]
  [ 23 0.978214741 0.6000 0.8000 0.9500]
  [ 24 0.978214741 0.6000 0.8000 0.9500]
  [ 38 0.968972743 0.6000 0.8000 0.9500]
  [ 39 0.968972743 0.6000 0.8000 0.9500]
  [ 40 0.968972743 0.6000 0.8000 0.9500]
  [ 44 0.720187366 0.6000 0.8000 0.9500]
  [ 45 0.965256155 0.6000 0.8000 0.9500]
  [ 46 0.965256155 0.6000 0.8000 0.9500]
  [ 47 0.642689288 0.6000 0.8000 0.9500]
]
] def

/rightData [
[ (Protein binding)
  [ 22 0.978214741 0.6000 0.8000 0.9500]
  [ 23 0.978214741 0.6000 0.8000 0.9500]
  [ 24 0.978214741 0.6000 0.8000 0.9500]
  [ 38 0.968972743 0.6000 0.8000 0.9500]
  [ 39 0.968972743 0.6000 0.8000 0.9500]
  [ 40 0.968972743 0.6000 0.8000 0.9500]
  [ 44 0.720187366 0.6000 0.8000 0.9500]
  [ 45 0.965256155 0.6000 0.8000 0.9500]
  [ 46 0.965256155 0.6000 0.8000 0.9500]
  [ 47 0.642689288 0.6000 0.8000 0.9500]
]
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 33 0.974070735 ubox
1 37 0.004600350 ubox
1 60 0.010961657 ubox
1 61 0.008249098 ubox
1 89 0.225541461 ubox
1 95 0.009609216 ubox
2 32 0.974081596 ubox
2 59 0.010961883 ubox
2 60 0.008253073 ubox
2 88 0.225550917 ubox
2 94 0.009591313 ubox
3 21 0.004423513 ubox
3 31 0.974074284 ubox
3 57 0.010964897 ubox
3 59 0.008253937 ubox
3 86 0.225743746 ubox
4 20 0.008963690 ubox
4 27 0.021019651 ubox
4 28 0.699190533 ubox
4 29 0.579354525 ubox
4 56 0.010756876 ubox
4 83 0.019292613 ubox
4 84 0.081654002 ubox
4 85 0.208306327 ubox
5 19 0.008567063 ubox
5 26 0.019052505 ubox
5 27 0.853122158 ubox
5 28 0.429421967 ubox
5 29 0.099468445 ubox
5 55 0.010530786 ubox
5 56 0.008776385 ubox
5 82 0.019569955 ubox
5 83 0.116574232 ubox
5 84 0.191811240 ubox
6 20 0.003947265 ubox
6 26 0.855016092 ubox
6 27 0.426973720 ubox
6 28 0.073622814 ubox
6 29 0.017034966 ubox
6 55 0.009056006 ubox
6 82 0.116706521 ubox
6 83 0.191112215 ubox
7 21 0.031007728 ubox
7 25 0.910982011 ubox
7 53 0.010283910 ubox
7 54 0.009313743 ubox
7 80 0.057060092 ubox
8 15 0.004617144 ubox
8 21 0.029634812 ubox
8 23 0.013016256 ubox
8 24 0.206245849 ubox
8 25 0.092016951 ubox
8 52 0.009899080 ubox
8 53 0.009202300 ubox
8 80 0.022311303 ubox
8 81 0.105900472 ubox
9 21 0.057328808 ubox
9 22 0.018057502 ubox
9 23 0.199134435 ubox
9 24 0.006535811 ubox
9 25 0.046767798 ubox
9 52 0.008097658 ubox
9 80 0.105470503 ubox
9 81 0.007098567 ubox
10 21 0.035838249 ubox
10 22 0.161020107 ubox
10 23 0.006241723 ubox
10 25 0.008994540 ubox
10 80 0.005702516 ubox
11 17 0.005873667 ubox
11 19 0.009780642 ubox
11 20 0.082698678 ubox
11 82 0.003867888 ubox
12 21 0.043803156 ubox
12 22 0.006828402 ubox
12 81 0.003439181 ubox
13 21 0.035252449 ubox
13 80 0.003519791 ubox
14 21 0.043494092 ubox
17 21 0.003595413 ubox
20 25 0.038117909 ubox
20 80 0.010059830 ubox
21 26 0.007487787 ubox
21 27 0.008847353 ubox
21 51 0.003458721 ubox
21 79 0.008041990 ubox
21 82 0.042172676 ubox
21 83 0.007549343 ubox
25 46 0.006364336 ubox
25 73 0.004147476 ubox
25 79 0.214238572 ubox
25 82 0.069420984 ubox
26 72 0.004127376 ubox
26 78 0.214464390 ubox
26 81 0.069638348 ubox
27 77 0.214477991 ubox
27 80 0.069619499 ubox
28 43 0.013401289 ubox
28 72 0.008712717 ubox
28 76 0.209152261 ubox
28 78 0.068883896 ubox
29 42 0.013754717 ubox
29 77 0.069126201 ubox
30 41 0.013860348 ubox
30 71 0.154117377 ubox
30 75 0.157385568 ubox
31 40 0.013874846 ubox
31 70 0.160332815 ubox
31 73 0.010740300 ubox
31 74 0.158317895 ubox
31 75 0.003379027 ubox
32 39 0.013840821 ubox
32 69 0.160449132 ubox
32 73 0.157997197 ubox
32 74 0.003593055 ubox
33 68 0.160265664 ubox
33 71 0.047240590 ubox
34 43 0.006952590 ubox
34 58 0.003897459 ubox
34 59 0.021276184 ubox
34 66 0.036390328 ubox
34 67 0.153921655 ubox
34 72 0.041799994 ubox
35 42 0.007590328 ubox
35 43 0.004134695 ubox
35 57 0.004035966 ubox
35 58 0.028228629 ubox
35 65 0.065499507 ubox
35 66 0.105257910 ubox
35 67 0.008043467 ubox
35 72 0.007153180 ubox
36 42 0.004414218 ubox
36 43 0.004221504 ubox
36 57 0.029011465 ubox
36 64 0.084659967 ubox
36 65 0.070378719 ubox
36 66 0.005259838 ubox
36 67 0.020648093 ubox
36 72 0.004967193 ubox
37 44 0.003441770 ubox
37 55 0.029718221 ubox
37 56 0.029413634 ubox
37 63 0.112506457 ubox
37 68 0.031739571 ubox
37 69 0.040175421 ubox
37 70 0.016006673 ubox
37 71 0.004598401 ubox
38 42 0.003218113 ubox
38 54 0.024627221 ubox
38 61 0.026045063 ubox
38 62 0.120220725 ubox
38 64 0.004624372 ubox
38 65 0.020046238 ubox
38 66 0.160887404 ubox
39 53 0.017786225 ubox
39 54 0.041174699 ubox
39 60 0.026924564 ubox
39 61 0.120059244 ubox
39 62 0.005567663 ubox
39 64 0.020104878 ubox
39 65 0.161793976 ubox
39 66 0.074656560 ubox
39 94 0.007159204 ubox
40 53 0.044688104 ubox
40 59 0.027692466 ubox
40 60 0.119879231 ubox
40 61 0.005557014 ubox
40 64 0.161208464 ubox
40 65 0.075185772 ubox
40 66 0.059760283 ubox
40 94 0.004865534 ubox
41 48 0.014296325 ubox
41 52 0.048058294 ubox
41 57 0.009585678 ubox
41 58 0.027675322 ubox
41 59 0.118555658 ubox
41 60 0.005476759 ubox
41 64 0.071245749 ubox
41 65 0.064012644 ubox
41 92 0.082672361 ubox
41 95 0.003814818 ubox
41 100 0.014839632 ubox
42 47 0.015830001 ubox
42 51 0.048255831 ubox
42 55 0.010819091 ubox
42 56 0.019980197 ubox
42 63 0.034083965 ubox
42 91 0.091695928 ubox
42 99 0.019474136 ubox
43 49 0.005985908 ubox
43 63 0.179551166 ubox
43 90 0.090243848 ubox
43 93 0.003222895 ubox
43 98 0.019105625 ubox
44 53 0.003817573 ubox
44 54 0.032704553 ubox
44 57 0.029543179 ubox
44 61 0.011149058 ubox
44 62 0.191707841 ubox
44 88 0.014186403 ubox
44 94 0.003499540 ubox
45 53 0.032623091 ubox
45 54 0.064998627 ubox
45 57 0.004634383 ubox
45 60 0.011158601 ubox
45 61 0.191735053 ubox
45 88 0.080726433 ubox
45 94 0.003583589 ubox
46 53 0.064938796 ubox
46 54 0.099810808 ubox
46 59 0.011114035 ubox
46 60 0.191733208 ubox
46 65 0.003179994 ubox
46 86 0.009488563 ubox
46 88 0.019934038 ubox
46 94 0.003179531 ubox
47 53 0.101195939 ubox
47 54 0.011832733 ubox
47 57 0.008868426 ubox
47 59 0.191583901 ubox
47 64 0.003205499 ubox
47 86 0.240293488 ubox
47 88 0.169056663 ubox
47 94 0.167487041 ubox
48 84 0.004932591 ubox
48 85 0.238738466 ubox
48 90 0.107111130 ubox
48 93 0.167287376 ubox
48 97 0.060030671 ubox
48 98 0.007142172 ubox
49 54 0.006010261 ubox
49 57 0.062309354 ubox
49 58 0.052972800 ubox
49 86 0.166565556 ubox
49 87 0.135133786 ubox
49 88 0.042862450 ubox
49 89 0.115448426 ubox
49 92 0.157653998 ubox
49 94 0.013820618 ubox
49 95 0.026602588 ubox
49 96 0.063126213 ubox
50 84 0.012012732 ubox
50 85 0.177276199 ubox
50 90 0.045841090 ubox
50 93 0.015858316 ubox
50 97 0.004760492 ubox
50 98 0.003648912 ubox
51 57 0.059887962 ubox
51 86 0.509003402 ubox
51 88 0.083762844 ubox
51 94 0.156486690 ubox
52 75 0.007184532 ubox
52 84 0.799353690 ubox
52 85 0.387955624 ubox
52 90 0.023893750 ubox
52 93 0.155318182 ubox
53 74 0.007491875 ubox
53 79 0.005683130 ubox
53 82 0.017124770 ubox
53 83 0.902215428 ubox
53 84 0.202044926 ubox
53 90 0.022896881 ubox
53 91 0.187143852 ubox
53 99 0.005221910 ubox
54 63 0.006663130 ubox
54 73 0.007476027 ubox
54 79 0.007224296 ubox
54 82 0.902139550 ubox
54 83 0.198129396 ubox
54 90 0.185937921 ubox
54 91 0.023616196 ubox
54 98 0.004973428 ubox
55 62 0.007110253 ubox
55 77 0.004290313 ubox
55 80 0.218415371 ubox
55 86 0.012130852 ubox
55 88 0.212986330 ubox
55 94 0.003433626 ubox
56 61 0.007115204 ubox
56 77 0.017298095 ubox
56 80 0.883207992 ubox
56 86 0.291233493 ubox
56 88 0.046601084 ubox
57 79 0.874279236 ubox
57 82 0.008196796 ubox
57 85 0.292570530 ubox
58 71 0.008938108 ubox
58 75 0.021089105 ubox
58 84 0.292909705 ubox
58 85 0.008794483 ubox
59 70 0.009042893 ubox
59 71 0.003541480 ubox
59 74 0.020586366 ubox
59 75 0.069546156 ubox
59 79 0.026608195 ubox
59 82 0.004130331 ubox
59 83 0.292973544 ubox
59 84 0.008881159 ubox
59 85 0.047877322 ubox
60 69 0.009034150 ubox
60 70 0.003923684 ubox
60 71 0.003888384 ubox
60 73 0.020001633 ubox
60 74 0.061589505 ubox
60 75 0.908847178 ubox
60 79 0.015091973 ubox
60 82 0.287407338 ubox
60 83 0.008974697 ubox
60 84 0.048956416 ubox
61 68 0.008355417 ubox
61 69 0.004145639 ubox
61 70 0.012533011 ubox
61 71 0.004296490 ubox
61 73 0.051223346 ubox
61 74 0.951742452 ubox
61 75 0.009807550 ubox
61 79 0.031852818 ubox
61 82 0.008618865 ubox
61 83 0.049256666 ubox
62 68 0.004027303 ubox
62 69 0.012608128 ubox
62 70 0.004803571 ubox
62 71 0.003882157 ubox
62 73 0.952481975 ubox
62 74 0.007456138 ubox
62 79 0.085724912 ubox
62 82 0.049309907 ubox
63 67 0.003801173 ubox
63 72 0.952526812 ubox
63 76 0.166869453 ubox
63 77 0.008179975 ubox
63 78 0.074376250 ubox
63 80 0.007906810 ubox
63 81 0.048258134 ubox
64 69 0.008063006 ubox
64 70 0.107221833 ubox
64 71 0.946753074 ubox
64 73 0.003804423 ubox
64 74 0.031591306 ubox
64 75 0.183331444 ubox
64 79 0.008770516 ubox
64 83 0.004903707 ubox
64 84 0.008126259 ubox
65 69 0.106595362 ubox
65 70 0.942723852 ubox
65 71 0.016403328 ubox
65 73 0.031621829 ubox
65 74 0.185164610 ubox
65 75 0.011429219 ubox
65 79 0.044662410 ubox
65 82 0.004906859 ubox
65 83 0.008823571 ubox
66 70 0.022147013 ubox
66 73 0.184482614 ubox
66 74 0.011738290 ubox
66 79 0.003886446 ubox
66 82 0.008830284 ubox
66 91 0.025903635 ubox
67 71 0.016196760 ubox
67 90 0.026051490 ubox
68 72 0.013753978 ubox
68 76 0.022467029 ubox
68 77 0.003537335 ubox
68 78 0.012043097 ubox
68 81 0.008070369 ubox
68 89 0.026065468 ubox
69 77 0.012269708 ubox
69 80 0.008088990 ubox
69 88 0.025301858 ubox
70 77 0.008434343 ubox
70 86 0.017761962 ubox
70 88 0.006711893 ubox
71 76 0.008320376 ubox
71 78 0.003604431 ubox
71 86 0.009118458 ubox
71 87 0.008989263 ubox
72 85 0.009146203 ubox
73 86 0.007975354 ubox
74 80 0.003235018 ubox
74 86 0.005886129 ubox
76 84 0.016669111 ubox
76 85 0.003705249 ubox
77 82 0.003755231 ubox
77 83 0.017188128 ubox
77 84 0.003367615 ubox
77 91 0.014189350 ubox
77 99 0.007825983 ubox
78 90 0.014103204 ubox
78 98 0.007636066 ubox
79 86 0.006016394 ubox
79 88 0.014424166 ubox
80 85 0.004657887 ubox
80 91 0.011601753 ubox
80 99 0.010293166 ubox
81 90 0.011443101 ubox
81 98 0.010141714 ubox
82 88 0.004842692 ubox
82 94 0.004271928 ubox
83 88 0.007183992 ubox
83 94 0.016802949 ubox
84 94 0.005027681 ubox
84 95 0.013812753 ubox
84 96 0.022680589 ubox
84 100 0.004511822 ubox
85 89 0.005062528 ubox
85 92 0.121292447 ubox
85 94 0.018077892 ubox
85 95 0.041213429 ubox
85 96 0.011207829 ubox
85 100 0.266390315 ubox
86 90 0.004073885 ubox
86 91 0.134235174 ubox
86 93 0.010880181 ubox
86 98 0.020417140 ubox
86 99 0.339548761 ubox
87 93 0.048692343 ubox
87 97 0.026122346 ubox
87 98 0.335587275 ubox
88 93 0.008208170 ubox
88 97 0.300662129 ubox
88 98 0.073540300 ubox
88 99 0.476382972 ubox
89 93 0.013249127 ubox
89 97 0.094329316 ubox
89 98 0.475020556 ubox
90 94 0.015303755 ubox
90 95 0.084229936 ubox
90 96 0.105201803 ubox
90 100 0.005152368 ubox
92 97 0.013538867 ubox
92 98 0.021395857 ubox
93 100 0.126976114 ubox
94 98 0.006355778 ubox
94 99 0.156246149 ubox
1 33 0.9500000 lbox
2 32 0.9500000 lbox
3 31 0.9500000 lbox
4 28 0.9500000 lbox
5 27 0.9500000 lbox
6 26 0.9500000 lbox
7 25 0.9500000 lbox
52 84 0.9500000 lbox
53 83 0.9500000 lbox
54 82 0.9500000 lbox
56 80 0.9500000 lbox
57 79 0.9500000 lbox
60 75 0.9500000 lbox
61 74 0.9500000 lbox
62 73 0.9500000 lbox
63 72 0.9500000 lbox
64 71 0.9500000 lbox
65 70 0.9500000 lbox
showpage
end
%%EOF
