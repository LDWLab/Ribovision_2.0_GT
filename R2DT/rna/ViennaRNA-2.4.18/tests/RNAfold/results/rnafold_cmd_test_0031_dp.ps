%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 17:21:25 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  % draw strand separators if required
  currentdict /nicks known {
    gsave
    % draw lines in red color
    0 1 1 sethsbcolor
    % draw with line thickness of 0.2
    0.2 setlinewidth
    nicks
    { 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
    } forall
    grestore
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (rnafold_cmd_test_0031)
} def

/sequence { (\
GGGCCUGGUACAAGAUUCAAUCUAACGCACGCGGCCCUCCCCCACCGGUAUAGUUGAAUCGGGCGGUAGCAAGAUUUUAUGAACACGCCGCCGGCGGCGU\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
[ (Protein binding)
  [ 39 0.772580504 0.6000 0.8000 0.9500]
  [ 40 0.892859459 0.6000 0.8000 0.9500]
  [ 41 0.994062006 0.6000 0.8000 0.9500]
  [ 42 0.625522614 0.6000 0.8000 0.9500]
  [ 43 0.436991036 0.6000 0.8000 0.9500]
]
] def

/leftData [
[ (Protein binding)
  [ 39 0.772580504 0.6000 0.8000 0.9500]
  [ 40 0.892859459 0.6000 0.8000 0.9500]
  [ 41 0.994062006 0.6000 0.8000 0.9500]
  [ 42 0.625522614 0.6000 0.8000 0.9500]
  [ 43 0.436991036 0.6000 0.8000 0.9500]
]
] def

/bottomData [
[ (Protein binding)
  [ 39 0.772580504 0.6000 0.8000 0.9500]
  [ 40 0.892859459 0.6000 0.8000 0.9500]
  [ 41 0.994062006 0.6000 0.8000 0.9500]
  [ 42 0.625522614 0.6000 0.8000 0.9500]
  [ 43 0.436991036 0.6000 0.8000 0.9500]
]
] def

/rightData [
[ (Protein binding)
  [ 39 0.772580504 0.6000 0.8000 0.9500]
  [ 40 0.892859459 0.6000 0.8000 0.9500]
  [ 41 0.994062006 0.6000 0.8000 0.9500]
  [ 42 0.625522614 0.6000 0.8000 0.9500]
  [ 43 0.436991036 0.6000 0.8000 0.9500]
]
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 37 0.999951391 ubox
1 38 0.008676590 ubox
1 39 0.003633155 ubox
2 36 0.999969244 ubox
2 37 0.007427105 ubox
3 35 0.999982267 ubox
3 36 0.005648288 ubox
4 33 0.003985123 ubox
4 34 0.999525494 ubox
5 31 0.008510494 ubox
5 33 0.998614335 ubox
5 34 0.030283238 ubox
6 20 0.003694665 ubox
6 24 0.069145367 ubox
6 25 0.006144058 ubox
6 27 0.049667023 ubox
6 29 0.199195636 ubox
6 31 0.589573173 ubox
6 33 0.042655776 ubox
7 22 0.025384812 ubox
7 23 0.070330545 ubox
7 26 0.050731011 ubox
7 28 0.201827084 ubox
7 30 0.598312417 ubox
7 32 0.183244322 ubox
8 21 0.026739621 ubox
8 22 0.070864780 ubox
8 26 0.174324719 ubox
8 28 0.446867453 ubox
8 30 0.722286398 ubox
8 32 0.070922792 ubox
9 20 0.028382961 ubox
9 24 0.011533256 ubox
9 25 0.170111912 ubox
9 27 0.435846525 ubox
9 29 0.693908431 ubox
9 31 0.070225516 ubox
10 21 0.003606982 ubox
10 23 0.009056733 ubox
11 27 0.173259432 ubox
12 21 0.006610588 ubox
12 23 0.008648594 ubox
13 21 0.012954279 ubox
13 23 0.055311414 ubox
14 21 0.008314283 ubox
14 22 0.087289556 ubox
14 23 0.024890818 ubox
14 26 0.044148893 ubox
14 28 0.015254458 ubox
15 21 0.046918586 ubox
15 23 0.031667406 ubox
16 20 0.018417264 ubox
16 24 0.011577204 ubox
16 25 0.007072451 ubox
17 24 0.005457310 ubox
18 27 0.011220647 ubox
21 25 0.005535422 ubox
21 27 0.007012064 ubox
21 29 0.005553892 ubox
22 27 0.035735164 ubox
22 31 0.007787869 ubox
23 27 0.004765014 ubox
23 29 0.004402416 ubox
26 31 0.006580443 ubox
26 33 0.003204747 ubox
27 32 0.007162779 ubox
38 50 0.005364532 ubox
38 68 0.006216788 ubox
38 69 0.003351815 ubox
38 74 0.003707480 ubox
38 99 0.005890868 ubox
39 48 0.018921424 ubox
39 66 0.008761823 ubox
39 69 0.005976854 ubox
39 73 0.003949277 ubox
39 97 0.014449072 ubox
39 99 0.014222833 ubox
40 47 0.019190095 ubox
40 48 0.018881340 ubox
40 65 0.008790371 ubox
40 66 0.022653737 ubox
40 69 0.003223227 ubox
40 96 0.014589266 ubox
40 97 0.020313308 ubox
40 99 0.044167876 ubox
41 47 0.019041160 ubox
41 48 0.020137792 ubox
41 63 0.005373784 ubox
41 65 0.022723863 ubox
41 66 0.028575474 ubox
41 94 0.005794074 ubox
41 96 0.020429641 ubox
41 97 0.009291188 ubox
41 99 0.043826308 ubox
42 47 0.039132302 ubox
42 48 0.111243253 ubox
42 53 0.004480565 ubox
42 56 0.009027531 ubox
42 62 0.005734829 ubox
42 63 0.006655470 ubox
42 65 0.044606279 ubox
42 66 0.190578481 ubox
42 69 0.011572953 ubox
42 81 0.006133719 ubox
42 93 0.005835665 ubox
42 94 0.029592989 ubox
42 96 0.012302111 ubox
42 97 0.593064138 ubox
42 99 0.011925124 ubox
43 47 0.112770888 ubox
43 48 0.028379359 ubox
43 53 0.009444046 ubox
43 56 0.051763586 ubox
43 61 0.005440048 ubox
43 62 0.005171531 ubox
43 63 0.041751909 ubox
43 65 0.192470356 ubox
43 66 0.006891824 ubox
43 69 0.010710194 ubox
43 81 0.022890386 ubox
43 93 0.029769195 ubox
43 96 0.602983234 ubox
43 97 0.019818654 ubox
43 99 0.015691810 ubox
44 49 0.006305776 ubox
44 51 0.007484213 ubox
44 54 0.032320338 ubox
44 55 0.051519263 ubox
44 67 0.040389395 ubox
44 80 0.020839921 ubox
45 53 0.034555656 ubox
45 56 0.004570755 ubox
45 62 0.356538316 ubox
45 63 0.056218080 ubox
45 66 0.042193337 ubox
45 81 0.012093951 ubox
45 87 0.005284314 ubox
45 93 0.003380027 ubox
45 94 0.607592421 ubox
45 97 0.021513700 ubox
46 53 0.070574326 ubox
46 56 0.023661259 ubox
46 61 0.358778583 ubox
46 62 0.048362854 ubox
46 65 0.042200033 ubox
46 81 0.047060414 ubox
46 87 0.044120358 ubox
46 90 0.033136801 ubox
46 93 0.607659615 ubox
46 96 0.021551921 ubox
47 51 0.007669178 ubox
47 54 0.009549248 ubox
47 55 0.023468454 ubox
47 60 0.359910400 ubox
47 64 0.041744903 ubox
47 70 0.017262232 ubox
47 78 0.003917994 ubox
47 80 0.040372810 ubox
47 84 0.168601651 ubox
47 86 0.058725640 ubox
47 88 0.005435081 ubox
47 89 0.040926041 ubox
47 92 0.607502751 ubox
47 95 0.021419850 ubox
48 54 0.019542497 ubox
48 55 0.009462942 ubox
48 59 0.358391307 ubox
48 60 0.036283634 ubox
48 64 0.005562677 ubox
48 70 0.003193285 ubox
48 78 0.005157041 ubox
48 80 0.050041777 ubox
48 84 0.469050677 ubox
48 86 0.037191445 ubox
48 88 0.041655550 ubox
48 91 0.607387284 ubox
49 53 0.006183612 ubox
49 56 0.024875377 ubox
49 57 0.011649253 ubox
49 58 0.355959229 ubox
49 62 0.030056450 ubox
49 63 0.007682164 ubox
49 68 0.017473781 ubox
49 79 0.054848625 ubox
49 81 0.218289726 ubox
49 82 0.040118982 ubox
49 83 0.459340594 ubox
49 85 0.038321766 ubox
49 87 0.041644309 ubox
49 90 0.596145441 ubox
49 93 0.009604756 ubox
50 54 0.006165866 ubox
50 55 0.038074534 ubox
50 59 0.025320340 ubox
50 67 0.017586484 ubox
50 77 0.003967048 ubox
50 78 0.055162194 ubox
50 80 0.256752320 ubox
50 100 0.003864240 ubox
51 56 0.058874530 ubox
51 57 0.029282892 ubox
51 58 0.025932878 ubox
51 61 0.004886793 ubox
51 66 0.016083589 ubox
51 79 0.259398308 ubox
51 81 0.284526967 ubox
51 82 0.125167146 ubox
51 83 0.034972560 ubox
51 85 0.047267342 ubox
51 87 0.049411335 ubox
51 90 0.005722196 ubox
51 99 0.003810812 ubox
52 59 0.010670639 ubox
52 76 0.005103517 ubox
52 77 0.006297342 ubox
52 78 0.256994336 ubox
52 80 0.286596151 ubox
53 59 0.007448877 ubox
53 60 0.021074136 ubox
53 64 0.017869543 ubox
53 75 0.004577945 ubox
53 76 0.004720009 ubox
53 77 0.129144189 ubox
53 78 0.025617653 ubox
53 80 0.422547528 ubox
53 84 0.443120480 ubox
53 86 0.344041831 ubox
53 88 0.119351665 ubox
53 89 0.019711515 ubox
53 98 0.031432676 ubox
54 58 0.007381031 ubox
54 63 0.017845249 ubox
54 74 0.003951664 ubox
54 79 0.434120014 ubox
54 81 0.030304894 ubox
54 82 0.089074710 ubox
54 83 0.442339207 ubox
54 85 0.316186958 ubox
54 87 0.114012202 ubox
54 97 0.031446880 ubox
55 61 0.003236714 ubox
55 62 0.017099660 ubox
55 73 0.003567970 ubox
55 79 0.211217006 ubox
55 81 0.113004181 ubox
55 82 0.434634858 ubox
55 83 0.085038772 ubox
55 85 0.096838161 ubox
55 87 0.021842518 ubox
55 96 0.031334431 ubox
55 99 0.003793491 ubox
56 60 0.003338119 ubox
56 75 0.003805199 ubox
56 76 0.030967813 ubox
56 77 0.812978567 ubox
56 78 0.193747487 ubox
56 80 0.038658787 ubox
56 84 0.116529797 ubox
56 86 0.024265908 ubox
56 95 0.031201262 ubox
56 98 0.005356535 ubox
57 75 0.022778570 ubox
57 76 0.875256875 ubox
57 77 0.159446831 ubox
57 78 0.016415114 ubox
57 80 0.124356910 ubox
58 75 0.896195675 ubox
58 76 0.113526035 ubox
58 77 0.011922950 ubox
58 78 0.007692421 ubox
58 80 0.008018153 ubox
59 74 0.905248055 ubox
59 79 0.004172863 ubox
59 82 0.005950976 ubox
59 94 0.014156992 ubox
60 73 0.905768957 ubox
60 81 0.006070934 ubox
60 90 0.024938387 ubox
60 93 0.016448506 ubox
60 94 0.026497171 ubox
60 96 0.003826713 ubox
61 70 0.003468486 ubox
61 80 0.005561292 ubox
61 89 0.025230152 ubox
61 92 0.013601321 ubox
61 95 0.003711704 ubox
62 70 0.013189568 ubox
62 88 0.018040452 ubox
62 89 0.209160561 ubox
62 91 0.009644449 ubox
62 92 0.038736190 ubox
62 95 0.006205753 ubox
63 70 0.948232319 ubox
63 84 0.005710776 ubox
63 88 0.214063589 ubox
63 91 0.041748889 ubox
63 95 0.013786313 ubox
63 98 0.003266945 ubox
64 69 0.948133185 ubox
64 73 0.018837885 ubox
64 81 0.013781197 ubox
64 87 0.214808973 ubox
64 90 0.042815855 ubox
64 93 0.016625536 ubox
64 94 0.009780279 ubox
64 97 0.003177776 ubox
65 70 0.019203647 ubox
65 76 0.009615194 ubox
65 80 0.012148707 ubox
65 84 0.011725059 ubox
65 86 0.214227877 ubox
65 89 0.042849558 ubox
65 92 0.019428432 ubox
66 70 0.004128077 ubox
66 75 0.012102627 ubox
66 77 0.003176849 ubox
66 80 0.024024243 ubox
66 84 0.118089621 ubox
66 86 0.007500376 ubox
66 88 0.042828722 ubox
66 91 0.019448017 ubox
67 72 0.004356026 ubox
67 73 0.004003967 ubox
67 74 0.012625249 ubox
67 79 0.027542977 ubox
67 81 0.010265510 ubox
67 82 0.006789513 ubox
67 83 0.114941637 ubox
67 85 0.009738572 ubox
67 87 0.041798164 ubox
67 90 0.019220546 ubox
68 75 0.009170577 ubox
68 76 0.006138848 ubox
68 77 0.012025959 ubox
68 78 0.028153089 ubox
68 80 0.013782050 ubox
69 75 0.005910398 ubox
69 76 0.010767454 ubox
69 77 0.024744004 ubox
69 78 0.005533688 ubox
69 80 0.016037224 ubox
69 84 0.015014284 ubox
69 86 0.011697230 ubox
69 88 0.019729218 ubox
70 81 0.198858150 ubox
70 87 0.019752637 ubox
71 75 0.006027882 ubox
71 76 0.009008407 ubox
71 77 0.011704608 ubox
71 78 0.028749070 ubox
71 80 0.194473371 ubox
72 76 0.010511212 ubox
72 77 0.028507840 ubox
72 78 0.029729087 ubox
72 80 0.025701107 ubox
73 77 0.021678102 ubox
73 78 0.045579949 ubox
73 80 0.008488975 ubox
73 84 0.039724815 ubox
73 86 0.003697869 ubox
74 78 0.014903820 ubox
74 80 0.020706562 ubox
75 79 0.019100626 ubox
75 81 0.007038088 ubox
75 82 0.043809190 ubox
75 83 0.029138465 ubox
76 81 0.044531581 ubox
76 82 0.032326730 ubox
76 83 0.012965054 ubox
77 81 0.029535225 ubox
77 82 0.013420741 ubox
77 83 0.009300093 ubox
78 82 0.009575399 ubox
78 83 0.008411570 ubox
78 85 0.003748886 ubox
79 100 0.003775712 ubox
80 99 0.003936311 ubox
81 86 0.004528409 ubox
81 98 0.004094937 ubox
82 100 0.005330124 ubox
83 100 0.016651597 ubox
84 97 0.011333109 ubox
84 99 0.017329071 ubox
85 100 0.705460231 ubox
86 96 0.039525052 ubox
86 99 0.783227516 ubox
87 95 0.040041864 ubox
87 98 0.787790047 ubox
87 100 0.004944035 ubox
88 94 0.040038248 ubox
88 97 0.787834799 ubox
88 99 0.004310895 ubox
89 93 0.039747933 ubox
89 96 0.787783086 ubox
89 99 0.065307047 ubox
90 95 0.767388900 ubox
90 98 0.070983854 ubox
91 97 0.071056064 ubox
92 96 0.070541337 ubox
92 99 0.011631077 ubox
93 98 0.012202794 ubox
1 37 0.9500000 lbox
2 36 0.9500000 lbox
3 35 0.9500000 lbox
4 34 0.9500000 lbox
5 33 0.9500000 lbox
8 30 0.9500000 lbox
9 29 0.9500000 lbox
42 97 0.9500000 lbox
43 96 0.9500000 lbox
45 94 0.9500000 lbox
46 93 0.9500000 lbox
47 92 0.9500000 lbox
48 91 0.9500000 lbox
49 90 0.9500000 lbox
53 84 0.9500000 lbox
54 83 0.9500000 lbox
55 82 0.9500000 lbox
56 77 0.9500000 lbox
57 76 0.9500000 lbox
58 75 0.9500000 lbox
59 74 0.9500000 lbox
60 73 0.9500000 lbox
63 70 0.9500000 lbox
64 69 0.9500000 lbox
showpage
end
%%EOF
