%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 17:21:25 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  % draw strand separators if required
  currentdict /nicks known {
    gsave
    % draw lines in red color
    0 1 1 sethsbcolor
    % draw with line thickness of 0.2
    0.2 setlinewidth
    nicks
    { 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
    } forall
    grestore
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (rnafold_cmd_test_0039)
} def

/sequence { (\
UCCCUUAAGUUUAGCACGGAACUGGCCCCAGUUAGCACGAUCAUGGCUACCUGGAUUGCGCAUCUGGCUCCUUCUGAACUCCGUAAAACAGCAUCUUUGC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
[ (Protein binding)
  [ 26 0.190687925 0.6000 0.8000 0.9500]
  [ 27 0.208107397 0.6000 0.8000 0.9500]
  [ 28 0.208107397 0.6000 0.8000 0.9500]
  [ 29 0.083347484 0.6000 0.8000 0.9500]
  [ 85 0.710525990 0.6000 0.8000 0.9500]
  [ 86 0.999904037 0.6000 0.8000 0.9500]
  [ 87 0.999904037 0.6000 0.8000 0.9500]
  [ 88 0.703534603 0.6000 0.8000 0.9500]
]
] def

/leftData [
[ (Protein binding)
  [ 26 0.190687925 0.6000 0.8000 0.9500]
  [ 27 0.208107397 0.6000 0.8000 0.9500]
  [ 28 0.208107397 0.6000 0.8000 0.9500]
  [ 29 0.083347484 0.6000 0.8000 0.9500]
  [ 85 0.710525990 0.6000 0.8000 0.9500]
  [ 86 0.999904037 0.6000 0.8000 0.9500]
  [ 87 0.999904037 0.6000 0.8000 0.9500]
  [ 88 0.703534603 0.6000 0.8000 0.9500]
]
] def

/bottomData [
[ (Protein binding)
  [ 26 0.190687925 0.6000 0.8000 0.9500]
  [ 27 0.208107397 0.6000 0.8000 0.9500]
  [ 28 0.208107397 0.6000 0.8000 0.9500]
  [ 29 0.083347484 0.6000 0.8000 0.9500]
  [ 85 0.710525990 0.6000 0.8000 0.9500]
  [ 86 0.999904037 0.6000 0.8000 0.9500]
  [ 87 0.999904037 0.6000 0.8000 0.9500]
  [ 88 0.703534603 0.6000 0.8000 0.9500]
]
] def

/rightData [
[ (Protein binding)
  [ 26 0.190687925 0.6000 0.8000 0.9500]
  [ 27 0.208107397 0.6000 0.8000 0.9500]
  [ 28 0.208107397 0.6000 0.8000 0.9500]
  [ 29 0.083347484 0.6000 0.8000 0.9500]
  [ 85 0.710525990 0.6000 0.8000 0.9500]
  [ 86 0.999904037 0.6000 0.8000 0.9500]
  [ 87 0.999904037 0.6000 0.8000 0.9500]
  [ 88 0.703534603 0.6000 0.8000 0.9500]
]
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 20 0.999304500 ubox
1 21 0.035709099 ubox
1 25 0.008614537 ubox
1 77 0.005286138 ubox
2 19 0.999942897 ubox
2 24 0.008587760 ubox
2 76 0.005282904 ubox
3 9 0.018090566 ubox
3 14 0.004866468 ubox
3 18 0.999783910 ubox
3 19 0.006733760 ubox
3 67 0.005279947 ubox
4 9 0.058174873 ubox
4 14 0.034658018 ubox
4 18 0.006558511 ubox
4 66 0.005274071 ubox
5 9 0.006526754 ubox
5 13 0.029462185 ubox
5 14 0.028208613 ubox
5 16 0.045754980 ubox
6 13 0.020335907 ubox
6 14 0.017417787 ubox
6 16 0.013525875 ubox
7 11 0.005708560 ubox
7 12 0.015386582 ubox
8 12 0.009043525 ubox
9 15 0.022185635 ubox
9 17 0.016022922 ubox
21 32 0.028365268 ubox
21 72 0.032119220 ubox
21 73 0.071350140 ubox
21 75 0.050620775 ubox
21 80 0.004848036 ubox
21 84 0.036771849 ubox
22 31 0.030082116 ubox
22 76 0.041310534 ubox
22 83 0.037617022 ubox
22 91 0.021038718 ubox
23 30 0.030094444 ubox
23 34 0.004474284 ubox
23 62 0.021909079 ubox
23 76 0.020782969 ubox
23 77 0.013939963 ubox
23 78 0.008212193 ubox
23 83 0.026427741 ubox
23 85 0.003825777 ubox
23 90 0.022069632 ubox
24 29 0.030009343 ubox
24 33 0.004648870 ubox
24 59 0.003945459 ubox
24 61 0.024235374 ubox
24 68 0.011694853 ubox
24 69 0.093435450 ubox
24 70 0.042566123 ubox
24 71 0.960630104 ubox
24 72 0.039648707 ubox
24 73 0.005091112 ubox
24 74 0.016723726 ubox
24 75 0.012657658 ubox
24 79 0.007663552 ubox
24 80 0.003733161 ubox
24 81 0.007653521 ubox
24 82 0.039176746 ubox
24 89 0.018322036 ubox
25 32 0.004713903 ubox
25 59 0.040511765 ubox
25 61 0.005600550 ubox
25 68 0.103465126 ubox
25 69 0.034605975 ubox
25 70 0.961942380 ubox
25 71 0.042067801 ubox
25 72 0.004934460 ubox
25 73 0.014363916 ubox
25 74 0.012898784 ubox
25 79 0.004514273 ubox
25 80 0.005960034 ubox
25 81 0.039019953 ubox
25 84 0.005827663 ubox
25 92 0.004266661 ubox
26 31 0.004707566 ubox
26 58 0.040551365 ubox
26 60 0.005643585 ubox
26 67 0.095564533 ubox
26 76 0.003954329 ubox
26 83 0.005902301 ubox
26 91 0.004278331 ubox
27 58 0.005238660 ubox
27 66 0.086015712 ubox
27 67 0.030692078 ubox
27 76 0.009575941 ubox
28 54 0.052976435 ubox
28 66 0.025203350 ubox
28 67 0.970716419 ubox
29 53 0.057319373 ubox
29 66 0.986991402 ubox
29 67 0.005314431 ubox
29 76 0.012705046 ubox
30 52 0.057769423 ubox
30 63 0.005149981 ubox
30 65 0.989596942 ubox
30 69 0.092661072 ubox
30 75 0.012190199 ubox
30 80 0.004851315 ubox
31 50 0.003959944 ubox
31 51 0.057643838 ubox
31 63 0.022191081 ubox
31 64 0.986384687 ubox
31 65 0.006017231 ubox
31 68 0.099299500 ubox
31 74 0.011588727 ubox
31 79 0.005173302 ubox
32 49 0.003429948 ubox
32 62 0.093416011 ubox
32 67 0.099268897 ubox
32 78 0.004957464 ubox
33 49 0.056863660 ubox
33 62 0.635348032 ubox
33 66 0.098214077 ubox
33 77 0.004343140 ubox
34 48 0.058054322 ubox
34 63 0.084845390 ubox
34 65 0.096098652 ubox
34 69 0.004846073 ubox
35 47 0.058106611 ubox
35 59 0.060923061 ubox
35 61 0.993173065 ubox
35 64 0.047596253 ubox
35 68 0.004935416 ubox
36 45 0.005845126 ubox
36 46 0.057766688 ubox
36 58 0.060078216 ubox
36 60 0.995619059 ubox
36 67 0.004793536 ubox
37 44 0.007312538 ubox
37 57 0.047632497 ubox
37 63 0.004963318 ubox
38 45 0.051195273 ubox
38 58 0.995861939 ubox
38 60 0.003667426 ubox
39 44 0.028520888 ubox
39 56 0.005562154 ubox
39 57 0.996054705 ubox
39 59 0.003516806 ubox
40 56 0.997517096 ubox
41 54 0.033823317 ubox
41 55 0.997413957 ubox
42 53 0.062870703 ubox
42 54 0.996114095 ubox
43 52 0.080419678 ubox
44 53 0.078949414 ubox
45 50 0.067791381 ubox
45 51 0.988049205 ubox
45 52 0.108608168 ubox
46 50 0.972230228 ubox
46 51 0.107697597 ubox
46 52 0.003666815 ubox
46 59 0.003669326 ubox
47 53 0.010340985 ubox
47 58 0.003673634 ubox
53 71 0.006572493 ubox
53 75 0.005064377 ubox
54 64 0.003239696 ubox
54 70 0.007324091 ubox
54 74 0.012166817 ubox
54 95 0.009687882 ubox
55 63 0.003233667 ubox
55 69 0.007007553 ubox
55 73 0.012197957 ubox
55 94 0.009641964 ubox
56 93 0.006827718 ubox
57 85 0.011091949 ubox
57 93 0.010348565 ubox
58 68 0.014911397 ubox
58 70 0.011443129 ubox
58 84 0.012585178 ubox
58 92 0.012918418 ubox
58 100 0.003909924 ubox
59 67 0.014923418 ubox
59 83 0.012685198 ubox
59 91 0.012909089 ubox
59 99 0.003958357 ubox
60 68 0.020871408 ubox
60 82 0.012554901 ubox
60 89 0.003655693 ubox
60 98 0.003651659 ubox
60 100 0.025521182 ubox
61 66 0.006347739 ubox
61 67 0.020849561 ubox
61 99 0.025716133 ubox
62 80 0.004472456 ubox
62 84 0.005861245 ubox
62 94 0.007495853 ubox
62 98 0.025267540 ubox
63 77 0.019358218 ubox
63 83 0.005583844 ubox
63 85 0.005909415 ubox
63 93 0.008245570 ubox
64 76 0.020416049 ubox
64 83 0.006693412 ubox
64 91 0.016203025 ubox
65 76 0.005923588 ubox
65 83 0.036478913 ubox
65 90 0.017843197 ubox
65 93 0.004415422 ubox
66 71 0.004663707 ubox
66 72 0.004321102 ubox
66 74 0.016107780 ubox
66 75 0.011055472 ubox
66 79 0.006152409 ubox
66 80 0.014065313 ubox
66 81 0.005932279 ubox
66 82 0.049016515 ubox
66 89 0.018105880 ubox
66 92 0.003984974 ubox
66 94 0.004412562 ubox
67 71 0.006138107 ubox
67 73 0.013685998 ubox
67 74 0.012933200 ubox
67 79 0.023047508 ubox
67 80 0.004775311 ubox
67 81 0.049150900 ubox
67 82 0.004869781 ubox
67 84 0.022491020 ubox
67 89 0.004305551 ubox
67 92 0.068005425 ubox
67 100 0.021859909 ubox
68 76 0.022984146 ubox
68 83 0.023060969 ubox
68 91 0.068151403 ubox
68 99 0.022204753 ubox
69 76 0.003862988 ubox
69 77 0.057722821 ubox
69 78 0.010526920 ubox
69 90 0.065034423 ubox
70 76 0.059127398 ubox
70 83 0.005371888 ubox
71 76 0.052117207 ubox
71 83 0.008211478 ubox
71 91 0.004249905 ubox
72 76 0.012070107 ubox
72 77 0.017947026 ubox
72 78 0.023308211 ubox
72 83 0.007800898 ubox
72 85 0.022361388 ubox
72 88 0.005098932 ubox
72 90 0.008029684 ubox
72 91 0.003653200 ubox
72 93 0.046113346 ubox
72 99 0.006214824 ubox
73 77 0.022754159 ubox
73 78 0.014037414 ubox
73 83 0.007511038 ubox
73 85 0.028594620 ubox
73 88 0.005451866 ubox
73 90 0.007789569 ubox
73 93 0.040325095 ubox
73 99 0.003381615 ubox
74 83 0.080766052 ubox
74 91 0.166216975 ubox
74 99 0.012866946 ubox
75 83 0.128740377 ubox
75 85 0.024134334 ubox
75 88 0.013300193 ubox
75 90 0.185454305 ubox
75 93 0.024910911 ubox
75 99 0.020118659 ubox
76 80 0.008137221 ubox
76 81 0.079496944 ubox
76 82 0.167892433 ubox
76 84 0.025482547 ubox
76 89 0.187921973 ubox
76 92 0.027520567 ubox
76 95 0.043247442 ubox
76 97 0.011263332 ubox
76 98 0.034223668 ubox
76 100 0.006743489 ubox
77 84 0.027395056 ubox
77 94 0.041810300 ubox
77 96 0.011812885 ubox
77 97 0.035196915 ubox
77 98 0.016255053 ubox
78 84 0.110574270 ubox
78 94 0.005564200 ubox
78 96 0.032928737 ubox
78 97 0.015737188 ubox
78 98 0.004101935 ubox
79 83 0.113637332 ubox
79 91 0.036782285 ubox
79 99 0.013861479 ubox
80 85 0.017947999 ubox
80 88 0.009426144 ubox
80 90 0.036090691 ubox
80 91 0.004234104 ubox
80 93 0.016600645 ubox
81 91 0.020810568 ubox
81 99 0.003656180 ubox
82 91 0.051561704 ubox
82 99 0.015192644 ubox
83 89 0.136977373 ubox
83 92 0.148960141 ubox
83 94 0.015416233 ubox
83 95 0.017260157 ubox
83 97 0.003418665 ubox
83 98 0.014095268 ubox
83 100 0.034128198 ubox
84 88 0.113394188 ubox
84 90 0.016186463 ubox
84 91 0.146266400 ubox
84 93 0.016558416 ubox
84 99 0.034113329 ubox
85 94 0.004728578 ubox
85 96 0.003174715 ubox
85 98 0.031066222 ubox
86 97 0.006067337 ubox
87 96 0.005926219 ubox
88 97 0.004113688 ubox
88 98 0.005956500 ubox
89 99 0.090185139 ubox
90 94 0.003209822 ubox
90 96 0.024703122 ubox
90 97 0.011020987 ubox
90 98 0.089235366 ubox
91 95 0.026012829 ubox
91 96 0.010009974 ubox
91 97 0.076072487 ubox
91 98 0.004782741 ubox
91 100 0.905620389 ubox
92 99 0.915335917 ubox
93 97 0.012578435 ubox
93 98 0.883042635 ubox
94 99 0.004409885 ubox
95 99 0.007178064 ubox
1 20 0.9500000 lbox
2 19 0.9500000 lbox
3 18 0.9500000 lbox
24 71 0.9500000 lbox
25 70 0.9500000 lbox
28 67 0.9500000 lbox
29 66 0.9500000 lbox
30 65 0.9500000 lbox
31 64 0.9500000 lbox
35 61 0.9500000 lbox
36 60 0.9500000 lbox
38 58 0.9500000 lbox
39 57 0.9500000 lbox
40 56 0.9500000 lbox
41 55 0.9500000 lbox
42 54 0.9500000 lbox
45 51 0.9500000 lbox
46 50 0.9500000 lbox
91 100 0.9500000 lbox
92 99 0.9500000 lbox
93 98 0.9500000 lbox
showpage
end
%%EOF
