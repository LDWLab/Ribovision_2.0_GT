%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 17:21:25 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  % draw strand separators if required
  currentdict /nicks known {
    gsave
    % draw lines in red color
    0 1 1 sethsbcolor
    % draw with line thickness of 0.2
    0.2 setlinewidth
    nicks
    { 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
    } forall
    grestore
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (rnafold_cmd_test_0040)
} def

/sequence { (\
AUCGCUCUGUCGUGAGGGAUAGAACCGCUUGCCAGAUUCUCAGUUAAGUAGUUUGACUCAGGCAAUACUCCCAUGGCUGUUUUAACCAGCGUGAAUACAC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
[ (Protein binding)
  [ 70 0.465104520 0.6000 0.8000 0.9500]
  [ 71 0.465104520 0.6000 0.8000 0.9500]
  [ 72 0.465104520 0.6000 0.8000 0.9500]
]
] def

/leftData [
[ (Protein binding)
  [ 70 0.465104520 0.6000 0.8000 0.9500]
  [ 71 0.465104520 0.6000 0.8000 0.9500]
  [ 72 0.465104520 0.6000 0.8000 0.9500]
]
] def

/bottomData [
[ (Protein binding)
  [ 70 0.465104520 0.6000 0.8000 0.9500]
  [ 71 0.465104520 0.6000 0.8000 0.9500]
  [ 72 0.465104520 0.6000 0.8000 0.9500]
]
] def

/rightData [
[ (Protein binding)
  [ 70 0.465104520 0.6000 0.8000 0.9500]
  [ 71 0.465104520 0.6000 0.8000 0.9500]
  [ 72 0.465104520 0.6000 0.8000 0.9500]
]
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 20 0.472049797 ubox
1 37 0.062677274 ubox
1 96 0.879330342 ubox
2 18 0.003404153 ubox
2 19 0.472034092 ubox
2 36 0.062709402 ubox
2 93 0.003419388 ubox
2 94 0.620404131 ubox
2 95 0.623144328 ubox
3 17 0.006490241 ubox
3 18 0.471996935 ubox
3 35 0.062689223 ubox
3 91 0.058709190 ubox
3 93 0.877368243 ubox
4 25 0.008518401 ubox
4 28 0.025334646 ubox
4 32 0.047678149 ubox
4 33 0.007958123 ubox
4 90 0.059229460 ubox
4 92 0.876953669 ubox
5 14 0.007363579 ubox
5 16 0.458069315 ubox
5 17 0.007635100 ubox
5 27 0.025348373 ubox
5 31 0.048349276 ubox
5 89 0.059161478 ubox
5 91 0.877084089 ubox
6 15 0.456900505 ubox
6 16 0.003815821 ubox
6 23 0.040506697 ubox
6 88 0.057513319 ubox
6 89 0.005287941 ubox
7 12 0.007211998 ubox
7 14 0.454573323 ubox
7 16 0.007090238 ubox
7 22 0.040966568 ubox
7 27 0.005607664 ubox
7 31 0.011393033 ubox
7 89 0.876198833 ubox
8 15 0.007295283 ubox
8 21 0.040769323 ubox
8 27 0.006730697 ubox
8 34 0.003945130 ubox
8 85 0.005617857 ubox
8 88 0.876255735 ubox
8 89 0.006758340 ubox
9 20 0.038161109 ubox
9 25 0.004965397 ubox
9 26 0.007996332 ubox
9 28 0.008398409 ubox
9 33 0.003964176 ubox
9 86 0.081159096 ubox
9 87 0.864352843 ubox
9 90 0.003824008 ubox
10 19 0.019262389 ubox
10 27 0.004961885 ubox
10 84 0.005830973 ubox
10 85 0.097340144 ubox
11 18 0.018442858 ubox
12 83 0.003902820 ubox
12 86 0.048521721 ubox
13 84 0.007601904 ubox
13 85 0.052390474 ubox
14 82 0.003380746 ubox
14 83 0.004608488 ubox
14 86 0.024634580 ubox
14 87 0.004071076 ubox
14 90 0.008398972 ubox
15 83 0.004880718 ubox
16 26 0.005967329 ubox
16 86 0.073166032 ubox
16 87 0.057237593 ubox
17 25 0.006006895 ubox
17 77 0.003293498 ubox
17 78 0.003535535 ubox
17 86 0.157642891 ubox
17 87 0.092382738 ubox
18 77 0.003971436 ubox
18 81 0.006035109 ubox
18 86 0.247954201 ubox
18 87 0.007077830 ubox
19 80 0.010894979 ubox
19 83 0.004431448 ubox
20 75 0.017931631 ubox
20 79 0.016642941 ubox
20 84 0.832641986 ubox
20 85 0.040786071 ubox
21 29 0.020238291 ubox
21 40 0.011117742 ubox
21 66 0.008233220 ubox
21 69 0.107018428 ubox
21 74 0.017975821 ubox
21 78 0.017397706 ubox
21 80 0.004070139 ubox
21 82 0.015730544 ubox
21 83 0.866078363 ubox
22 26 0.017718146 ubox
22 28 0.025406325 ubox
22 29 0.003731562 ubox
22 39 0.012060852 ubox
22 54 0.015066767 ubox
22 66 0.007781557 ubox
22 68 0.115248105 ubox
22 69 0.007114073 ubox
22 70 0.018446816 ubox
22 71 0.004906481 ubox
22 72 0.008180446 ubox
22 77 0.017246738 ubox
22 81 0.014095983 ubox
22 82 0.876118320 ubox
22 83 0.014801786 ubox
22 86 0.007785215 ubox
23 29 0.003491147 ubox
23 38 0.012068610 ubox
23 53 0.016479088 ubox
23 66 0.020693569 ubox
23 69 0.019034995 ubox
23 78 0.004574206 ubox
23 80 0.010614624 ubox
23 81 0.877600722 ubox
23 82 0.013723164 ubox
23 83 0.004605969 ubox
24 29 0.003171471 ubox
24 37 0.011467221 ubox
24 52 0.016908778 ubox
24 66 0.056367489 ubox
24 69 0.009017756 ubox
24 80 0.877990551 ubox
24 81 0.011290675 ubox
24 82 0.003988126 ubox
25 51 0.016957270 ubox
25 62 0.011008974 ubox
25 76 0.018836276 ubox
25 79 0.876633550 ubox
25 93 0.003819767 ubox
26 35 0.012030900 ubox
26 61 0.011051014 ubox
26 75 0.019414199 ubox
26 76 0.006982221 ubox
26 79 0.024792384 ubox
26 91 0.006681527 ubox
27 49 0.017790439 ubox
27 63 0.398280524 ubox
27 66 0.030740963 ubox
27 68 0.048575360 ubox
27 69 0.009279247 ubox
27 70 0.003396004 ubox
27 74 0.013883926 ubox
27 77 0.876132165 ubox
27 78 0.018669901 ubox
27 80 0.017425163 ubox
27 90 0.007052067 ubox
28 35 0.004122070 ubox
28 48 0.018042205 ubox
28 61 0.003205745 ubox
28 62 0.398705934 ubox
28 75 0.031282585 ubox
28 76 0.876153084 ubox
28 79 0.018216281 ubox
28 89 0.007040018 ubox
29 34 0.003780937 ubox
29 47 0.018021532 ubox
29 60 0.003527836 ubox
29 61 0.398314569 ubox
29 64 0.009304813 ubox
29 65 0.424275667 ubox
29 67 0.011573009 ubox
29 73 0.011111348 ubox
29 75 0.778474455 ubox
29 79 0.003626878 ubox
29 88 0.006211561 ubox
30 46 0.017812574 ubox
30 60 0.397890969 ubox
30 64 0.782975352 ubox
30 65 0.033114912 ubox
30 67 0.008205134 ubox
30 73 0.378104847 ubox
30 75 0.010157200 ubox
31 44 0.005894993 ubox
31 45 0.016287806 ubox
31 57 0.028919511 ubox
31 58 0.004399712 ubox
31 59 0.397176374 ubox
31 63 0.789764281 ubox
31 68 0.004706330 ubox
31 69 0.003707781 ubox
31 70 0.014758171 ubox
31 71 0.047879187 ubox
31 72 0.403552305 ubox
31 74 0.006311244 ubox
31 77 0.056171824 ubox
31 86 0.003628503 ubox
31 87 0.004222963 ubox
32 43 0.007987548 ubox
32 55 0.009135703 ubox
32 62 0.789781111 ubox
32 76 0.056373540 ubox
33 43 0.013369463 ubox
33 55 0.391450525 ubox
33 61 0.785527915 ubox
33 62 0.004869910 ubox
33 75 0.056526433 ubox
34 40 0.003999458 ubox
34 53 0.003296452 ubox
34 54 0.393679994 ubox
34 58 0.045793517 ubox
34 66 0.020393792 ubox
34 69 0.420993042 ubox
34 74 0.054368841 ubox
35 39 0.004064679 ubox
35 41 0.014471645 ubox
35 45 0.003657293 ubox
35 52 0.003386219 ubox
35 53 0.393802536 ubox
35 54 0.007068907 ubox
35 57 0.048973499 ubox
35 58 0.008550304 ubox
35 59 0.743333514 ubox
35 63 0.010337233 ubox
35 66 0.011039514 ubox
35 68 0.427722913 ubox
35 69 0.010299180 ubox
35 70 0.059009794 ubox
35 71 0.008637369 ubox
35 72 0.015061991 ubox
36 40 0.012630932 ubox
36 44 0.004102741 ubox
36 49 0.003740432 ubox
36 52 0.394020770 ubox
36 53 0.007098006 ubox
36 54 0.015607198 ubox
36 58 0.696861535 ubox
36 66 0.410639905 ubox
36 69 0.057181053 ubox
37 43 0.004229098 ubox
37 48 0.004720592 ubox
37 50 0.011253549 ubox
37 51 0.392631432 ubox
37 55 0.006765670 ubox
37 56 0.027036547 ubox
37 60 0.021475419 ubox
37 61 0.006721491 ubox
37 62 0.007857166 ubox
37 64 0.077568921 ubox
37 65 0.401882370 ubox
37 67 0.043776510 ubox
37 73 0.004031215 ubox
38 42 0.003310006 ubox
38 47 0.005861336 ubox
38 50 0.372872337 ubox
38 51 0.007676110 ubox
38 55 0.023101078 ubox
38 56 0.413987549 ubox
38 60 0.049802974 ubox
38 61 0.003903107 ubox
38 62 0.292115750 ubox
38 64 0.322066737 ubox
38 65 0.027381131 ubox
38 67 0.013526119 ubox
39 43 0.003426829 ubox
39 48 0.373450316 ubox
39 51 0.036611918 ubox
39 55 0.420083019 ubox
39 61 0.383105711 ubox
39 62 0.223597869 ubox
40 46 0.012960547 ubox
40 47 0.355592706 ubox
40 48 0.026027047 ubox
40 50 0.037407926 ubox
40 51 0.007642238 ubox
40 55 0.004376280 ubox
40 56 0.470952502 ubox
40 60 0.395953608 ubox
40 61 0.210113745 ubox
40 62 0.131164544 ubox
40 64 0.003657385 ubox
41 48 0.104216488 ubox
41 51 0.051465016 ubox
41 55 0.475141329 ubox
41 61 0.140166476 ubox
41 62 0.016996905 ubox
41 75 0.005129876 ubox
41 79 0.007122573 ubox
42 49 0.032520956 ubox
42 52 0.228836584 ubox
42 53 0.078582642 ubox
42 54 0.471821229 ubox
42 58 0.566985866 ubox
42 69 0.009773364 ubox
42 74 0.005453644 ubox
42 78 0.007288540 ubox
43 49 0.012807379 ubox
43 52 0.080413995 ubox
43 53 0.446393992 ubox
43 54 0.011820165 ubox
43 57 0.659952392 ubox
43 59 0.005098448 ubox
43 63 0.007866119 ubox
43 68 0.010288761 ubox
43 71 0.003316230 ubox
43 77 0.007297281 ubox
44 48 0.010741660 ubox
44 50 0.240011383 ubox
44 51 0.075305301 ubox
44 56 0.659955959 ubox
44 61 0.005544643 ubox
44 62 0.007699235 ubox
44 67 0.010098801 ubox
44 76 0.007290479 ubox
45 50 0.078492985 ubox
45 51 0.183142310 ubox
45 55 0.659342202 ubox
45 60 0.007461510 ubox
45 61 0.006720888 ubox
45 75 0.007237317 ubox
46 52 0.023813051 ubox
46 53 0.056824523 ubox
46 54 0.655442649 ubox
46 74 0.007107262 ubox
47 52 0.072271350 ubox
47 53 0.630251305 ubox
47 54 0.034804684 ubox
47 58 0.018796013 ubox
47 69 0.021101036 ubox
48 52 0.428187892 ubox
48 53 0.043135683 ubox
48 54 0.009273374 ubox
48 57 0.023436257 ubox
48 59 0.003401338 ubox
48 66 0.007974697 ubox
48 68 0.022407572 ubox
49 56 0.022687763 ubox
49 64 0.003592783 ubox
49 65 0.008075355 ubox
49 67 0.022371577 ubox
50 54 0.003306141 ubox
50 58 0.007403537 ubox
50 66 0.020526567 ubox
50 69 0.005559692 ubox
51 57 0.009046585 ubox
51 63 0.025467168 ubox
51 68 0.005836440 ubox
52 56 0.008154509 ubox
52 62 0.025525360 ubox
52 67 0.005632186 ubox
53 61 0.025478197 ubox
53 65 0.007689327 ubox
54 60 0.025531994 ubox
54 64 0.008711221 ubox
55 59 0.025154514 ubox
55 63 0.009028883 ubox
57 62 0.007850608 ubox
60 69 0.011034884 ubox
61 68 0.011814653 ubox
62 68 0.003891225 ubox
64 69 0.006810442 ubox
65 69 0.003983488 ubox
66 97 0.005879010 ubox
67 96 0.006200539 ubox
68 75 0.009709189 ubox
69 94 0.011363135 ubox
69 95 0.003198630 ubox
70 93 0.011423055 ubox
71 91 0.004781361 ubox
71 93 0.006185013 ubox
72 91 0.004893149 ubox
72 93 0.090484979 ubox
73 92 0.114416298 ubox
73 96 0.010231912 ubox
74 88 0.029634135 ubox
74 91 0.109869431 ubox
74 93 0.020372338 ubox
74 94 0.014403446 ubox
74 95 0.008601783 ubox
74 97 0.005439280 ubox
74 99 0.012240899 ubox
75 87 0.032809783 ubox
75 90 0.080374863 ubox
75 92 0.030218712 ubox
75 96 0.006034817 ubox
75 98 0.014033312 ubox
75 100 0.004395612 ubox
76 86 0.032751383 ubox
76 90 0.466434753 ubox
76 92 0.012428556 ubox
76 98 0.004868526 ubox
76 100 0.004118484 ubox
77 89 0.473617915 ubox
77 91 0.012500711 ubox
77 93 0.004773465 ubox
78 84 0.014102016 ubox
78 85 0.019177676 ubox
78 88 0.473325130 ubox
78 91 0.009283363 ubox
78 97 0.009189479 ubox
78 99 0.017755213 ubox
79 83 0.012143086 ubox
79 86 0.096186972 ubox
79 87 0.462513251 ubox
79 90 0.018129534 ubox
79 96 0.009841137 ubox
79 98 0.019921798 ubox
80 84 0.015232499 ubox
80 85 0.125248327 ubox
80 89 0.018085011 ubox
80 95 0.009830766 ubox
80 97 0.019373171 ubox
81 85 0.081453577 ubox
81 88 0.015417224 ubox
81 94 0.009747840 ubox
81 95 0.008785321 ubox
82 93 0.009400639 ubox
82 94 0.009608917 ubox
82 95 0.012149837 ubox
83 93 0.009518167 ubox
83 94 0.010501027 ubox
84 92 0.008064761 ubox
85 92 0.018761161 ubox
86 91 0.019749777 ubox
89 100 0.003485836 ubox
91 96 0.004460229 ubox
91 98 0.088222669 ubox
91 100 0.329811022 ubox
92 97 0.082651625 ubox
92 99 0.332918429 ubox
93 98 0.332049796 ubox
93 100 0.009657389 ubox
1 96 0.9500000 lbox
2 95 0.9500000 lbox
3 93 0.9500000 lbox
4 92 0.9500000 lbox
5 91 0.9500000 lbox
7 89 0.9500000 lbox
8 88 0.9500000 lbox
9 87 0.9500000 lbox
20 84 0.9500000 lbox
21 83 0.9500000 lbox
22 82 0.9500000 lbox
23 81 0.9500000 lbox
24 80 0.9500000 lbox
25 79 0.9500000 lbox
27 77 0.9500000 lbox
28 76 0.9500000 lbox
29 75 0.9500000 lbox
30 64 0.9500000 lbox
31 63 0.9500000 lbox
32 62 0.9500000 lbox
33 61 0.9500000 lbox
35 59 0.9500000 lbox
36 58 0.9500000 lbox
40 56 0.9500000 lbox
41 55 0.9500000 lbox
42 54 0.9500000 lbox
43 53 0.9500000 lbox
showpage
end
%%EOF
