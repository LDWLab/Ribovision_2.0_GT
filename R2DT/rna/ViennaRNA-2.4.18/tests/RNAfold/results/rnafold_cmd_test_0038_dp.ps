%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 17:21:25 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  % draw strand separators if required
  currentdict /nicks known {
    gsave
    % draw lines in red color
    0 1 1 sethsbcolor
    % draw with line thickness of 0.2
    0.2 setlinewidth
    nicks
    { 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
    } forall
    grestore
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (rnafold_cmd_test_0038)
} def

/sequence { (\
GAACCGACGGAGUACACGCUCUGGACUCCAUAGGCGGAGUAAUCAAGAGGCGGUAAAAGGUCGAUUUUGCUAUCUUUGCGUUCACAAUAACUGUCAUAUC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
[ (Protein binding)
  [ 55 0.704159558 0.6000 0.8000 0.9500]
  [ 56 0.999850810 0.6000 0.8000 0.9500]
  [ 57 0.999850810 0.6000 0.8000 0.9500]
  [ 58 0.709831655 0.6000 0.8000 0.9500]
]
] def

/leftData [
[ (Protein binding)
  [ 55 0.704159558 0.6000 0.8000 0.9500]
  [ 56 0.999850810 0.6000 0.8000 0.9500]
  [ 57 0.999850810 0.6000 0.8000 0.9500]
  [ 58 0.709831655 0.6000 0.8000 0.9500]
]
] def

/bottomData [
[ (Protein binding)
  [ 55 0.704159558 0.6000 0.8000 0.9500]
  [ 56 0.999850810 0.6000 0.8000 0.9500]
  [ 57 0.999850810 0.6000 0.8000 0.9500]
  [ 58 0.709831655 0.6000 0.8000 0.9500]
]
] def

/rightData [
[ (Protein binding)
  [ 55 0.704159558 0.6000 0.8000 0.9500]
  [ 56 0.999850810 0.6000 0.8000 0.9500]
  [ 57 0.999850810 0.6000 0.8000 0.9500]
  [ 58 0.709831655 0.6000 0.8000 0.9500]
]
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 62 0.030154660 ubox
1 67 0.795861254 ubox
1 68 0.246973215 ubox
1 70 0.033487470 ubox
1 71 0.004421479 ubox
1 74 0.016423320 ubox
1 77 0.006621450 ubox
1 79 0.005521268 ubox
1 83 0.550580712 ubox
1 85 0.005434555 ubox
1 95 0.004926095 ubox
2 61 0.030154675 ubox
2 66 0.797504812 ubox
2 67 0.242590968 ubox
2 68 0.027669943 ubox
2 73 0.015142605 ubox
2 76 0.006515196 ubox
2 82 0.550590347 ubox
2 94 0.004514428 ubox
3 54 0.030303926 ubox
3 65 0.799031649 ubox
3 66 0.238068094 ubox
3 67 0.028033014 ubox
3 71 0.004092276 ubox
3 75 0.006261285 ubox
3 81 0.550533916 ubox
4 53 0.030322443 ubox
4 63 0.027898225 ubox
4 69 0.004785519 ubox
4 78 0.006840916 ubox
4 80 0.549660374 ubox
5 52 0.030324240 ubox
5 63 0.994578687 ubox
5 69 0.003757887 ubox
5 78 0.055252857 ubox
5 80 0.004401376 ubox
6 51 0.029911086 ubox
6 62 0.999133480 ubox
6 77 0.018811652 ubox
6 79 0.003971592 ubox
7 61 0.999045244 ubox
7 76 0.015497593 ubox
8 49 0.011317723 ubox
8 50 0.020639563 ubox
8 59 0.032021435 ubox
8 60 0.997979358 ubox
8 63 0.010685401 ubox
9 62 0.010647985 ubox
9 74 0.004564765 ubox
9 75 0.004187911 ubox
10 61 0.006573363 ubox
10 74 0.004264048 ubox
11 54 0.004872216 ubox
11 73 0.004222630 ubox
13 53 0.004986560 ubox
13 55 0.089572034 ubox
14 54 0.127444877 ubox
15 52 0.049835404 ubox
15 53 0.172289771 ubox
16 54 0.007718870 ubox
17 49 0.007800497 ubox
17 50 0.053534163 ubox
17 52 0.251120396 ubox
17 53 0.010968995 ubox
18 51 0.251712403 ubox
19 47 0.009742044 ubox
19 49 0.958222096 ubox
19 50 0.190941734 ubox
20 38 0.003164840 ubox
20 46 0.009949850 ubox
20 47 0.008948799 ubox
20 48 0.992965333 ubox
20 49 0.095142122 ubox
20 50 0.013741024 ubox
21 37 0.003175492 ubox
21 47 0.997320071 ubox
21 49 0.021111877 ubox
21 50 0.003165622 ubox
22 36 0.003168118 ubox
22 42 0.008732355 ubox
22 45 0.495660367 ubox
22 46 0.853606509 ubox
22 47 0.008323103 ubox
22 48 0.019145296 ubox
23 43 0.064152577 ubox
23 44 0.699616665 ubox
24 40 0.012739565 ubox
24 43 0.617291937 ubox
24 44 0.332468777 ubox
25 40 0.943304878 ubox
25 43 0.254249854 ubox
26 39 0.999620366 ubox
27 38 0.999661388 ubox
28 37 0.999807667 ubox
29 34 0.005909221 ubox
29 36 0.998905626 ubox
34 79 0.017774510 ubox
35 78 0.017800287 ubox
36 77 0.017734263 ubox
37 76 0.017767867 ubox
38 75 0.017769643 ubox
39 74 0.017725863 ubox
40 72 0.004947624 ubox
41 71 0.004805500 ubox
42 71 0.006006921 ubox
44 69 0.017368258 ubox
45 68 0.017344374 ubox
46 67 0.017163346 ubox
47 66 0.016621691 ubox
48 65 0.015436837 ubox
49 62 0.016654801 ubox
50 61 0.016925775 ubox
51 60 0.016988227 ubox
51 63 0.006024286 ubox
52 62 0.006040278 ubox
53 61 0.005200684 ubox
63 74 0.010078821 ubox
63 83 0.014809492 ubox
63 85 0.004819601 ubox
63 95 0.006082124 ubox
63 100 0.010468507 ubox
64 73 0.010083701 ubox
64 82 0.014564159 ubox
64 94 0.006075129 ubox
64 99 0.010544685 ubox
65 72 0.009889910 ubox
65 93 0.005955705 ubox
65 98 0.010155280 ubox
67 96 0.005285983 ubox
68 80 0.479050240 ubox
68 84 0.014684108 ubox
68 86 0.021415248 ubox
68 87 0.003904507 ubox
68 89 0.004689927 ubox
68 93 0.003263893 ubox
68 96 0.099449399 ubox
68 98 0.007960628 ubox
69 74 0.012827345 ubox
69 75 0.003489747 ubox
69 76 0.004251465 ubox
69 77 0.003720380 ubox
69 79 0.749236752 ubox
69 81 0.041239257 ubox
69 83 0.016042393 ubox
69 85 0.022996844 ubox
69 88 0.004009042 ubox
69 91 0.016182079 ubox
69 92 0.003887257 ubox
69 94 0.142485942 ubox
69 95 0.110192239 ubox
69 97 0.005767099 ubox
69 100 0.006848042 ubox
70 78 0.749137860 ubox
70 80 0.043518218 ubox
70 93 0.179034633 ubox
71 78 0.043681483 ubox
71 80 0.004804957 ubox
71 84 0.003620036 ubox
71 89 0.025805400 ubox
71 90 0.004887174 ubox
71 93 0.036993259 ubox
71 98 0.021636004 ubox
72 76 0.055168329 ubox
72 77 0.131196151 ubox
72 81 0.016168342 ubox
72 82 0.011109585 ubox
72 88 0.026555721 ubox
72 92 0.038925089 ubox
72 94 0.007615121 ubox
72 97 0.022692252 ubox
72 99 0.014058373 ubox
73 78 0.003672856 ubox
73 80 0.015767231 ubox
73 87 0.022645078 ubox
73 89 0.010136777 ubox
73 90 0.123137199 ubox
73 93 0.007616889 ubox
73 96 0.020491623 ubox
73 98 0.014630207 ubox
74 78 0.007073920 ubox
74 80 0.020321994 ubox
74 93 0.009185094 ubox
75 80 0.003567955 ubox
75 84 0.003565224 ubox
75 86 0.008079354 ubox
75 87 0.009991868 ubox
75 89 0.016333197 ubox
75 90 0.009660074 ubox
75 93 0.003253112 ubox
75 96 0.008105349 ubox
75 98 0.023649888 ubox
76 84 0.005087344 ubox
76 86 0.009540421 ubox
76 87 0.202096674 ubox
76 89 0.009146936 ubox
76 90 0.009797661 ubox
76 93 0.005110584 ubox
76 96 0.026412827 ubox
76 98 0.009941947 ubox
77 84 0.026062237 ubox
77 86 0.211499640 ubox
77 87 0.008377492 ubox
77 89 0.010772090 ubox
77 90 0.005177667 ubox
77 93 0.009201426 ubox
77 96 0.079134593 ubox
77 98 0.014446608 ubox
78 83 0.028711913 ubox
78 85 0.212064408 ubox
78 88 0.009847710 ubox
78 91 0.007728795 ubox
78 92 0.014317339 ubox
78 94 0.098939711 ubox
78 95 0.086101049 ubox
78 97 0.014938564 ubox
78 99 0.004971451 ubox
78 100 0.009251598 ubox
79 93 0.125601662 ubox
80 85 0.042789154 ubox
80 88 0.040650429 ubox
80 91 0.288350646 ubox
80 92 0.048101510 ubox
80 94 0.004253727 ubox
80 95 0.054983589 ubox
80 97 0.054883902 ubox
80 99 0.049103696 ubox
80 100 0.021714696 ubox
81 86 0.009687383 ubox
81 87 0.042906217 ubox
81 89 0.015808418 ubox
81 90 0.289326818 ubox
81 93 0.009109280 ubox
81 96 0.055728066 ubox
81 98 0.052087168 ubox
82 86 0.036704169 ubox
82 87 0.012049442 ubox
82 89 0.256979753 ubox
82 90 0.015042163 ubox
82 93 0.004506060 ubox
82 96 0.090818826 ubox
82 98 0.022342286 ubox
83 93 0.067230675 ubox
84 88 0.024780113 ubox
84 92 0.063556767 ubox
84 94 0.448687031 ubox
84 97 0.010476493 ubox
84 99 0.004501850 ubox
85 93 0.478014984 ubox
86 92 0.455005755 ubox
86 94 0.008753439 ubox
86 97 0.007363083 ubox
86 99 0.006023846 ubox
87 92 0.026405449 ubox
87 94 0.042182909 ubox
87 97 0.030260096 ubox
87 99 0.066148855 ubox
88 93 0.041888314 ubox
88 96 0.030628773 ubox
88 98 0.070603655 ubox
89 94 0.012297549 ubox
89 97 0.069069771 ubox
89 99 0.005850566 ubox
90 94 0.010086340 ubox
90 97 0.016838088 ubox
90 99 0.011943736 ubox
92 96 0.009477190 ubox
92 98 0.024228096 ubox
93 97 0.022053442 ubox
93 99 0.023507149 ubox
93 100 0.038962243 ubox
94 98 0.023176901 ubox
1 83 0.9500000 lbox
2 82 0.9500000 lbox
3 81 0.9500000 lbox
4 80 0.9500000 lbox
5 63 0.9500000 lbox
6 62 0.9500000 lbox
7 61 0.9500000 lbox
8 60 0.9500000 lbox
19 49 0.9500000 lbox
20 48 0.9500000 lbox
21 47 0.9500000 lbox
22 46 0.9500000 lbox
25 40 0.9500000 lbox
26 39 0.9500000 lbox
27 38 0.9500000 lbox
28 37 0.9500000 lbox
29 36 0.9500000 lbox
showpage
end
%%EOF
