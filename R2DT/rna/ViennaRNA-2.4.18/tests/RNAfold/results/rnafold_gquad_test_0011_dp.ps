%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.17
%%CreationDate: Sun Apr 18 21:03:24 2021
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  % draw strand separators if required
  currentdict /nicks known {
    gsave
    % draw lines in red color
    0 1 1 sethsbcolor
    % draw with line thickness of 0.2
    0.2 setlinewidth
    nicks
    { 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
    } forall
    grestore
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (rnafold_gquad_test_0011)
} def

/sequence { (\
UGGCGGCCCCGGCGGGAGGGGCGGGUGGGAGGCCGCGGCCACCGCCACCUGCCGGCCUCGAGAGGGGCCGAUGCCCAGA\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data
14 29 1.000000000 utri

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 38 0.013162066 ubox
1 41 0.007953640 ubox
1 44 0.308869914 ubox
1 47 0.694380833 ubox
1 71 0.004747259 ubox
1 73 0.003579833 ubox
1 77 0.069184729 ubox
1 78 0.007536533 ubox
1 79 0.005287192 ubox
2 36 0.012236333 ubox
2 40 0.009329462 ubox
2 42 0.004233134 ubox
2 43 0.476911136 ubox
2 46 0.815035166 ubox
2 48 0.009535173 ubox
2 49 0.015350734 ubox
2 52 0.004424038 ubox
2 53 0.009081341 ubox
2 74 0.009489279 ubox
2 75 0.134011404 ubox
2 76 0.072537606 ubox
3 36 0.294211967 ubox
3 39 0.009108799 ubox
3 42 0.477168277 ubox
3 43 0.003264160 ubox
3 45 0.815271821 ubox
3 48 0.012241946 ubox
3 52 0.009456805 ubox
3 74 0.135916146 ubox
3 75 0.038182937 ubox
4 35 0.295376408 ubox
4 38 0.008902694 ubox
4 44 0.814996698 ubox
4 51 0.009436091 ubox
4 70 0.011353286 ubox
4 73 0.137829904 ubox
5 34 0.301732294 ubox
5 40 0.730959233 ubox
5 42 0.018127552 ubox
5 43 0.610862360 ubox
5 46 0.011783236 ubox
5 69 0.013819182 ubox
5 72 0.006818816 ubox
6 33 0.301762393 ubox
6 36 0.007976654 ubox
6 39 0.776301466 ubox
6 40 0.023806672 ubox
6 42 0.552182842 ubox
6 45 0.011780250 ubox
6 68 0.013868239 ubox
7 32 0.301289451 ubox
7 35 0.007927200 ubox
7 38 0.811770662 ubox
7 44 0.011761478 ubox
7 67 0.013867965 ubox
8 31 0.300375479 ubox
8 32 0.014177323 ubox
8 37 0.810140853 ubox
8 38 0.496125843 ubox
8 66 0.013866278 ubox
9 31 0.019521463 ubox
9 32 0.024222422 ubox
9 35 0.037636783 ubox
9 37 0.497707745 ubox
9 38 0.042741798 ubox
9 65 0.013782170 ubox
10 31 0.026432507 ubox
10 35 0.949607832 ubox
10 37 0.042676643 ubox
10 38 0.015156762 ubox
10 64 0.013742341 ubox
11 33 0.006945963 ubox
11 34 0.951338328 ubox
11 36 0.039396097 ubox
11 40 0.030108402 ubox
12 33 0.950850760 ubox
12 34 0.013667970 ubox
12 36 0.023666869 ubox
12 39 0.030167284 ubox
13 35 0.027487090 ubox
13 38 0.030150607 ubox
13 60 0.003718195 ubox
13 62 0.004749257 ubox
14 18 0.707106781 ubox
14 19 0.707106781 ubox
14 20 0.000000000 ubox
14 27 1.000000000 ubox
14 28 0.000000000 ubox
15 19 0.707106781 ubox
15 20 0.707106781 ubox
15 21 0.000000000 ubox
15 28 1.000000000 ubox
15 29 0.000000000 ubox
16 20 0.707106781 ubox
16 21 0.707106781 ubox
16 29 1.000000000 ubox
18 23 0.707106781 ubox
18 24 0.000000000 ubox
19 23 0.707106781 ubox
19 24 0.707106781 ubox
19 25 0.000000000 ubox
20 23 0.000000000 ubox
20 24 0.707106781 ubox
20 25 0.707106781 ubox
21 24 0.000000000 ubox
21 25 0.707106781 ubox
23 27 1.000000000 ubox
23 28 0.000000000 ubox
24 28 1.000000000 ubox
24 29 0.000000000 ubox
25 29 1.000000000 ubox
30 50 0.003461844 ubox
30 58 0.012339258 ubox
31 40 0.004151163 ubox
31 49 0.003554425 ubox
31 57 0.013070894 ubox
32 39 0.004195647 ubox
32 48 0.003552502 ubox
32 56 0.013074693 ubox
33 38 0.004203901 ubox
33 55 0.013073519 ubox
34 54 0.013057703 ubox
35 45 0.052026235 ubox
35 46 0.003273549 ubox
35 48 0.020866129 ubox
35 52 0.016614827 ubox
35 53 0.009342891 ubox
36 44 0.052405544 ubox
36 51 0.018763268 ubox
37 42 0.003500952 ubox
37 43 0.053385632 ubox
37 46 0.291866020 ubox
37 49 0.007962985 ubox
37 50 0.008455226 ubox
37 53 0.009475197 ubox
37 57 0.009477507 ubox
37 75 0.045562828 ubox
37 76 0.012795947 ubox
38 42 0.052525947 ubox
38 45 0.292188980 ubox
38 48 0.007880677 ubox
38 49 0.008042279 ubox
38 52 0.009960051 ubox
38 56 0.009490373 ubox
38 74 0.045741742 ubox
38 75 0.012453475 ubox
39 44 0.291320449 ubox
39 51 0.009353471 ubox
39 55 0.009487513 ubox
39 73 0.044848756 ubox
40 44 0.006650572 ubox
40 51 0.006696640 ubox
40 54 0.009474546 ubox
40 73 0.014474364 ubox
41 50 0.007767711 ubox
41 72 0.016291563 ubox
42 51 0.009271792 ubox
42 70 0.025704317 ubox
43 51 0.011948024 ubox
43 70 0.011461702 ubox
44 48 0.011227234 ubox
44 49 0.018071660 ubox
44 50 0.010558865 ubox
44 52 0.171573141 ubox
44 53 0.004131785 ubox
44 56 0.006267093 ubox
44 68 0.034363872 ubox
44 69 0.008111284 ubox
44 74 0.036585081 ubox
44 75 0.011046337 ubox
44 76 0.008053580 ubox
45 51 0.171106359 ubox
45 55 0.006301301 ubox
45 67 0.035335865 ubox
45 73 0.035499472 ubox
45 78 0.030577983 ubox
46 51 0.025175821 ubox
46 54 0.006300657 ubox
46 66 0.035304626 ubox
46 73 0.017838566 ubox
46 78 0.049721199 ubox
47 72 0.019414151 ubox
48 65 0.035484854 ubox
48 70 0.004674891 ubox
48 73 0.032629633 ubox
48 78 0.082630802 ubox
49 64 0.035780821 ubox
49 70 0.005758597 ubox
49 73 0.047283819 ubox
49 78 0.615463045 ubox
50 63 0.035733810 ubox
50 71 0.019553134 ubox
50 73 0.071325162 ubox
50 77 0.601878071 ubox
50 78 0.020164746 ubox
50 79 0.007153288 ubox
51 72 0.103613515 ubox
51 74 0.630749507 ubox
51 75 0.073050888 ubox
51 76 0.491657653 ubox
52 62 0.009515615 ubox
52 70 0.036989994 ubox
52 73 0.656934041 ubox
52 78 0.010936182 ubox
53 60 0.035641958 ubox
53 70 0.983546075 ubox
53 73 0.027927369 ubox
54 59 0.035186146 ubox
54 69 0.999084322 ubox
54 72 0.004015185 ubox
54 75 0.010894042 ubox
55 68 0.999135090 ubox
55 74 0.010939701 ubox
56 67 0.999126888 ubox
56 73 0.010917827 ubox
57 65 0.004072189 ubox
57 66 0.999109199 ubox
57 67 0.003224347 ubox
58 64 0.003942782 ubox
58 65 0.997629963 ubox
58 66 0.004497280 ubox
58 71 0.010773443 ubox
59 64 0.996280518 ubox
59 65 0.036058196 ubox
59 70 0.010901335 ubox
60 69 0.010879024 ubox
62 68 0.004723981 ubox
65 76 0.011741219 ubox
66 75 0.012270632 ubox
67 74 0.012286959 ubox
68 73 0.012240307 ubox
70 74 0.003205675 ubox
70 75 0.009175054 ubox
70 76 0.009072001 ubox
72 77 0.009635059 ubox
72 78 0.009616892 ubox
72 79 0.020047153 ubox
74 78 0.020549466 ubox
1 47 0.9500000 lbox
2 46 0.9500000 lbox
3 45 0.9500000 lbox
4 44 0.9500000 lbox
5 40 0.9500000 lbox
6 39 0.9500000 lbox
7 38 0.9500000 lbox
8 37 0.9500000 lbox
10 35 0.9500000 lbox
11 34 0.9500000 lbox
12 33 0.9500000 lbox
53 70 0.9500000 lbox
54 69 0.9500000 lbox
55 68 0.9500000 lbox
56 67 0.9500000 lbox
57 66 0.9500000 lbox
58 65 0.9500000 lbox
59 64 0.9500000 lbox
14 27 0.9500000 lbox
14 18 0.9500000 lbox
18 23 0.9500000 lbox
23 27 0.9500000 lbox
15 28 0.9500000 lbox
15 19 0.9500000 lbox
19 24 0.9500000 lbox
24 28 0.9500000 lbox
16 29 0.9500000 lbox
16 20 0.9500000 lbox
20 25 0.9500000 lbox
25 29 0.9500000 lbox
showpage
end
%%EOF
