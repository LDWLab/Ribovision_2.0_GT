%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 17:21:25 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  % draw strand separators if required
  currentdict /nicks known {
    gsave
    % draw lines in red color
    0 1 1 sethsbcolor
    % draw with line thickness of 0.2
    0.2 setlinewidth
    nicks
    { 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
    } forall
    grestore
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (rnafold_cmd_test_0026)
} def

/sequence { (\
AUCUCAGAUUGCCGAACUGUGCUUUAGCUGGGAUCGAUAACCAUUCAAGAAAAGAUUUAAUGUCACCACAAGGUCUGACCACCCGCCGAAUUCUUGAAGA\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
[ (Protein binding)
  [ 50 0.252572477 0.6000 0.8000 0.9500]
  [ 51 0.999149323 0.6000 0.8000 0.9500]
  [ 52 0.999149323 0.6000 0.8000 0.9500]
  [ 53 0.966698766 0.6000 0.8000 0.9500]
  [ 82 0.169143841 0.6000 0.8000 0.9500]
  [ 83 0.169143841 0.6000 0.8000 0.9500]
  [ 84 0.169143841 0.6000 0.8000 0.9500]
]
] def

/leftData [
[ (Protein binding)
  [ 50 0.252572477 0.6000 0.8000 0.9500]
  [ 51 0.999149323 0.6000 0.8000 0.9500]
  [ 52 0.999149323 0.6000 0.8000 0.9500]
  [ 53 0.966698766 0.6000 0.8000 0.9500]
  [ 82 0.169143841 0.6000 0.8000 0.9500]
  [ 83 0.169143841 0.6000 0.8000 0.9500]
  [ 84 0.169143841 0.6000 0.8000 0.9500]
]
] def

/bottomData [
[ (Protein binding)
  [ 50 0.252572477 0.6000 0.8000 0.9500]
  [ 51 0.999149323 0.6000 0.8000 0.9500]
  [ 52 0.999149323 0.6000 0.8000 0.9500]
  [ 53 0.966698766 0.6000 0.8000 0.9500]
  [ 82 0.169143841 0.6000 0.8000 0.9500]
  [ 83 0.169143841 0.6000 0.8000 0.9500]
  [ 84 0.169143841 0.6000 0.8000 0.9500]
]
] def

/rightData [
[ (Protein binding)
  [ 50 0.252572477 0.6000 0.8000 0.9500]
  [ 51 0.999149323 0.6000 0.8000 0.9500]
  [ 52 0.999149323 0.6000 0.8000 0.9500]
  [ 53 0.966698766 0.6000 0.8000 0.9500]
  [ 82 0.169143841 0.6000 0.8000 0.9500]
  [ 83 0.169143841 0.6000 0.8000 0.9500]
  [ 84 0.169143841 0.6000 0.8000 0.9500]
]
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 9 0.015281180 ubox
1 34 0.999651491 ubox
1 38 0.021356253 ubox
2 8 0.015283142 ubox
2 33 0.999776905 ubox
2 37 0.014379509 ubox
3 7 0.015283146 ubox
3 32 0.999810022 ubox
3 36 0.011780188 ubox
4 31 0.999214997 ubox
5 30 0.999787219 ubox
6 23 0.004180657 ubox
6 25 0.003244922 ubox
6 29 0.999080175 ubox
7 22 0.005910895 ubox
7 24 0.007818695 ubox
7 25 0.018863536 ubox
7 28 0.992714599 ubox
7 35 0.003385338 ubox
8 20 0.014809392 ubox
8 23 0.020509786 ubox
8 24 0.056093652 ubox
8 25 0.114349422 ubox
8 34 0.003379735 ubox
9 19 0.012118539 ubox
9 21 0.011645649 ubox
9 26 0.291772907 ubox
9 27 0.151419095 ubox
9 33 0.003253561 ubox
10 21 0.004053489 ubox
10 26 0.062810510 ubox
10 27 0.010342005 ubox
11 20 0.006613196 ubox
11 22 0.285734401 ubox
11 23 0.025585692 ubox
11 24 0.038750634 ubox
11 25 0.027694616 ubox
11 28 0.003869903 ubox
12 19 0.004608880 ubox
12 21 0.284507628 ubox
12 27 0.010212715 ubox
13 19 0.012930891 ubox
13 21 0.085763403 ubox
13 27 0.021087268 ubox
14 20 0.030969867 ubox
14 22 0.069857943 ubox
14 23 0.020750615 ubox
14 24 0.008363447 ubox
14 25 0.007209188 ubox
15 20 0.068032960 ubox
15 23 0.009412983 ubox
15 24 0.010085994 ubox
15 25 0.005199265 ubox
16 20 0.026083885 ubox
16 23 0.006587252 ubox
16 24 0.003234304 ubox
16 25 0.003890584 ubox
17 21 0.011628449 ubox
17 27 0.008357527 ubox
18 26 0.006685165 ubox
18 27 0.006248810 ubox
19 24 0.007459616 ubox
19 25 0.006796577 ubox
19 28 0.008189060 ubox
20 26 0.014282165 ubox
20 27 0.030198914 ubox
21 25 0.014592269 ubox
21 28 0.067336692 ubox
22 27 0.075346633 ubox
23 27 0.007344780 ubox
29 43 0.012720656 ubox
30 42 0.014041625 ubox
31 41 0.014033825 ubox
31 42 0.003779947 ubox
32 41 0.003808215 ubox
35 49 0.013920328 ubox
35 54 0.008563975 ubox
35 99 0.028924593 ubox
36 41 0.062247139 ubox
36 42 0.095255423 ubox
36 44 0.003340260 ubox
36 45 0.021476970 ubox
36 46 0.066621586 ubox
36 57 0.005741712 ubox
36 58 0.003625464 ubox
36 64 0.054968427 ubox
37 44 0.028937496 ubox
37 45 0.065995774 ubox
37 56 0.006108580 ubox
37 57 0.003723381 ubox
37 61 0.004414914 ubox
37 63 0.055008191 ubox
38 43 0.029994723 ubox
38 55 0.005925414 ubox
38 59 0.007986031 ubox
38 60 0.004218689 ubox
38 62 0.054282502 ubox
38 98 0.004444794 ubox
38 99 0.008409456 ubox
38 100 0.008598111 ubox
39 44 0.007614878 ubox
39 45 0.005081014 ubox
39 58 0.008467007 ubox
39 61 0.050797845 ubox
40 44 0.006067174 ubox
40 57 0.007492010 ubox
40 63 0.004398183 ubox
40 74 0.006069282 ubox
41 49 0.005779411 ubox
41 54 0.003366694 ubox
41 62 0.003563930 ubox
41 73 0.006422785 ubox
41 99 0.111670178 ubox
42 49 0.019080384 ubox
42 54 0.007016459 ubox
42 62 0.022965898 ubox
42 72 0.006411762 ubox
42 77 0.003532690 ubox
42 99 0.488975032 ubox
43 56 0.019541184 ubox
43 57 0.019294948 ubox
43 58 0.004085298 ubox
43 61 0.025547502 ubox
43 76 0.003265330 ubox
44 50 0.003276276 ubox
44 55 0.020404010 ubox
44 60 0.025842863 ubox
44 97 0.023147041 ubox
44 98 0.877987632 ubox
44 99 0.024807565 ubox
44 100 0.012969177 ubox
45 49 0.003422063 ubox
45 54 0.019924370 ubox
45 55 0.058358176 ubox
45 59 0.024439516 ubox
45 78 0.009046390 ubox
45 96 0.004140876 ubox
45 97 0.975129595 ubox
45 98 0.025948313 ubox
45 99 0.007793781 ubox
46 54 0.059879437 ubox
46 77 0.009784448 ubox
46 96 0.985260217 ubox
47 57 0.019119653 ubox
47 58 0.015526484 ubox
47 76 0.007849702 ubox
47 95 0.984787627 ubox
48 56 0.020464930 ubox
48 57 0.015987690 ubox
48 58 0.010154328 ubox
48 76 0.003631080 ubox
48 94 0.984711938 ubox
49 56 0.011477548 ubox
49 57 0.011213091 ubox
49 58 0.008691009 ubox
49 69 0.004001180 ubox
49 75 0.004579959 ubox
49 79 0.012777198 ubox
49 80 0.028831752 ubox
49 92 0.009597618 ubox
49 93 0.984807782 ubox
50 56 0.010340809 ubox
50 57 0.008199068 ubox
50 74 0.003737031 ubox
50 91 0.069261417 ubox
50 92 0.934013623 ubox
51 91 0.037569357 ubox
53 76 0.069379715 ubox
53 91 0.010715665 ubox
53 92 0.005627757 ubox
53 94 0.004653883 ubox
54 64 0.037531358 ubox
54 75 0.074566603 ubox
54 80 0.006749703 ubox
54 83 0.004695208 ubox
54 84 0.025749702 ubox
54 86 0.146111293 ubox
54 87 0.496572729 ubox
54 91 0.013970896 ubox
54 92 0.076659312 ubox
54 93 0.005802409 ubox
55 61 0.005422563 ubox
55 63 0.037543521 ubox
55 74 0.074566179 ubox
55 91 0.117336262 ubox
55 92 0.005843224 ubox
56 60 0.004975872 ubox
56 62 0.037187876 ubox
56 73 0.074347551 ubox
56 85 0.157564948 ubox
56 88 0.010013329 ubox
56 89 0.016780783 ubox
56 90 0.118173366 ubox
57 72 0.073098277 ubox
57 81 0.008698453 ubox
57 85 0.072533825 ubox
57 88 0.016875760 ubox
57 89 0.117313468 ubox
57 90 0.006927375 ubox
58 71 0.065294810 ubox
58 81 0.030191212 ubox
58 85 0.030990061 ubox
58 88 0.112393265 ubox
58 89 0.007674409 ubox
59 92 0.006967288 ubox
60 91 0.013109097 ubox
61 68 0.043750153 ubox
61 70 0.055594872 ubox
61 78 0.008528613 ubox
61 81 0.293263325 ubox
61 85 0.040415464 ubox
61 88 0.004341100 ubox
61 90 0.012963617 ubox
62 67 0.044047705 ubox
62 69 0.058124505 ubox
62 75 0.006139348 ubox
62 79 0.965083814 ubox
62 80 0.217517960 ubox
62 82 0.011727120 ubox
62 83 0.007171602 ubox
62 84 0.023204166 ubox
62 86 0.015671406 ubox
62 87 0.004597934 ubox
62 91 0.004289044 ubox
63 68 0.053124891 ubox
63 77 0.009576063 ubox
63 78 0.992296468 ubox
63 81 0.009656764 ubox
63 85 0.014398328 ubox
63 89 0.012007368 ubox
63 90 0.003658412 ubox
64 77 0.990161961 ubox
64 85 0.005073778 ubox
64 88 0.012365052 ubox
65 74 0.699499724 ubox
65 76 0.655457631 ubox
66 72 0.019875483 ubox
66 73 0.982896391 ubox
66 99 0.003498587 ubox
67 72 0.983108584 ubox
67 73 0.049094297 ubox
67 77 0.004748808 ubox
67 85 0.005355035 ubox
68 74 0.068577979 ubox
68 76 0.004688135 ubox
68 91 0.003448156 ubox
69 73 0.069739734 ubox
69 77 0.006795963 ubox
69 85 0.003425243 ubox
69 96 0.010836911 ubox
70 76 0.006607497 ubox
70 95 0.010878370 ubox
71 94 0.010889799 ubox
72 79 0.003909231 ubox
72 80 0.045914530 ubox
72 83 0.018026260 ubox
72 84 0.005411312 ubox
72 87 0.023063229 ubox
72 93 0.010846504 ubox
73 79 0.045944766 ubox
73 82 0.018114329 ubox
73 83 0.005174336 ubox
73 86 0.023075634 ubox
73 92 0.009634919 ubox
74 78 0.041392198 ubox
74 81 0.017171776 ubox
74 85 0.021098678 ubox
74 89 0.007950655 ubox
75 85 0.007538423 ubox
75 88 0.008278764 ubox
76 85 0.004111088 ubox
76 88 0.003634661 ubox
77 82 0.012064482 ubox
77 83 0.009144004 ubox
77 84 0.009465160 ubox
77 86 0.006677437 ubox
77 87 0.004635561 ubox
79 85 0.004506646 ubox
84 99 0.004099669 ubox
85 93 0.005092486 ubox
86 96 0.006195004 ubox
86 99 0.008581203 ubox
87 96 0.076405555 ubox
87 99 0.015830085 ubox
88 93 0.016123712 ubox
88 94 0.003367254 ubox
88 95 0.074569154 ubox
89 94 0.069101175 ubox
89 95 0.006503522 ubox
90 94 0.005441325 ubox
90 95 0.009040866 ubox
91 96 0.003210684 ubox
91 97 0.004927432 ubox
91 98 0.005449042 ubox
91 100 0.005689734 ubox
92 96 0.004798621 ubox
92 97 0.005434539 ubox
92 98 0.003338933 ubox
92 99 0.005965530 ubox
92 100 0.039518557 ubox
93 99 0.046415019 ubox
94 98 0.041853461 ubox
95 100 0.004015542 ubox
1 34 0.9500000 lbox
2 33 0.9500000 lbox
3 32 0.9500000 lbox
4 31 0.9500000 lbox
5 30 0.9500000 lbox
6 29 0.9500000 lbox
7 28 0.9500000 lbox
44 98 0.9500000 lbox
45 97 0.9500000 lbox
46 96 0.9500000 lbox
47 95 0.9500000 lbox
48 94 0.9500000 lbox
49 93 0.9500000 lbox
50 92 0.9500000 lbox
62 79 0.9500000 lbox
63 78 0.9500000 lbox
64 77 0.9500000 lbox
65 74 0.9500000 lbox
66 73 0.9500000 lbox
67 72 0.9500000 lbox
showpage
end
%%EOF
