%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 17:21:24 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  % draw strand separators if required
  currentdict /nicks known {
    gsave
    % draw lines in red color
    0 1 1 sethsbcolor
    % draw with line thickness of 0.2
    0.2 setlinewidth
    nicks
    { 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
    } forall
    grestore
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (rnafold_cmd_test_0014)
} def

/sequence { (\
CAGAAGCCUCAACUACGCCGAUCGGGAAGAAUCCCCACGUUGCCAAUCCUGUUGAUAGAGCAGCGUUCCAGCCCUCGUAUCUGUAGCGCUUACACUGUGU\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
[ (Protein binding)
  [ 33 0.044150159 0.6000 0.8000 0.9500]
  [ 34 0.063437603 0.6000 0.8000 0.9500]
  [ 35 0.063437603 0.6000 0.8000 0.9500]
  [ 36 0.045553185 0.6000 0.8000 0.9500]
  [ 72 0.134520769 0.6000 0.8000 0.9500]
  [ 73 0.134520769 0.6000 0.8000 0.9500]
  [ 74 0.134520769 0.6000 0.8000 0.9500]
]
] def

/leftData [
[ (Protein binding)
  [ 33 0.044150159 0.6000 0.8000 0.9500]
  [ 34 0.063437603 0.6000 0.8000 0.9500]
  [ 35 0.063437603 0.6000 0.8000 0.9500]
  [ 36 0.045553185 0.6000 0.8000 0.9500]
  [ 72 0.134520769 0.6000 0.8000 0.9500]
  [ 73 0.134520769 0.6000 0.8000 0.9500]
  [ 74 0.134520769 0.6000 0.8000 0.9500]
]
] def

/bottomData [
[ (Protein binding)
  [ 33 0.044150159 0.6000 0.8000 0.9500]
  [ 34 0.063437603 0.6000 0.8000 0.9500]
  [ 35 0.063437603 0.6000 0.8000 0.9500]
  [ 36 0.045553185 0.6000 0.8000 0.9500]
  [ 72 0.134520769 0.6000 0.8000 0.9500]
  [ 73 0.134520769 0.6000 0.8000 0.9500]
  [ 74 0.134520769 0.6000 0.8000 0.9500]
]
] def

/rightData [
[ (Protein binding)
  [ 33 0.044150159 0.6000 0.8000 0.9500]
  [ 34 0.063437603 0.6000 0.8000 0.9500]
  [ 35 0.063437603 0.6000 0.8000 0.9500]
  [ 36 0.045553185 0.6000 0.8000 0.9500]
  [ 72 0.134520769 0.6000 0.8000 0.9500]
  [ 73 0.134520769 0.6000 0.8000 0.9500]
  [ 74 0.134520769 0.6000 0.8000 0.9500]
]
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 17 0.018608031 ubox
1 20 0.125449928 ubox
1 24 0.030105942 ubox
1 25 0.026498407 ubox
1 26 0.022220474 ubox
1 29 0.018880213 ubox
1 42 0.014465980 ubox
1 51 0.067434440 ubox
1 54 0.034789017 ubox
1 83 0.641282814 ubox
1 97 0.750387966 ubox
1 99 0.034036755 ubox
2 9 0.136087801 ubox
2 14 0.004187576 ubox
2 41 0.014465628 ubox
2 50 0.067439788 ubox
2 53 0.034777209 ubox
2 82 0.641285742 ubox
2 96 0.750446624 ubox
2 98 0.032713812 ubox
3 8 0.136079684 ubox
3 13 0.004168252 ubox
3 40 0.014444806 ubox
3 48 0.026056176 ubox
3 49 0.062402075 ubox
3 52 0.034381028 ubox
3 81 0.641284092 ubox
3 91 0.006549887 ubox
3 93 0.066549109 ubox
3 95 0.748160809 ubox
3 96 0.004820770 ubox
4 47 0.036197542 ubox
4 78 0.003451228 ubox
4 80 0.628180209 ubox
4 90 0.012820136 ubox
4 91 0.725519601 ubox
5 41 0.005266816 ubox
5 47 0.023751180 ubox
5 50 0.029136002 ubox
5 75 0.020316155 ubox
5 78 0.038520285 ubox
5 80 0.023910121 ubox
5 90 0.747630947 ubox
5 91 0.028906202 ubox
6 38 0.003620764 ubox
6 40 0.005880780 ubox
6 43 0.053101279 ubox
6 44 0.006803220 ubox
6 48 0.004287884 ubox
6 49 0.029596091 ubox
6 72 0.009831269 ubox
6 73 0.003793599 ubox
6 74 0.019428806 ubox
6 75 0.003871165 ubox
6 76 0.023445343 ubox
6 78 0.602184494 ubox
6 87 0.012070702 ubox
6 89 0.750572979 ubox
6 90 0.006020012 ubox
6 93 0.006644449 ubox
7 39 0.005967170 ubox
7 42 0.053064744 ubox
7 71 0.009478905 ubox
7 77 0.602572745 ubox
7 86 0.011889446 ubox
7 88 0.750107638 ubox
8 39 0.004066550 ubox
8 42 0.007399547 ubox
8 51 0.006601503 ubox
8 71 0.030732278 ubox
8 77 0.039996257 ubox
8 83 0.012549272 ubox
8 86 0.693080685 ubox
8 88 0.019952081 ubox
9 46 0.004821383 ubox
9 70 0.030520963 ubox
9 77 0.006946558 ubox
9 79 0.006471331 ubox
9 83 0.007121701 ubox
9 85 0.672721263 ubox
9 86 0.070897851 ubox
10 39 0.007020692 ubox
10 77 0.003875230 ubox
10 83 0.104072678 ubox
10 86 0.017153271 ubox
11 75 0.009778345 ubox
11 82 0.078874477 ubox
11 84 0.046956942 ubox
12 75 0.003270004 ubox
12 82 0.053208804 ubox
12 84 0.054026587 ubox
13 71 0.007216538 ubox
13 83 0.094775433 ubox
13 86 0.015590454 ubox
14 70 0.006310233 ubox
14 79 0.011223787 ubox
14 83 0.007119817 ubox
14 85 0.017599987 ubox
15 78 0.017198497 ubox
15 80 0.009665103 ubox
15 82 0.010512052 ubox
15 84 0.051057206 ubox
16 39 0.004040148 ubox
16 77 0.023038561 ubox
16 83 0.055076895 ubox
16 86 0.012407850 ubox
17 38 0.003823620 ubox
17 43 0.006089874 ubox
17 44 0.003724893 ubox
17 76 0.022964272 ubox
17 78 0.040966693 ubox
17 80 0.004360590 ubox
17 81 0.010592464 ubox
17 82 0.015832996 ubox
17 84 0.150076191 ubox
17 87 0.012448361 ubox
18 42 0.005017498 ubox
18 77 0.043048833 ubox
18 83 0.164621412 ubox
18 86 0.012069984 ubox
19 39 0.016926319 ubox
19 42 0.021389539 ubox
19 77 0.391264716 ubox
19 83 0.032782096 ubox
20 33 0.005316940 ubox
20 36 0.008340954 ubox
20 38 0.020532023 ubox
20 40 0.004522654 ubox
20 41 0.049985725 ubox
20 48 0.031600237 ubox
20 68 0.005618975 ubox
20 72 0.043813572 ubox
20 73 0.055548699 ubox
20 74 0.116985664 ubox
20 75 0.028106387 ubox
20 76 0.645080517 ubox
20 78 0.028657750 ubox
20 80 0.007954134 ubox
20 81 0.447097813 ubox
20 82 0.009404891 ubox
20 84 0.007422407 ubox
20 87 0.008632170 ubox
21 32 0.006142452 ubox
21 40 0.050636231 ubox
21 41 0.005958053 ubox
21 47 0.031609135 ubox
21 67 0.005605562 ubox
21 75 0.617813758 ubox
21 78 0.052201002 ubox
21 80 0.448230137 ubox
21 82 0.003610456 ubox
21 84 0.022692241 ubox
22 30 0.019510855 ubox
22 31 0.004782234 ubox
22 37 0.018894382 ubox
22 39 0.049473176 ubox
22 46 0.030888587 ubox
22 70 0.025124181 ubox
22 71 0.041410415 ubox
22 77 0.047331704 ubox
22 79 0.439104188 ubox
22 83 0.015793360 ubox
22 85 0.009539184 ubox
23 29 0.021178359 ubox
23 39 0.014754338 ubox
23 51 0.007183171 ubox
23 71 0.221015220 ubox
23 77 0.459676229 ubox
23 83 0.048208125 ubox
24 33 0.005980917 ubox
24 35 0.130782033 ubox
24 36 0.044517067 ubox
24 38 0.012611492 ubox
24 44 0.030117221 ubox
24 50 0.007206395 ubox
24 68 0.003863443 ubox
24 69 0.098224882 ubox
24 72 0.050311999 ubox
24 73 0.153014199 ubox
24 74 0.720025713 ubox
24 75 0.075287957 ubox
24 76 0.454538689 ubox
24 78 0.047395042 ubox
24 81 0.013586367 ubox
24 82 0.048438804 ubox
25 32 0.005723119 ubox
25 33 0.004138810 ubox
25 34 0.131425303 ubox
25 35 0.043933419 ubox
25 36 0.013672834 ubox
25 43 0.030144114 ubox
25 44 0.003742936 ubox
25 49 0.007221810 ubox
25 67 0.003831070 ubox
25 68 0.097976584 ubox
25 69 0.447874413 ubox
25 72 0.152388572 ubox
25 73 0.723186402 ubox
25 74 0.190206269 ubox
25 75 0.415044986 ubox
25 76 0.032518656 ubox
25 78 0.005840587 ubox
25 80 0.013297090 ubox
25 81 0.048397918 ubox
25 82 0.017662827 ubox
26 33 0.131886924 ubox
26 34 0.043192181 ubox
26 35 0.013674024 ubox
26 43 0.003748694 ubox
26 48 0.007221686 ubox
26 67 0.096190472 ubox
26 68 0.448964669 ubox
26 69 0.007127487 ubox
26 72 0.722361365 ubox
26 73 0.189905972 ubox
26 74 0.412771841 ubox
26 75 0.027013999 ubox
26 76 0.064277438 ubox
26 80 0.043621533 ubox
26 81 0.018056145 ubox
27 32 0.120700540 ubox
27 41 0.028774157 ubox
27 47 0.006984418 ubox
27 66 0.056434346 ubox
27 67 0.447045334 ubox
27 75 0.056887248 ubox
27 78 0.014311596 ubox
27 80 0.017833657 ubox
28 32 0.006185616 ubox
28 40 0.027846034 ubox
28 66 0.206478307 ubox
28 67 0.024734004 ubox
28 75 0.045368067 ubox
28 78 0.015211037 ubox
28 82 0.004716063 ubox
29 36 0.004547905 ubox
29 38 0.016313045 ubox
29 43 0.003598780 ubox
29 66 0.013307338 ubox
29 67 0.044295673 ubox
29 68 0.546096111 ubox
29 69 0.317987365 ubox
29 72 0.219800479 ubox
29 73 0.132699020 ubox
29 74 0.056686192 ubox
29 76 0.048797118 ubox
29 81 0.004787419 ubox
30 41 0.004684945 ubox
30 66 0.028317119 ubox
30 67 0.564904320 ubox
30 75 0.047616877 ubox
30 80 0.004599031 ubox
31 40 0.005038550 ubox
31 66 0.281020892 ubox
31 67 0.227631145 ubox
31 75 0.004108332 ubox
32 39 0.004886258 ubox
32 65 0.113817144 ubox
32 70 0.114294189 ubox
32 71 0.069101380 ubox
33 65 0.027823458 ubox
33 71 0.095116716 ubox
34 63 0.004370387 ubox
34 65 0.012520508 ubox
34 71 0.050351144 ubox
35 65 0.011258142 ubox
35 71 0.027802934 ubox
36 65 0.010724455 ubox
36 71 0.033870860 ubox
36 99 0.005466242 ubox
37 66 0.913444473 ubox
37 67 0.026735462 ubox
37 98 0.005501483 ubox
38 60 0.003576143 ubox
38 65 0.989098524 ubox
38 97 0.005504049 ubox
39 64 0.996682685 ubox
39 72 0.020242970 ubox
39 96 0.005148679 ubox
40 58 0.003956932 ubox
40 63 0.996241241 ubox
40 71 0.020522509 ubox
41 57 0.004107798 ubox
41 62 0.995830696 ubox
41 70 0.020537327 ubox
41 94 0.005057071 ubox
42 56 0.003996547 ubox
42 61 0.996719104 ubox
42 69 0.020479295 ubox
42 72 0.004034576 ubox
42 93 0.005109941 ubox
43 60 0.996300769 ubox
43 71 0.004212790 ubox
44 51 0.023669238 ubox
44 54 0.140161353 ubox
44 58 0.938607484 ubox
44 60 0.017406701 ubox
45 50 0.021434198 ubox
45 52 0.003761895 ubox
45 53 0.140793798 ubox
45 56 0.036264535 ubox
45 67 0.018689457 ubox
46 52 0.138189242 ubox
46 53 0.012951286 ubox
46 56 0.931194591 ubox
46 66 0.020021661 ubox
47 51 0.127951278 ubox
47 54 0.010833544 ubox
47 55 0.967364736 ubox
47 57 0.015318568 ubox
47 58 0.008899335 ubox
47 59 0.067241465 ubox
47 65 0.019442602 ubox
48 54 0.956229329 ubox
48 58 0.060734955 ubox
48 65 0.007368534 ubox
49 54 0.169545705 ubox
49 58 0.060517071 ubox
49 60 0.006032380 ubox
49 63 0.022888601 ubox
49 86 0.006249646 ubox
50 54 0.006262248 ubox
50 55 0.018910252 ubox
50 57 0.067121965 ubox
50 59 0.012880877 ubox
50 62 0.023093618 ubox
50 85 0.006368580 ubox
51 56 0.057368268 ubox
51 61 0.023213091 ubox
51 84 0.006163154 ubox
52 57 0.011006212 ubox
52 59 0.010661140 ubox
52 60 0.023182122 ubox
52 83 0.004787909 ubox
53 58 0.010545401 ubox
53 59 0.023405909 ubox
53 99 0.003631012 ubox
54 61 0.003424705 ubox
54 81 0.025921889 ubox
54 100 0.003282970 ubox
55 80 0.025977558 ubox
55 84 0.004482483 ubox
55 98 0.064020489 ubox
55 100 0.020453414 ubox
56 79 0.025876128 ubox
56 83 0.004582045 ubox
56 97 0.065222965 ubox
56 99 0.021844395 ubox
57 78 0.024839216 ubox
57 82 0.004610422 ubox
57 96 0.065532262 ubox
57 98 0.022077224 ubox
58 68 0.003509818 ubox
58 76 0.025899598 ubox
58 81 0.004609217 ubox
58 93 0.003468537 ubox
58 95 0.065369878 ubox
59 67 0.003522970 ubox
59 75 0.025947214 ubox
59 80 0.004560896 ubox
59 96 0.022226362 ubox
60 66 0.003517491 ubox
60 74 0.025850982 ubox
60 91 0.009949814 ubox
60 93 0.036578540 ubox
60 95 0.022203170 ubox
60 98 0.011938728 ubox
61 65 0.003497886 ubox
61 77 0.003324295 ubox
61 97 0.012567821 ubox
62 90 0.068389494 ubox
62 91 0.008816740 ubox
62 96 0.012435782 ubox
63 72 0.026151883 ubox
63 89 0.071313704 ubox
63 95 0.012302226 ubox
64 71 0.026203527 ubox
64 88 0.071345219 ubox
65 87 0.071350205 ubox
65 93 0.012268982 ubox
66 86 0.071260025 ubox
66 92 0.012142072 ubox
67 85 0.067339925 ubox
68 83 0.003786772 ubox
69 83 0.071356839 ubox
69 97 0.005027817 ubox
70 82 0.071429275 ubox
70 90 0.018107623 ubox
70 96 0.005015703 ubox
71 78 0.010474175 ubox
71 81 0.070042539 ubox
71 89 0.019096720 ubox
71 95 0.004968904 ubox
72 77 0.018657554 ubox
72 88 0.019070784 ubox
73 77 0.015428148 ubox
73 86 0.010094081 ubox
74 86 0.015860570 ubox
75 79 0.005987530 ubox
75 85 0.016044718 ubox
76 83 0.022652748 ubox
76 88 0.017978637 ubox
76 97 0.003610202 ubox
76 99 0.011299637 ubox
77 81 0.005429417 ubox
77 82 0.016137381 ubox
77 87 0.019037667 ubox
77 89 0.003664623 ubox
77 93 0.017897907 ubox
77 95 0.007212110 ubox
77 98 0.010782062 ubox
77 100 0.003946569 ubox
78 85 0.006147104 ubox
78 86 0.018697135 ubox
78 88 0.003588804 ubox
78 92 0.017905083 ubox
78 94 0.006021518 ubox
78 97 0.009473070 ubox
78 99 0.014076778 ubox
79 84 0.006142850 ubox
79 91 0.017676755 ubox
79 96 0.009430866 ubox
79 98 0.015720006 ubox
80 97 0.015223924 ubox
81 88 0.006860918 ubox
81 97 0.005257238 ubox
81 99 0.003859278 ubox
82 88 0.008261291 ubox
82 94 0.044716584 ubox
82 99 0.004552595 ubox
83 87 0.008284493 ubox
83 89 0.008214594 ubox
83 93 0.049757645 ubox
83 95 0.003871677 ubox
83 98 0.005907411 ubox
84 88 0.007745661 ubox
84 92 0.050062650 ubox
84 94 0.003941126 ubox
84 97 0.057186479 ubox
84 99 0.006747349 ubox
85 91 0.049357848 ubox
85 96 0.064426113 ubox
85 98 0.007261370 ubox
85 100 0.020112281 ubox
86 90 0.033509458 ubox
86 93 0.010023073 ubox
86 95 0.065111483 ubox
86 98 0.025241160 ubox
86 100 0.598676223 ubox
87 97 0.026621624 ubox
87 99 0.640263525 ubox
88 93 0.051928356 ubox
88 95 0.013141473 ubox
88 96 0.021403086 ubox
88 98 0.641078649 ubox
88 100 0.019913565 ubox
89 97 0.641287833 ubox
89 99 0.021310488 ubox
90 94 0.009847453 ubox
90 97 0.005508699 ubox
91 97 0.006834052 ubox
91 99 0.017771455 ubox
92 96 0.010679063 ubox
92 98 0.020383346 ubox
92 100 0.025494755 ubox
93 97 0.020460506 ubox
93 99 0.028769822 ubox
94 98 0.023342152 ubox
94 100 0.006490237 ubox
95 99 0.007234550 ubox
1 97 0.9500000 lbox
2 96 0.9500000 lbox
3 95 0.9500000 lbox
4 91 0.9500000 lbox
5 90 0.9500000 lbox
6 89 0.9500000 lbox
7 88 0.9500000 lbox
8 86 0.9500000 lbox
9 85 0.9500000 lbox
25 69 0.9500000 lbox
26 68 0.9500000 lbox
27 67 0.9500000 lbox
37 66 0.9500000 lbox
38 65 0.9500000 lbox
39 64 0.9500000 lbox
40 63 0.9500000 lbox
41 62 0.9500000 lbox
42 61 0.9500000 lbox
43 60 0.9500000 lbox
44 58 0.9500000 lbox
46 56 0.9500000 lbox
47 55 0.9500000 lbox
48 54 0.9500000 lbox
showpage
end
%%EOF
