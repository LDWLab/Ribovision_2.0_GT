%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 17:16:51 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  % draw strand separators if required
  currentdict /nicks known {
    gsave
    % draw lines in red color
    0 1 1 sethsbcolor
    % draw with line thickness of 0.2
    0.2 setlinewidth
    nicks
    { 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
    } forall
    grestore
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (rnafold_theo_test_0001)
} def

/sequence { (\
GGUGAUACCAGAUUUCGCGAAAAAUCCCUUGGCAGCACCUCGCACAUCUUGUUGUCUGAUUAUUGAUUUUUCGCGAAACCAUUUGAUCAUAUGACAAGAUUGAG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
4 36 11 26 0.949999988 uImotif
4 36 11 26 0.949999988 lImotif
%start of base pair probability data
1 38 0.005419739 ubox
1 39 0.990779117 ubox
1 40 0.005940095 ubox
1 41 0.009667387 ubox
1 43 0.003224268 ubox
2 38 0.999871782 ubox
2 39 0.005648277 ubox
3 37 0.999766054 ubox
4 36 0.999994010 ubox
8 32 0.999994010 ubox
9 31 0.999994010 ubox
10 30 0.999994010 ubox
11 26 0.999994010 ubox
12 25 0.999645111 ubox
13 20 0.005105126 ubox
13 21 0.010917041 ubox
13 22 0.017675260 ubox
13 23 0.035411302 ubox
13 24 0.997542879 ubox
14 19 0.006155695 ubox
14 20 0.016755991 ubox
14 21 0.027561393 ubox
14 22 0.049980599 ubox
14 23 0.992663262 ubox
14 24 0.013349507 ubox
14 77 0.003395777 ubox
15 19 0.017334398 ubox
15 20 0.030858840 ubox
15 21 0.057611095 ubox
15 22 0.907706701 ubox
15 23 0.017783112 ubox
15 24 0.003772724 ubox
15 76 0.003450521 ubox
16 75 0.003458874 ubox
17 74 0.003459007 ubox
18 73 0.003459007 ubox
19 72 0.003458959 ubox
20 71 0.003457678 ubox
21 70 0.003453951 ubox
22 69 0.003453510 ubox
23 68 0.003453607 ubox
24 67 0.003454938 ubox
25 66 0.003456135 ubox
26 65 0.003442438 ubox
39 104 0.121678808 ubox
40 44 0.005627657 ubox
40 102 0.006041834 ubox
40 103 0.460295602 ubox
40 104 0.015442930 ubox
41 102 0.481143307 ubox
41 104 0.256340986 ubox
42 100 0.007561391 ubox
42 101 0.464445681 ubox
43 102 0.651333055 ubox
43 104 0.086217778 ubox
44 100 0.037395823 ubox
44 101 0.644539781 ubox
45 102 0.351444288 ubox
45 104 0.029609032 ubox
46 100 0.932163979 ubox
46 101 0.251224929 ubox
47 99 0.994731375 ubox
47 103 0.003799770 ubox
48 98 0.999924627 ubox
48 102 0.003872004 ubox
49 97 0.999409501 ubox
50 96 0.999408010 ubox
50 99 0.003810075 ubox
51 95 0.999944477 ubox
52 94 0.999555250 ubox
52 97 0.005144517 ubox
53 91 0.004627425 ubox
53 93 0.994529004 ubox
53 94 0.003307064 ubox
53 96 0.006430405 ubox
54 90 0.007127809 ubox
54 92 0.988065312 ubox
54 95 0.006798411 ubox
55 89 0.004707887 ubox
55 91 0.981993777 ubox
55 94 0.007061050 ubox
56 93 0.007244402 ubox
57 89 0.987671374 ubox
58 88 0.999929455 ubox
59 87 0.999685953 ubox
60 85 0.016826367 ubox
60 86 0.998690791 ubox
61 76 0.004104049 ubox
61 85 0.992653565 ubox
61 86 0.006127495 ubox
62 82 0.047642113 ubox
62 83 0.176995902 ubox
62 84 0.947703498 ubox
63 73 0.006810970 ubox
63 75 0.012389970 ubox
63 76 0.086403585 ubox
63 77 0.016918120 ubox
63 78 0.018035219 ubox
63 81 0.055826951 ubox
63 85 0.004540903 ubox
63 86 0.004958153 ubox
64 73 0.069659158 ubox
64 75 0.086854277 ubox
64 76 0.014774395 ubox
64 77 0.016359613 ubox
64 78 0.004407510 ubox
64 81 0.886265845 ubox
64 85 0.006057057 ubox
65 70 0.003192456 ubox
65 71 0.003981115 ubox
65 72 0.089836431 ubox
65 74 0.086771873 ubox
65 79 0.111075910 ubox
65 80 0.899374498 ubox
65 82 0.026500291 ubox
65 83 0.095700050 ubox
65 84 0.014014156 ubox
65 88 0.003163067 ubox
66 70 0.004204203 ubox
66 71 0.088256322 ubox
66 82 0.100764246 ubox
66 83 0.016900726 ubox
66 87 0.003170551 ubox
67 73 0.010136436 ubox
67 75 0.004124524 ubox
67 76 0.052778594 ubox
67 77 0.106978290 ubox
67 78 0.848719760 ubox
67 81 0.093091790 ubox
67 86 0.003178122 ubox
68 73 0.004307960 ubox
68 75 0.050924676 ubox
68 76 0.114202906 ubox
68 77 0.890265543 ubox
68 78 0.264737512 ubox
68 81 0.008150750 ubox
69 73 0.005304874 ubox
69 75 0.111234182 ubox
69 76 0.878433847 ubox
69 77 0.286182009 ubox
69 78 0.107307000 ubox
69 81 0.003600426 ubox
70 75 0.803185218 ubox
70 76 0.287316695 ubox
70 77 0.110618147 ubox
70 78 0.036793092 ubox
71 75 0.260730729 ubox
71 76 0.097627335 ubox
71 77 0.036074135 ubox
71 78 0.009103241 ubox
71 81 0.003624056 ubox
73 79 0.012787084 ubox
73 80 0.012930689 ubox
73 82 0.004451393 ubox
74 85 0.025287504 ubox
75 79 0.008359856 ubox
75 80 0.024036826 ubox
75 83 0.010230884 ubox
75 84 0.028005624 ubox
76 82 0.010145666 ubox
76 83 0.029087808 ubox
76 84 0.007501321 ubox
77 82 0.024437242 ubox
77 83 0.009679032 ubox
77 84 0.004787036 ubox
78 82 0.007682046 ubox
78 83 0.005181879 ubox
80 85 0.003650435 ubox
1 39 0.9500000 lbox
2 38 0.9500000 lbox
3 37 0.9500000 lbox
4 36 0.9500000 lbox
8 32 0.9500000 lbox
9 31 0.9500000 lbox
10 30 0.9500000 lbox
11 26 0.9500000 lbox
12 25 0.9500000 lbox
13 24 0.9500000 lbox
14 23 0.9500000 lbox
15 22 0.9500000 lbox
43 102 0.9500000 lbox
44 101 0.9500000 lbox
46 100 0.9500000 lbox
47 99 0.9500000 lbox
48 98 0.9500000 lbox
49 97 0.9500000 lbox
50 96 0.9500000 lbox
51 95 0.9500000 lbox
52 94 0.9500000 lbox
53 93 0.9500000 lbox
54 92 0.9500000 lbox
55 91 0.9500000 lbox
57 89 0.9500000 lbox
58 88 0.9500000 lbox
59 87 0.9500000 lbox
60 86 0.9500000 lbox
61 85 0.9500000 lbox
62 84 0.9500000 lbox
64 81 0.9500000 lbox
65 80 0.9500000 lbox
67 78 0.9500000 lbox
68 77 0.9500000 lbox
69 76 0.9500000 lbox
70 75 0.9500000 lbox
showpage
end
%%EOF
