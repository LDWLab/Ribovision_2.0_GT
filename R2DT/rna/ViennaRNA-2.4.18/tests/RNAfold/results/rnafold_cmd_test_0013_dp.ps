%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 17:21:24 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  % draw strand separators if required
  currentdict /nicks known {
    gsave
    % draw lines in red color
    0 1 1 sethsbcolor
    % draw with line thickness of 0.2
    0.2 setlinewidth
    nicks
    { 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
    } forall
    grestore
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (rnafold_cmd_test_0013)
} def

/sequence { (\
GUCAGACUGCCAAGCAACCGACUUUGGGAUAACUCUGUGUUAUUCUGAUAUGGGUGAUAGAGGGGUCGAGCUUCAGUUCGACCAACAUUAAUUGAAAAGG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
[ (Protein binding)
  [ 95 0.705351174 0.6000 0.8000 0.9500]
  [ 96 0.999848962 0.6000 0.8000 0.9500]
  [ 97 0.999848962 0.6000 0.8000 0.9500]
  [ 98 0.708644927 0.6000 0.8000 0.9500]
]
] def

/leftData [
[ (Protein binding)
  [ 95 0.705351174 0.6000 0.8000 0.9500]
  [ 96 0.999848962 0.6000 0.8000 0.9500]
  [ 97 0.999848962 0.6000 0.8000 0.9500]
  [ 98 0.708644927 0.6000 0.8000 0.9500]
]
] def

/bottomData [
[ (Protein binding)
  [ 95 0.705351174 0.6000 0.8000 0.9500]
  [ 96 0.999848962 0.6000 0.8000 0.9500]
  [ 97 0.999848962 0.6000 0.8000 0.9500]
  [ 98 0.708644927 0.6000 0.8000 0.9500]
]
] def

/rightData [
[ (Protein binding)
  [ 95 0.705351174 0.6000 0.8000 0.9500]
  [ 96 0.999848962 0.6000 0.8000 0.9500]
  [ 97 0.999848962 0.6000 0.8000 0.9500]
  [ 98 0.708644927 0.6000 0.8000 0.9500]
]
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 22 0.931409827 ubox
1 23 0.006069521 ubox
1 30 0.191847410 ubox
1 33 0.034332169 ubox
1 49 0.049186079 ubox
1 58 0.299542763 ubox
1 82 0.047689746 ubox
1 83 0.003924474 ubox
2 21 0.931434817 ubox
2 27 0.023754262 ubox
2 29 0.191145700 ubox
2 32 0.029565059 ubox
2 48 0.049191193 ubox
2 57 0.299542402 ubox
2 81 0.047853455 ubox
3 9 0.008185697 ubox
3 20 0.931405668 ubox
3 26 0.044352337 ubox
3 27 0.010993175 ubox
3 28 0.189440019 ubox
3 47 0.049193356 ubox
3 56 0.299541544 ubox
3 80 0.047855248 ubox
4 8 0.010183885 ubox
4 23 0.036884000 ubox
4 24 0.008084470 ubox
4 25 0.053801774 ubox
4 46 0.047881694 ubox
4 55 0.290173201 ubox
5 10 0.005587118 ubox
5 11 0.006563483 ubox
5 15 0.012558224 ubox
5 18 0.113054550 ubox
5 19 0.069243363 ubox
5 22 0.037216781 ubox
5 23 0.007134978 ubox
5 24 0.057900631 ubox
5 25 0.047952033 ubox
5 45 0.046567054 ubox
5 55 0.008791538 ubox
5 78 0.046260891 ubox
5 79 0.006819073 ubox
6 23 0.055332308 ubox
6 24 0.045736313 ubox
6 25 0.056872712 ubox
6 44 0.042301403 ubox
6 51 0.003190578 ubox
6 55 0.052389345 ubox
6 77 0.047550309 ubox
6 78 0.004840536 ubox
7 14 0.047208040 ubox
7 20 0.029409678 ubox
7 26 0.044854868 ubox
7 27 0.037371620 ubox
7 52 0.222143075 ubox
7 53 0.106578381 ubox
7 54 0.074159492 ubox
7 76 0.047838754 ubox
8 13 0.041576401 ubox
8 14 0.016205301 ubox
8 16 0.030277440 ubox
8 17 0.026787647 ubox
8 20 0.008281447 ubox
8 21 0.037465490 ubox
8 26 0.036465808 ubox
8 27 0.004762573 ubox
8 42 0.018070513 ubox
8 50 0.071833955 ubox
8 52 0.104441608 ubox
8 53 0.073094747 ubox
8 54 0.005523795 ubox
8 75 0.047807690 ubox
9 15 0.045623846 ubox
9 18 0.015803797 ubox
9 19 0.008906804 ubox
9 22 0.095908621 ubox
9 23 0.013241727 ubox
9 24 0.009163862 ubox
9 25 0.023855490 ubox
9 41 0.012271238 ubox
9 49 0.073756510 ubox
9 51 0.063575671 ubox
9 55 0.004714203 ubox
9 74 0.047496809 ubox
10 14 0.014267626 ubox
10 20 0.020093225 ubox
10 27 0.004020585 ubox
10 47 0.004700144 ubox
10 52 0.004864728 ubox
10 54 0.005757393 ubox
11 20 0.048027978 ubox
11 26 0.004023036 ubox
11 47 0.005004714 ubox
11 53 0.005612998 ubox
12 49 0.003391364 ubox
12 73 0.004496286 ubox
13 72 0.014210687 ubox
14 71 0.017714051 ubox
15 20 0.008296981 ubox
15 47 0.003201318 ubox
15 70 0.017624135 ubox
17 55 0.019173458 ubox
18 27 0.008387935 ubox
18 52 0.004807562 ubox
18 53 0.011354528 ubox
18 54 0.092564468 ubox
19 26 0.008469887 ubox
19 52 0.013964223 ubox
19 53 0.093696862 ubox
19 54 0.005707694 ubox
19 68 0.025073031 ubox
20 25 0.006830511 ubox
20 41 0.026205685 ubox
20 49 0.006657978 ubox
20 51 0.017962369 ubox
20 67 0.028775622 ubox
20 71 0.009946723 ubox
20 72 0.003204611 ubox
20 73 0.018029504 ubox
20 74 0.003570369 ubox
21 38 0.006673130 ubox
21 40 0.029146297 ubox
21 49 0.018129688 ubox
21 51 0.128175485 ubox
21 55 0.019980292 ubox
21 66 0.028784515 ubox
21 72 0.018088646 ubox
21 73 0.004389521 ubox
22 27 0.009740696 ubox
22 37 0.006713765 ubox
22 39 0.029228679 ubox
22 47 0.006825813 ubox
22 52 0.030141083 ubox
22 53 0.014964316 ubox
22 54 0.027307881 ubox
22 65 0.028760546 ubox
22 70 0.020677013 ubox
23 27 0.010739699 ubox
23 28 0.015570888 ubox
23 29 0.028119299 ubox
23 31 0.020159359 ubox
23 32 0.054302036 ubox
23 37 0.003256110 ubox
23 47 0.007855735 ubox
23 48 0.026081534 ubox
23 50 0.033664803 ubox
23 52 0.018479702 ubox
23 53 0.028246136 ubox
23 54 0.006679549 ubox
23 61 0.010228938 ubox
23 62 0.005862009 ubox
23 63 0.005143938 ubox
23 64 0.019818475 ubox
23 69 0.020336740 ubox
23 70 0.011723874 ubox
24 28 0.027381066 ubox
24 29 0.013331516 ubox
24 31 0.061758896 ubox
24 32 0.046537155 ubox
24 37 0.009323432 ubox
24 47 0.021256836 ubox
24 48 0.398024476 ubox
24 50 0.010299191 ubox
24 52 0.014786607 ubox
24 53 0.006367801 ubox
24 60 0.010701916 ubox
24 61 0.006849033 ubox
24 62 0.005217744 ubox
24 63 0.017581785 ubox
24 68 0.019763873 ubox
24 69 0.013158941 ubox
24 70 0.004742179 ubox
25 29 0.009565201 ubox
25 31 0.053637270 ubox
25 32 0.041212129 ubox
25 37 0.006783689 ubox
25 47 0.415456226 ubox
25 48 0.023468345 ubox
25 50 0.006668851 ubox
25 52 0.006085345 ubox
25 59 0.010746663 ubox
25 60 0.006833874 ubox
25 61 0.005295829 ubox
25 62 0.015148459 ubox
25 63 0.003408850 ubox
25 68 0.013320015 ubox
25 69 0.005324841 ubox
25 70 0.005315714 ubox
26 30 0.045586051 ubox
26 33 0.156158534 ubox
26 34 0.142509575 ubox
26 35 0.052884236 ubox
26 36 0.010087459 ubox
26 45 0.005042691 ubox
26 46 0.438218633 ubox
26 49 0.003830371 ubox
26 58 0.010091816 ubox
26 67 0.012357477 ubox
26 71 0.006800248 ubox
26 72 0.009102697 ubox
26 73 0.015528780 ubox
27 33 0.176485901 ubox
27 34 0.078810149 ubox
27 35 0.011122327 ubox
27 36 0.015797974 ubox
27 40 0.003308712 ubox
27 44 0.004096612 ubox
27 45 0.442372791 ubox
27 46 0.016859630 ubox
27 66 0.009116023 ubox
27 67 0.005593371 ubox
27 71 0.009516369 ubox
27 72 0.016284964 ubox
28 33 0.086249970 ubox
28 34 0.011158160 ubox
28 35 0.017813028 ubox
28 44 0.442672130 ubox
28 45 0.017017177 ubox
28 66 0.003522490 ubox
28 67 0.029686073 ubox
28 71 0.016330719 ubox
29 34 0.017218576 ubox
29 38 0.003793797 ubox
29 43 0.443981272 ubox
29 44 0.012254559 ubox
29 58 0.014253549 ubox
29 66 0.029832270 ubox
30 37 0.003845228 ubox
30 42 0.444178358 ubox
30 57 0.013041467 ubox
30 59 0.003216880 ubox
30 63 0.007098596 ubox
30 65 0.028019085 ubox
30 69 0.005327173 ubox
31 36 0.003533827 ubox
31 41 0.444108490 ubox
31 58 0.003249514 ubox
31 66 0.003838874 ubox
32 40 0.444184162 ubox
32 55 0.027710769 ubox
32 66 0.008548052 ubox
33 37 0.003168210 ubox
33 39 0.444242396 ubox
33 54 0.028520943 ubox
33 56 0.004706590 ubox
33 62 0.297746233 ubox
33 63 0.258203066 ubox
33 64 0.412582018 ubox
33 65 0.008625340 ubox
34 53 0.020252673 ubox
34 54 0.011363639 ubox
34 61 0.299003712 ubox
34 62 0.033336976 ubox
34 63 0.690764695 ubox
34 64 0.008402786 ubox
35 52 0.020067286 ubox
35 53 0.024582801 ubox
35 60 0.299026909 ubox
35 62 0.839286868 ubox
35 63 0.035432421 ubox
36 52 0.024608991 ubox
36 59 0.273241163 ubox
36 60 0.006175464 ubox
36 61 0.838546212 ubox
36 62 0.029880500 ubox
37 49 0.003253674 ubox
37 51 0.030915556 ubox
37 58 0.204239183 ubox
38 48 0.003237702 ubox
38 50 0.031811269 ubox
38 57 0.155216398 ubox
38 59 0.845764616 ubox
39 49 0.031959505 ubox
39 58 0.868401511 ubox
40 48 0.031956888 ubox
40 53 0.013845003 ubox
40 54 0.003482313 ubox
40 56 0.018792044 ubox
40 57 0.879437434 ubox
41 47 0.031648581 ubox
41 52 0.016831746 ubox
41 56 0.890658696 ubox
42 46 0.026349568 ubox
42 49 0.003196706 ubox
42 51 0.017243112 ubox
42 55 0.893221100 ubox
43 50 0.016990697 ubox
43 52 0.007385862 ubox
43 53 0.004371721 ubox
43 54 0.892258101 ubox
44 52 0.003382560 ubox
44 53 0.890145792 ubox
44 54 0.036366023 ubox
45 52 0.891241463 ubox
45 53 0.048572112 ubox
45 54 0.014945133 ubox
45 63 0.013237197 ubox
46 50 0.027291817 ubox
46 52 0.047559763 ubox
46 53 0.015337549 ubox
46 57 0.003589014 ubox
46 62 0.014752706 ubox
46 94 0.003300838 ubox
47 51 0.027048401 ubox
47 93 0.011828063 ubox
48 55 0.013450652 ubox
48 58 0.005337155 ubox
48 92 0.012714346 ubox
48 93 0.005344208 ubox
49 54 0.014052395 ubox
49 56 0.006395482 ubox
49 57 0.005956012 ubox
49 59 0.062941737 ubox
49 61 0.003734035 ubox
49 90 0.012063716 ubox
49 91 0.012396220 ubox
49 94 0.013801310 ubox
49 95 0.009501418 ubox
49 98 0.005978086 ubox
49 99 0.006836427 ubox
49 100 0.009526660 ubox
50 55 0.006664907 ubox
50 58 0.066625203 ubox
50 88 0.029797624 ubox
50 89 0.011593422 ubox
50 92 0.026423915 ubox
50 93 0.015712306 ubox
51 56 0.003298040 ubox
51 57 0.066813643 ubox
51 59 0.013837735 ubox
51 60 0.004370202 ubox
51 61 0.004875957 ubox
51 84 0.003577361 ubox
51 87 0.032953610 ubox
51 90 0.011547067 ubox
51 91 0.028631478 ubox
51 94 0.021247292 ubox
51 95 0.083935241 ubox
51 98 0.016517570 ubox
51 99 0.011549427 ubox
51 100 0.004989350 ubox
52 58 0.014882644 ubox
52 83 0.003850454 ubox
52 86 0.033708214 ubox
52 89 0.010965378 ubox
52 92 0.010708862 ubox
52 93 0.041308201 ubox
53 58 0.008450382 ubox
53 82 0.003809542 ubox
53 86 0.011962804 ubox
53 88 0.009107389 ubox
53 89 0.065745336 ubox
53 92 0.043794591 ubox
53 93 0.105398066 ubox
54 86 0.009600416 ubox
54 88 0.074325632 ubox
54 89 0.003505376 ubox
54 92 0.112879629 ubox
54 93 0.013483843 ubox
55 60 0.005618776 ubox
55 61 0.008382044 ubox
55 62 0.006061992 ubox
55 63 0.004350194 ubox
55 84 0.003980935 ubox
55 85 0.008681177 ubox
55 87 0.075196780 ubox
55 90 0.112966515 ubox
55 91 0.106461524 ubox
55 94 0.072119000 ubox
55 95 0.012199524 ubox
56 79 0.004039586 ubox
56 86 0.074954729 ubox
56 89 0.126587194 ubox
56 92 0.017308885 ubox
56 93 0.114456672 ubox
57 78 0.003888745 ubox
57 88 0.127751561 ubox
57 89 0.023943116 ubox
57 92 0.117867737 ubox
57 93 0.012287756 ubox
58 63 0.003428741 ubox
58 84 0.028124854 ubox
58 85 0.012604748 ubox
58 87 0.123100046 ubox
58 90 0.113749568 ubox
58 91 0.106278560 ubox
58 94 0.004284583 ubox
59 88 0.048936140 ubox
59 89 0.134510642 ubox
59 92 0.005998342 ubox
59 93 0.006302271 ubox
60 86 0.099947118 ubox
60 88 0.133503170 ubox
60 89 0.128071844 ubox
60 92 0.005168844 ubox
60 93 0.008722276 ubox
61 88 0.131322497 ubox
61 89 0.015187903 ubox
61 92 0.009320960 ubox
61 93 0.003273119 ubox
62 83 0.006146815 ubox
62 86 0.198823246 ubox
62 88 0.011844490 ubox
62 89 0.009135877 ubox
63 82 0.005251553 ubox
63 83 0.054783632 ubox
63 86 0.066392427 ubox
63 88 0.011599507 ubox
63 89 0.007721399 ubox
63 92 0.003790919 ubox
64 82 0.039250655 ubox
64 83 0.907382652 ubox
64 86 0.004313829 ubox
65 82 0.997019229 ubox
65 83 0.023334588 ubox
65 86 0.003685459 ubox
66 81 0.998535425 ubox
67 80 0.998800661 ubox
68 79 0.998809225 ubox
69 78 0.998238831 ubox
70 77 0.996631283 ubox
71 76 0.994350958 ubox
82 100 0.010984690 ubox
83 94 0.207353826 ubox
83 99 0.022021024 ubox
83 100 0.007289047 ubox
84 88 0.007868574 ubox
84 89 0.017703102 ubox
84 92 0.009659998 ubox
84 93 0.209505928 ubox
85 89 0.011020984 ubox
85 92 0.179090732 ubox
85 93 0.013104583 ubox
86 94 0.307050370 ubox
86 99 0.047825349 ubox
86 100 0.018282589 ubox
87 92 0.013242635 ubox
87 93 0.303447216 ubox
88 94 0.015550030 ubox
88 95 0.034268526 ubox
88 98 0.006801204 ubox
88 99 0.021037080 ubox
88 100 0.010407748 ubox
89 94 0.036842255 ubox
89 95 0.014056094 ubox
89 98 0.026223483 ubox
89 99 0.014606772 ubox
89 100 0.006066759 ubox
92 98 0.009498984 ubox
92 99 0.043098847 ubox
92 100 0.024539026 ubox
93 98 0.053396756 ubox
93 99 0.036325199 ubox
93 100 0.021715473 ubox
1 22 0.9500000 lbox
2 21 0.9500000 lbox
3 20 0.9500000 lbox
34 63 0.9500000 lbox
35 62 0.9500000 lbox
36 61 0.9500000 lbox
38 59 0.9500000 lbox
39 58 0.9500000 lbox
40 57 0.9500000 lbox
41 56 0.9500000 lbox
42 55 0.9500000 lbox
43 54 0.9500000 lbox
44 53 0.9500000 lbox
45 52 0.9500000 lbox
64 83 0.9500000 lbox
65 82 0.9500000 lbox
66 81 0.9500000 lbox
67 80 0.9500000 lbox
68 79 0.9500000 lbox
69 78 0.9500000 lbox
70 77 0.9500000 lbox
71 76 0.9500000 lbox
showpage
end
%%EOF
