%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 17:21:25 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  % draw strand separators if required
  currentdict /nicks known {
    gsave
    % draw lines in red color
    0 1 1 sethsbcolor
    % draw with line thickness of 0.2
    0.2 setlinewidth
    nicks
    { 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
    } forall
    grestore
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (rnafold_cmd_test_0041)
} def

/sequence { (\
UCGUAGUACUCUGUAGCGCCGGCGCCUGGCAACUGUAUUUUAGACUUGUACUCGUCACCCCAGUGUCGAGACGGAUUUGUGCCGGGGAUUGUCCCCCCUU\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
[ (Protein binding)
  [ 93 0.987885535 0.6000 0.8000 0.9500]
  [ 94 0.991712272 0.6000 0.8000 0.9500]
  [ 95 0.995631099 0.6000 0.8000 0.9500]
  [ 96 0.996061385 0.6000 0.8000 0.9500]
  [ 97 0.992251456 0.6000 0.8000 0.9500]
  [ 98 0.988319218 0.6000 0.8000 0.9500]
]
] def

/leftData [
[ (Protein binding)
  [ 93 0.987885535 0.6000 0.8000 0.9500]
  [ 94 0.991712272 0.6000 0.8000 0.9500]
  [ 95 0.995631099 0.6000 0.8000 0.9500]
  [ 96 0.996061385 0.6000 0.8000 0.9500]
  [ 97 0.992251456 0.6000 0.8000 0.9500]
  [ 98 0.988319218 0.6000 0.8000 0.9500]
]
] def

/bottomData [
[ (Protein binding)
  [ 93 0.987885535 0.6000 0.8000 0.9500]
  [ 94 0.991712272 0.6000 0.8000 0.9500]
  [ 95 0.995631099 0.6000 0.8000 0.9500]
  [ 96 0.996061385 0.6000 0.8000 0.9500]
  [ 97 0.992251456 0.6000 0.8000 0.9500]
  [ 98 0.988319218 0.6000 0.8000 0.9500]
]
] def

/rightData [
[ (Protein binding)
  [ 93 0.987885535 0.6000 0.8000 0.9500]
  [ 94 0.991712272 0.6000 0.8000 0.9500]
  [ 95 0.995631099 0.6000 0.8000 0.9500]
  [ 96 0.996061385 0.6000 0.8000 0.9500]
  [ 97 0.992251456 0.6000 0.8000 0.9500]
  [ 98 0.988319218 0.6000 0.8000 0.9500]
]
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 22 0.999706136 ubox
1 24 0.017302519 ubox
1 44 0.004067501 ubox
1 74 0.003809406 ubox
1 85 0.015699724 ubox
2 21 0.999853481 ubox
2 43 0.004067513 ubox
2 73 0.003821916 ubox
2 84 0.015719136 ubox
3 9 0.016264062 ubox
3 17 0.004269273 ubox
3 19 0.013330872 ubox
3 20 0.999624271 ubox
3 41 0.003938929 ubox
3 72 0.003834275 ubox
3 83 0.015736528 ubox
4 8 0.018606271 ubox
4 13 0.011234030 ubox
4 15 0.014602250 ubox
4 16 0.008921351 ubox
4 18 0.044753152 ubox
4 71 0.003792958 ubox
5 12 0.012421621 ubox
5 14 0.017231103 ubox
5 39 0.003964201 ubox
6 11 0.015593801 ubox
6 12 0.004713477 ubox
6 14 0.004805243 ubox
6 17 0.384639390 ubox
6 19 0.036492204 ubox
6 38 0.004042367 ubox
6 82 0.015627416 ubox
7 13 0.006073171 ubox
7 15 0.050010788 ubox
7 16 0.349283685 ubox
7 18 0.028748676 ubox
7 37 0.004057190 ubox
7 81 0.015720798 ubox
8 12 0.003814137 ubox
8 14 0.042810043 ubox
8 36 0.004058041 ubox
8 80 0.015719742 ubox
9 13 0.041648415 ubox
9 16 0.041028481 ubox
9 18 0.023875106 ubox
9 35 0.004053074 ubox
9 79 0.015703982 ubox
10 15 0.003648858 ubox
18 30 0.003443317 ubox
19 29 0.003569690 ubox
20 28 0.003583803 ubox
20 68 0.016047216 ubox
21 27 0.003551862 ubox
21 67 0.016180287 ubox
22 26 0.003475860 ubox
22 66 0.016181347 ubox
23 65 0.016186358 ubox
23 86 0.012432036 ubox
23 87 0.523266636 ubox
23 91 0.107333819 ubox
24 64 0.016117486 ubox
24 89 0.022843040 ubox
24 90 0.103871149 ubox
24 92 0.009713898 ubox
25 63 0.012582429 ubox
25 85 0.089959505 ubox
25 86 0.990875278 ubox
25 87 0.064138239 ubox
25 91 0.006265572 ubox
26 63 0.010172118 ubox
26 84 0.088760039 ubox
26 85 0.993974683 ubox
26 86 0.052780870 ubox
27 62 0.014303405 ubox
27 84 0.994138736 ubox
27 85 0.037164675 ubox
28 59 0.005783786 ubox
28 60 0.004712560 ubox
28 61 0.014259610 ubox
28 83 0.999790915 ubox
29 58 0.005888418 ubox
29 59 0.004755260 ubox
29 60 0.014170540 ubox
29 82 0.999829635 ubox
29 83 0.003845728 ubox
29 92 0.003748119 ubox
30 79 0.005850925 ubox
30 81 0.999667202 ubox
30 91 0.003945318 ubox
31 76 0.009521476 ubox
31 77 0.020163520 ubox
31 78 0.011566395 ubox
31 80 0.961852220 ubox
31 90 0.003934683 ubox
32 55 0.013616106 ubox
32 76 0.040623501 ubox
32 77 0.018578330 ubox
32 78 0.034408639 ubox
32 80 0.237884480 ubox
32 89 0.003868621 ubox
33 54 0.013927008 ubox
33 74 0.079678349 ubox
33 79 0.331210030 ubox
33 87 0.003709160 ubox
34 73 0.080370659 ubox
34 74 0.005726152 ubox
34 75 0.018873615 ubox
34 79 0.047377744 ubox
34 86 0.003691459 ubox
35 51 0.015610670 ubox
35 72 0.080078584 ubox
35 76 0.249177713 ubox
35 77 0.074314984 ubox
35 78 0.067630034 ubox
35 80 0.012203944 ubox
35 82 0.004312516 ubox
36 50 0.015630363 ubox
36 71 0.079109321 ubox
36 73 0.011217065 ubox
36 74 0.024637589 ubox
36 75 0.249335919 ubox
36 79 0.060393796 ubox
36 81 0.005286430 ubox
37 49 0.015608940 ubox
37 76 0.205233225 ubox
37 77 0.033378101 ubox
37 78 0.061675453 ubox
37 80 0.021394129 ubox
38 48 0.015373327 ubox
38 71 0.003447745 ubox
38 73 0.024379402 ubox
38 74 0.034494814 ubox
38 75 0.211862470 ubox
38 79 0.027725832 ubox
39 71 0.003877570 ubox
39 73 0.023709145 ubox
39 74 0.192706277 ubox
39 75 0.063456143 ubox
39 79 0.030063913 ubox
39 81 0.004137310 ubox
40 71 0.006478486 ubox
40 73 0.112498618 ubox
40 74 0.059753274 ubox
40 75 0.065232385 ubox
40 79 0.053863324 ubox
41 71 0.006124929 ubox
41 73 0.035670748 ubox
41 74 0.057514327 ubox
41 75 0.016513814 ubox
41 79 0.835755123 ubox
42 76 0.043342151 ubox
42 77 0.057202715 ubox
42 78 0.879355523 ubox
42 80 0.009105513 ubox
43 56 0.003425850 ubox
43 67 0.006061131 ubox
43 72 0.015969306 ubox
43 76 0.053846714 ubox
43 77 0.892372759 ubox
43 78 0.048916463 ubox
44 55 0.003439031 ubox
44 66 0.006069640 ubox
44 76 0.888824919 ubox
44 77 0.049192149 ubox
44 78 0.014329204 ubox
44 80 0.015363203 ubox
45 54 0.003437485 ubox
45 65 0.006019673 ubox
45 70 0.019249182 ubox
45 73 0.034646988 ubox
45 74 0.284344877 ubox
45 79 0.021012820 ubox
46 63 0.004079225 ubox
46 69 0.019253163 ubox
46 73 0.200834686 ubox
46 74 0.868115968 ubox
46 75 0.075226579 ubox
47 62 0.004458847 ubox
47 68 0.019216529 ubox
47 71 0.004854716 ubox
47 73 0.952506693 ubox
47 74 0.061813533 ubox
47 75 0.010334531 ubox
48 61 0.004503839 ubox
48 67 0.019207266 ubox
48 72 0.993506239 ubox
48 76 0.003545138 ubox
49 65 0.018138940 ubox
49 71 0.990525965 ubox
49 73 0.008033360 ubox
49 74 0.003707651 ubox
49 75 0.003449248 ubox
50 64 0.018745246 ubox
50 66 0.004899520 ubox
51 63 0.018763196 ubox
51 65 0.004932452 ubox
51 70 0.997250383 ubox
52 62 0.018405230 ubox
52 69 0.999468394 ubox
53 63 0.004324395 ubox
53 68 0.999624271 ubox
54 59 0.003171373 ubox
54 60 0.012225904 ubox
54 61 0.010398808 ubox
54 66 0.004382781 ubox
54 67 0.998412780 ubox
55 65 0.004676084 ubox
56 63 0.005422531 ubox
56 65 0.998454748 ubox
57 64 0.998081961 ubox
57 66 0.008266759 ubox
58 63 0.993539085 ubox
58 65 0.008782424 ubox
59 63 0.024156045 ubox
84 95 0.010543781 ubox
84 96 0.014400618 ubox
84 97 0.009154853 ubox
84 98 0.007163306 ubox
85 94 0.010654939 ubox
85 95 0.023024097 ubox
85 96 0.009200628 ubox
85 97 0.007168275 ubox
86 93 0.010724251 ubox
86 94 0.029198070 ubox
86 95 0.012213361 ubox
86 96 0.007160208 ubox
87 92 0.015571743 ubox
87 93 0.034877500 ubox
87 94 0.015634039 ubox
87 95 0.008309515 ubox
88 92 0.031887950 ubox
1 22 0.9500000 lbox
2 21 0.9500000 lbox
3 20 0.9500000 lbox
25 86 0.9500000 lbox
26 85 0.9500000 lbox
27 84 0.9500000 lbox
28 83 0.9500000 lbox
29 82 0.9500000 lbox
30 81 0.9500000 lbox
31 80 0.9500000 lbox
41 79 0.9500000 lbox
42 78 0.9500000 lbox
43 77 0.9500000 lbox
44 76 0.9500000 lbox
46 74 0.9500000 lbox
47 73 0.9500000 lbox
48 72 0.9500000 lbox
49 71 0.9500000 lbox
51 70 0.9500000 lbox
52 69 0.9500000 lbox
53 68 0.9500000 lbox
54 67 0.9500000 lbox
56 65 0.9500000 lbox
57 64 0.9500000 lbox
58 63 0.9500000 lbox
showpage
end
%%EOF
