%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 17:13:45 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  % draw strand separators if required
  currentdict /nicks known {
    gsave
    % draw lines in red color
    0 1 1 sethsbcolor
    % draw with line thickness of 0.2
    0.2 setlinewidth
    nicks
    { 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
    } forall
    grestore
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (rnafold_pf_test_0020)
} def

/sequence { (\
AAACACGGAUGGCAUUGUAUCACACUAGCGCUGCAAGAUAAUCUUAAAAUCGGGCAUCUCUAGAUGGACAAUGGGAAUCCACAUGGUGAACUUUCAAAAG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 84 0.008161990 ubox
1 87 0.025286795 ubox
1 92 0.009799893 ubox
1 93 0.026262673 ubox
1 94 0.031556985 ubox
2 84 0.021605891 ubox
2 87 0.051117089 ubox
2 92 0.032494493 ubox
2 93 0.039767308 ubox
2 94 0.017826049 ubox
3 84 0.038216974 ubox
3 87 0.151296753 ubox
3 92 0.040120638 ubox
3 93 0.019210094 ubox
3 94 0.006145194 ubox
4 11 0.007256217 ubox
4 85 0.369532725 ubox
4 86 0.154360933 ubox
4 88 0.487274964 ubox
4 100 0.013909304 ubox
5 10 0.006053599 ubox
5 84 0.367756484 ubox
5 87 0.489566637 ubox
6 11 0.003771502 ubox
6 12 0.004407295 ubox
6 85 0.089069283 ubox
6 86 0.488502559 ubox
6 88 0.009466037 ubox
6 100 0.012942407 ubox
7 79 0.009153573 ubox
7 80 0.989828836 ubox
7 82 0.016754689 ubox
7 84 0.044997595 ubox
7 95 0.006113129 ubox
8 21 0.005197623 ubox
8 78 0.008167155 ubox
8 79 0.991382994 ubox
8 80 0.005915696 ubox
8 82 0.032770316 ubox
8 84 0.083275042 ubox
8 94 0.005783960 ubox
8 95 0.005495297 ubox
9 20 0.005212825 ubox
9 78 0.990471084 ubox
9 84 0.020302435 ubox
9 93 0.005555852 ubox
9 94 0.005425070 ubox
10 19 0.005201995 ubox
10 74 0.003163568 ubox
10 75 0.013664599 ubox
10 76 0.044857640 ubox
10 77 0.970940298 ubox
10 81 0.119716768 ubox
10 83 0.025954269 ubox
11 18 0.005044208 ubox
11 79 0.004516573 ubox
11 80 0.123370215 ubox
11 82 0.025572833 ubox
11 91 0.003959000 ubox
11 92 0.005131831 ubox
12 78 0.004743185 ubox
12 79 0.123352107 ubox
12 80 0.012579775 ubox
12 91 0.005405502 ubox
13 73 0.994096796 ubox
13 74 0.092284172 ubox
13 75 0.011392718 ubox
14 72 0.998697655 ubox
14 78 0.007668885 ubox
15 71 0.998765213 ubox
15 74 0.004239034 ubox
15 76 0.014601854 ubox
15 77 0.007225277 ubox
16 70 0.999111168 ubox
16 71 0.007389847 ubox
16 73 0.004329672 ubox
16 75 0.014996540 ubox
16 76 0.006593682 ubox
17 69 0.998792277 ubox
17 72 0.004640420 ubox
18 66 0.013456384 ubox
18 67 0.015546324 ubox
18 68 0.936511122 ubox
18 70 0.005977013 ubox
18 71 0.004504412 ubox
18 73 0.015266992 ubox
18 74 0.005025584 ubox
19 65 0.028076450 ubox
19 72 0.015268556 ubox
20 64 0.029809622 ubox
20 66 0.034411511 ubox
20 67 0.786119089 ubox
20 68 0.309195475 ubox
20 71 0.012301471 ubox
21 63 0.023690023 ubox
21 66 0.870045018 ubox
21 67 0.415474213 ubox
22 65 0.843408515 ubox
23 63 0.037386753 ubox
23 66 0.423809737 ubox
23 67 0.021686742 ubox
24 65 0.424368975 ubox
25 63 0.995835334 ubox
26 62 0.999214162 ubox
26 63 0.003984340 ubox
27 59 0.007944053 ubox
27 61 0.999562227 ubox
28 58 0.008726254 ubox
28 59 0.004086797 ubox
28 60 0.998891067 ubox
30 55 0.006205457 ubox
30 57 0.031770560 ubox
30 58 0.956213559 ubox
30 59 0.019904024 ubox
31 54 0.006168895 ubox
32 52 0.003173399 ubox
32 53 0.005832850 ubox
32 56 0.988202299 ubox
33 51 0.003278912 ubox
33 55 0.999912705 ubox
34 53 0.011254371 ubox
34 54 0.999755084 ubox
35 45 0.042608589 ubox
36 44 0.043610017 ubox
36 50 0.004193831 ubox
36 59 0.004398325 ubox
37 43 0.043885971 ubox
37 51 0.998147918 ubox
37 58 0.004455743 ubox
38 42 0.038191486 ubox
38 45 0.006443249 ubox
38 50 0.993781724 ubox
38 57 0.004446550 ubox
39 46 0.075228331 ubox
39 47 0.026274119 ubox
39 48 0.090685401 ubox
39 49 0.956417868 ubox
39 56 0.004224057 ubox
40 44 0.023029389 ubox
40 45 0.093717157 ubox
40 50 0.003976782 ubox
41 45 0.048086768 ubox
41 50 0.013575942 ubox
42 46 0.100542318 ubox
42 47 0.074199724 ubox
42 48 0.065566646 ubox
42 49 0.026188153 ubox
42 53 0.008012127 ubox
43 52 0.008220750 ubox
43 53 0.004384739 ubox
44 48 0.022922324 ubox
44 49 0.010082343 ubox
44 52 0.004224213 ubox
45 49 0.004902075 ubox
71 84 0.003641174 ubox
72 81 0.005525823 ubox
72 83 0.004133238 ubox
73 80 0.008130932 ubox
73 82 0.004216864 ubox
74 79 0.008825399 ubox
74 80 0.021785525 ubox
74 91 0.004999852 ubox
74 92 0.004688552 ubox
74 94 0.003522077 ubox
74 95 0.016662534 ubox
75 79 0.021468957 ubox
75 80 0.004391773 ubox
75 91 0.004955537 ubox
75 93 0.003827434 ubox
75 94 0.016719431 ubox
75 95 0.010254520 ubox
76 92 0.003798823 ubox
76 93 0.016647064 ubox
76 94 0.010246392 ubox
77 87 0.003969555 ubox
77 92 0.015328386 ubox
77 93 0.009893940 ubox
78 86 0.003349002 ubox
78 89 0.007382879 ubox
78 90 0.008188184 ubox
79 85 0.003422705 ubox
79 86 0.012693035 ubox
79 88 0.006704177 ubox
80 85 0.013990818 ubox
80 86 0.004489702 ubox
80 88 0.039355742 ubox
81 87 0.065725225 ubox
81 92 0.004800283 ubox
81 93 0.006190903 ubox
81 94 0.006972618 ubox
82 86 0.068372139 ubox
82 88 0.070306351 ubox
82 100 0.082777450 ubox
83 87 0.057275240 ubox
83 92 0.013311608 ubox
83 93 0.023196339 ubox
83 94 0.024316720 ubox
84 88 0.003620983 ubox
84 89 0.023475016 ubox
84 90 0.018650617 ubox
84 96 0.215918911 ubox
84 97 0.026736736 ubox
84 98 0.057742776 ubox
84 99 0.163772048 ubox
84 100 0.028243849 ubox
85 91 0.100815275 ubox
85 92 0.074574862 ubox
85 93 0.011424306 ubox
85 94 0.022823548 ubox
85 95 0.239539343 ubox
86 91 0.081649422 ubox
86 92 0.012904571 ubox
86 93 0.032719877 ubox
86 94 0.227439515 ubox
86 95 0.077159890 ubox
87 96 0.503711130 ubox
87 97 0.026713185 ubox
87 98 0.013766855 ubox
87 99 0.012190298 ubox
87 100 0.004434849 ubox
88 92 0.031038632 ubox
88 93 0.025752908 ubox
88 94 0.020121118 ubox
88 95 0.556835743 ubox
89 93 0.023313178 ubox
89 94 0.520862566 ubox
90 94 0.014738904 ubox
91 100 0.187345043 ubox
92 96 0.009504882 ubox
92 97 0.014263061 ubox
92 98 0.024375699 ubox
92 99 0.187869840 ubox
92 100 0.019223548 ubox
93 97 0.022975524 ubox
93 98 0.164043618 ubox
93 99 0.030714519 ubox
93 100 0.015000059 ubox
94 98 0.027768418 ubox
94 99 0.018821307 ubox
94 100 0.006902292 ubox
95 100 0.029809741 ubox
7 80 0.9500000 lbox
8 79 0.9500000 lbox
9 78 0.9500000 lbox
10 77 0.9500000 lbox
13 73 0.9500000 lbox
14 72 0.9500000 lbox
15 71 0.9500000 lbox
16 70 0.9500000 lbox
17 69 0.9500000 lbox
18 68 0.9500000 lbox
20 67 0.9500000 lbox
21 66 0.9500000 lbox
22 65 0.9500000 lbox
25 63 0.9500000 lbox
26 62 0.9500000 lbox
27 61 0.9500000 lbox
28 60 0.9500000 lbox
30 58 0.9500000 lbox
32 56 0.9500000 lbox
33 55 0.9500000 lbox
34 54 0.9500000 lbox
37 51 0.9500000 lbox
38 50 0.9500000 lbox
39 49 0.9500000 lbox
showpage
end
%%EOF
