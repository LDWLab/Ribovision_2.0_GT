%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 17:21:25 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  % draw strand separators if required
  currentdict /nicks known {
    gsave
    % draw lines in red color
    0 1 1 sethsbcolor
    % draw with line thickness of 0.2
    0.2 setlinewidth
    nicks
    { 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
    } forall
    grestore
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (rnafold_cmd_test_0034)
} def

/sequence { (\
UAACGGUAUUAAGGGACGACCAGACUCUUGACUAGAUCCAAAUCCACGAGUAUGCAGUUUCUGAAUCCGGACCUGUCGACCGCGGAACCGGGUGGGCUAA\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
[ (Protein binding)
  [ 40 0.999795556 0.6000 0.8000 0.9500]
  [ 41 0.999795556 0.6000 0.8000 0.9500]
  [ 42 0.999795556 0.6000 0.8000 0.9500]
]
] def

/leftData [
[ (Protein binding)
  [ 40 0.999795556 0.6000 0.8000 0.9500]
  [ 41 0.999795556 0.6000 0.8000 0.9500]
  [ 42 0.999795556 0.6000 0.8000 0.9500]
]
] def

/bottomData [
[ (Protein binding)
  [ 40 0.999795556 0.6000 0.8000 0.9500]
  [ 41 0.999795556 0.6000 0.8000 0.9500]
  [ 42 0.999795556 0.6000 0.8000 0.9500]
]
] def

/rightData [
[ (Protein binding)
  [ 40 0.999795556 0.6000 0.8000 0.9500]
  [ 41 0.999795556 0.6000 0.8000 0.9500]
  [ 42 0.999795556 0.6000 0.8000 0.9500]
]
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 11 0.019516880 ubox
1 30 0.998342780 ubox
1 31 0.045453825 ubox
1 34 0.011447159 ubox
1 35 0.004450219 ubox
1 63 0.023762317 ubox
1 64 0.011670192 ubox
2 10 0.019544578 ubox
2 29 0.999406042 ubox
2 33 0.009657993 ubox
2 59 0.019977033 ubox
2 62 0.017502378 ubox
3 9 0.019552287 ubox
3 26 0.004925135 ubox
3 28 0.999430554 ubox
3 29 0.004424217 ubox
3 58 0.026532665 ubox
4 23 0.052045745 ubox
4 57 0.026368760 ubox
5 17 0.003162520 ubox
5 20 0.005424120 ubox
5 21 0.062172737 ubox
5 25 0.044624140 ubox
5 26 0.957744940 ubox
5 27 0.167409587 ubox
6 20 0.062286328 ubox
6 21 0.006934785 ubox
6 25 0.988655623 ubox
6 26 0.080532792 ubox
6 27 0.020769002 ubox
6 55 0.026368621 ubox
7 19 0.040374280 ubox
7 22 0.011032320 ubox
7 23 0.054888976 ubox
7 24 0.958673431 ubox
7 54 0.026384945 ubox
8 26 0.004327177 ubox
8 53 0.026185947 ubox
9 18 0.004364949 ubox
9 19 0.003370525 ubox
9 22 0.213067375 ubox
9 23 0.142885282 ubox
9 24 0.018391712 ubox
9 52 0.025699162 ubox
10 19 0.005255284 ubox
10 22 0.056444177 ubox
10 23 0.018960415 ubox
10 24 0.006881036 ubox
13 17 0.014908267 ubox
13 20 0.209320057 ubox
13 21 0.342590707 ubox
14 20 0.351826558 ubox
14 21 0.130785216 ubox
14 47 0.003989550 ubox
15 20 0.115291832 ubox
15 21 0.028980959 ubox
17 23 0.027987275 ubox
21 30 0.007384790 ubox
21 54 0.004423491 ubox
22 29 0.007197288 ubox
22 53 0.004415234 ubox
22 98 0.005566080 ubox
23 28 0.005814378 ubox
23 38 0.016354043 ubox
23 39 0.003596377 ubox
23 97 0.005838287 ubox
24 37 0.016300305 ubox
24 51 0.020716738 ubox
25 50 0.021027006 ubox
25 96 0.006299035 ubox
26 36 0.016728205 ubox
26 49 0.021026665 ubox
26 95 0.006228115 ubox
27 35 0.017045421 ubox
27 48 0.020981527 ubox
27 94 0.006216857 ubox
28 34 0.016840335 ubox
28 100 0.003808436 ubox
29 46 0.019501708 ubox
29 99 0.005360637 ubox
30 44 0.004747160 ubox
30 45 0.019452038 ubox
30 97 0.006007048 ubox
30 98 0.005230359 ubox
31 43 0.005048621 ubox
31 51 0.008036602 ubox
31 58 0.005462480 ubox
31 93 0.015430918 ubox
31 98 0.112838678 ubox
32 50 0.008281645 ubox
32 57 0.005786180 ubox
32 92 0.015479298 ubox
32 94 0.058241760 ubox
32 95 0.407967495 ubox
32 96 0.534724932 ubox
33 49 0.007883092 ubox
33 56 0.005706210 ubox
33 63 0.006348849 ubox
33 75 0.003631349 ubox
33 91 0.008869439 ubox
33 94 0.396317602 ubox
33 95 0.529152206 ubox
33 96 0.043196542 ubox
33 99 0.426280543 ubox
33 100 0.010253378 ubox
34 43 0.003980871 ubox
34 62 0.006900139 ubox
34 74 0.019735279 ubox
34 93 0.252035394 ubox
34 98 0.444291752 ubox
35 39 0.004160334 ubox
35 44 0.009755114 ubox
35 47 0.004909881 ubox
35 61 0.006953118 ubox
35 72 0.004589132 ubox
35 73 0.020652245 ubox
35 89 0.004343503 ubox
35 93 0.014290737 ubox
35 97 0.445633488 ubox
35 98 0.012052894 ubox
36 43 0.009077170 ubox
36 53 0.005076429 ubox
36 60 0.006886674 ubox
36 93 0.908330174 ubox
36 98 0.004358197 ubox
37 49 0.003626912 ubox
37 52 0.004901872 ubox
37 71 0.022299876 ubox
37 87 0.004075311 ubox
37 90 0.003912917 ubox
37 91 0.028138572 ubox
37 92 0.948575936 ubox
37 94 0.029459393 ubox
37 95 0.029612716 ubox
37 96 0.087181646 ubox
38 48 0.003744501 ubox
38 50 0.003915941 ubox
38 70 0.022875475 ubox
38 90 0.029176904 ubox
38 91 0.965380500 ubox
38 92 0.220202190 ubox
38 94 0.033646984 ubox
38 95 0.086836998 ubox
38 96 0.010370806 ubox
39 48 0.005057780 ubox
39 57 0.004353443 ubox
39 69 0.022833190 ubox
39 90 0.964152996 ubox
39 91 0.220424197 ubox
39 92 0.030998488 ubox
39 94 0.086424960 ubox
39 95 0.010416386 ubox
40 93 0.010316741 ubox
43 64 0.008823626 ubox
43 65 0.006178130 ubox
43 71 0.006295097 ubox
43 86 0.978940708 ubox
43 87 0.032888232 ubox
43 90 0.010136035 ubox
43 91 0.005521772 ubox
43 92 0.004931654 ubox
43 96 0.007392771 ubox
44 48 0.003223714 ubox
44 63 0.008489956 ubox
44 70 0.006880537 ubox
44 85 0.998787771 ubox
44 91 0.004727924 ubox
44 92 0.008515589 ubox
44 95 0.009812083 ubox
45 54 0.003280241 ubox
45 63 0.021273381 ubox
45 69 0.006804855 ubox
45 84 0.998616543 ubox
45 85 0.003469609 ubox
45 90 0.004626842 ubox
45 91 0.008523119 ubox
45 94 0.009826796 ubox
46 62 0.021425859 ubox
46 93 0.009695241 ubox
47 69 0.005020667 ubox
47 82 0.998508145 ubox
47 84 0.004368971 ubox
47 90 0.008587827 ubox
47 92 0.009355390 ubox
48 60 0.003418782 ubox
48 61 0.023816356 ubox
48 67 0.006062896 ubox
48 68 0.005515514 ubox
48 80 0.003207761 ubox
48 81 0.998104922 ubox
48 83 0.005577718 ubox
48 89 0.008790339 ubox
49 59 0.003551892 ubox
49 60 0.023786246 ubox
49 66 0.006038603 ubox
50 59 0.023360644 ubox
50 67 0.005098291 ubox
50 77 0.012960018 ubox
50 80 0.994580095 ubox
50 81 0.004271806 ubox
50 88 0.009090616 ubox
51 78 0.028634351 ubox
51 79 0.986403782 ubox
51 87 0.008869495 ubox
52 58 0.003632920 ubox
52 66 0.004426255 ubox
52 76 0.003547191 ubox
53 57 0.003435477 ubox
53 65 0.003777100 ubox
53 78 0.257536350 ubox
53 79 0.004601097 ubox
53 84 0.010324256 ubox
54 76 0.938184901 ubox
54 77 0.288119220 ubox
54 83 0.010566016 ubox
54 97 0.004464803 ubox
55 63 0.010985991 ubox
55 75 0.998631166 ubox
55 82 0.010553071 ubox
55 96 0.004458829 ubox
56 62 0.010987809 ubox
56 74 0.998246712 ubox
56 76 0.003936654 ubox
56 98 0.012362958 ubox
57 61 0.010749398 ubox
57 72 0.062764892 ubox
57 73 0.993366442 ubox
57 74 0.007896011 ubox
57 80 0.010526004 ubox
57 97 0.012988710 ubox
58 71 0.071776192 ubox
58 79 0.010528284 ubox
58 96 0.012480013 ubox
59 70 0.058000729 ubox
59 71 0.309187523 ubox
59 78 0.010428367 ubox
59 95 0.011101599 ubox
60 69 0.051990562 ubox
60 70 0.252209658 ubox
60 71 0.927960627 ubox
60 94 0.010532011 ubox
60 95 0.003748771 ubox
60 96 0.004947115 ubox
61 69 0.251369229 ubox
61 70 0.964286489 ubox
61 94 0.004519281 ubox
61 95 0.007708424 ubox
61 96 0.005600167 ubox
62 69 0.963247732 ubox
62 94 0.007394677 ubox
62 95 0.005685273 ubox
63 67 0.077362891 ubox
63 68 0.960017438 ubox
64 93 0.003612902 ubox
65 93 0.033307633 ubox
66 92 0.034312182 ubox
67 91 0.035557521 ubox
68 90 0.035562142 ubox
69 89 0.035562054 ubox
70 88 0.035538976 ubox
72 85 0.005303145 ubox
73 84 0.005265484 ubox
73 85 0.035018552 ubox
74 84 0.035045614 ubox
75 83 0.035284210 ubox
75 97 0.026573356 ubox
76 82 0.032803866 ubox
76 96 0.026786746 ubox
77 82 0.010574601 ubox
77 95 0.027576703 ubox
79 93 0.027547932 ubox
80 92 0.027592702 ubox
80 95 0.005610314 ubox
81 91 0.027542559 ubox
81 94 0.005646679 ubox
82 93 0.005646942 ubox
83 90 0.026684010 ubox
83 92 0.005643381 ubox
84 89 0.026411564 ubox
86 98 0.005531397 ubox
87 98 0.010116784 ubox
88 95 0.046616572 ubox
88 96 0.060398389 ubox
89 94 0.046664835 ubox
89 95 0.060635993 ubox
89 96 0.003951148 ubox
90 97 0.005646858 ubox
90 98 0.009966683 ubox
91 97 0.010511397 ubox
91 98 0.005985798 ubox
92 97 0.008477712 ubox
93 99 0.004612745 ubox
93 100 0.005310712 ubox
94 98 0.007199954 ubox
1 30 0.9500000 lbox
2 29 0.9500000 lbox
3 28 0.9500000 lbox
5 26 0.9500000 lbox
6 25 0.9500000 lbox
7 24 0.9500000 lbox
36 93 0.9500000 lbox
37 92 0.9500000 lbox
38 91 0.9500000 lbox
39 90 0.9500000 lbox
43 86 0.9500000 lbox
44 85 0.9500000 lbox
45 84 0.9500000 lbox
47 82 0.9500000 lbox
48 81 0.9500000 lbox
50 80 0.9500000 lbox
51 79 0.9500000 lbox
54 76 0.9500000 lbox
55 75 0.9500000 lbox
56 74 0.9500000 lbox
57 73 0.9500000 lbox
60 71 0.9500000 lbox
61 70 0.9500000 lbox
62 69 0.9500000 lbox
63 68 0.9500000 lbox
showpage
end
%%EOF
