%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 17:21:25 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  % draw strand separators if required
  currentdict /nicks known {
    gsave
    % draw lines in red color
    0 1 1 sethsbcolor
    % draw with line thickness of 0.2
    0.2 setlinewidth
    nicks
    { 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
    } forall
    grestore
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (rnafold_cmd_test_0047)
} def

/sequence { (\
CAGACUCCCUUGUAACCCCUUGCUACUCUUUCGCCGAGGGCUACCCGGCAAACUUGGCUCGGAAGCUUAUCGAAAAAACGAAAAUAAGCGUCUUUAGCCA\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
[ (Protein binding)
  [ 16 0.541514218 0.6000 0.8000 0.9500]
  [ 17 0.765815616 0.6000 0.8000 0.9500]
  [ 18 0.765815616 0.6000 0.8000 0.9500]
  [ 19 0.541512609 0.6000 0.8000 0.9500]
  [ 44 0.087642714 0.6000 0.8000 0.9500]
  [ 45 0.087642714 0.6000 0.8000 0.9500]
  [ 46 0.087642714 0.6000 0.8000 0.9500]
  [ 50 0.999800503 0.6000 0.8000 0.9500]
  [ 51 0.999800503 0.6000 0.8000 0.9500]
  [ 52 0.999800503 0.6000 0.8000 0.9500]
  [ 73 0.999550819 0.6000 0.8000 0.9500]
  [ 74 0.999700546 0.6000 0.8000 0.9500]
  [ 75 0.999850273 0.6000 0.8000 0.9500]
  [ 76 0.999850273 0.6000 0.8000 0.9500]
  [ 77 0.999700546 0.6000 0.8000 0.9500]
  [ 78 0.999550819 0.6000 0.8000 0.9500]
  [ 81 0.499052256 0.6000 0.8000 0.9500]
  [ 82 0.999851584 0.6000 0.8000 0.9500]
  [ 83 0.999851584 0.6000 0.8000 0.9500]
  [ 84 0.866400599 0.6000 0.8000 0.9500]
]
] def

/leftData [
[ (Protein binding)
  [ 16 0.541514218 0.6000 0.8000 0.9500]
  [ 17 0.765815616 0.6000 0.8000 0.9500]
  [ 18 0.765815616 0.6000 0.8000 0.9500]
  [ 19 0.541512609 0.6000 0.8000 0.9500]
  [ 44 0.087642714 0.6000 0.8000 0.9500]
  [ 45 0.087642714 0.6000 0.8000 0.9500]
  [ 46 0.087642714 0.6000 0.8000 0.9500]
  [ 50 0.999800503 0.6000 0.8000 0.9500]
  [ 51 0.999800503 0.6000 0.8000 0.9500]
  [ 52 0.999800503 0.6000 0.8000 0.9500]
  [ 73 0.999550819 0.6000 0.8000 0.9500]
  [ 74 0.999700546 0.6000 0.8000 0.9500]
  [ 75 0.999850273 0.6000 0.8000 0.9500]
  [ 76 0.999850273 0.6000 0.8000 0.9500]
  [ 77 0.999700546 0.6000 0.8000 0.9500]
  [ 78 0.999550819 0.6000 0.8000 0.9500]
  [ 81 0.499052256 0.6000 0.8000 0.9500]
  [ 82 0.999851584 0.6000 0.8000 0.9500]
  [ 83 0.999851584 0.6000 0.8000 0.9500]
  [ 84 0.866400599 0.6000 0.8000 0.9500]
]
] def

/bottomData [
[ (Protein binding)
  [ 16 0.541514218 0.6000 0.8000 0.9500]
  [ 17 0.765815616 0.6000 0.8000 0.9500]
  [ 18 0.765815616 0.6000 0.8000 0.9500]
  [ 19 0.541512609 0.6000 0.8000 0.9500]
  [ 44 0.087642714 0.6000 0.8000 0.9500]
  [ 45 0.087642714 0.6000 0.8000 0.9500]
  [ 46 0.087642714 0.6000 0.8000 0.9500]
  [ 50 0.999800503 0.6000 0.8000 0.9500]
  [ 51 0.999800503 0.6000 0.8000 0.9500]
  [ 52 0.999800503 0.6000 0.8000 0.9500]
  [ 73 0.999550819 0.6000 0.8000 0.9500]
  [ 74 0.999700546 0.6000 0.8000 0.9500]
  [ 75 0.999850273 0.6000 0.8000 0.9500]
  [ 76 0.999850273 0.6000 0.8000 0.9500]
  [ 77 0.999700546 0.6000 0.8000 0.9500]
  [ 78 0.999550819 0.6000 0.8000 0.9500]
  [ 81 0.499052256 0.6000 0.8000 0.9500]
  [ 82 0.999851584 0.6000 0.8000 0.9500]
  [ 83 0.999851584 0.6000 0.8000 0.9500]
  [ 84 0.866400599 0.6000 0.8000 0.9500]
]
] def

/rightData [
[ (Protein binding)
  [ 16 0.541514218 0.6000 0.8000 0.9500]
  [ 17 0.765815616 0.6000 0.8000 0.9500]
  [ 18 0.765815616 0.6000 0.8000 0.9500]
  [ 19 0.541512609 0.6000 0.8000 0.9500]
  [ 44 0.087642714 0.6000 0.8000 0.9500]
  [ 45 0.087642714 0.6000 0.8000 0.9500]
  [ 46 0.087642714 0.6000 0.8000 0.9500]
  [ 50 0.999800503 0.6000 0.8000 0.9500]
  [ 51 0.999800503 0.6000 0.8000 0.9500]
  [ 52 0.999800503 0.6000 0.8000 0.9500]
  [ 73 0.999550819 0.6000 0.8000 0.9500]
  [ 74 0.999700546 0.6000 0.8000 0.9500]
  [ 75 0.999850273 0.6000 0.8000 0.9500]
  [ 76 0.999850273 0.6000 0.8000 0.9500]
  [ 77 0.999700546 0.6000 0.8000 0.9500]
  [ 78 0.999550819 0.6000 0.8000 0.9500]
  [ 81 0.499052256 0.6000 0.8000 0.9500]
  [ 82 0.999851584 0.6000 0.8000 0.9500]
  [ 83 0.999851584 0.6000 0.8000 0.9500]
  [ 84 0.866400599 0.6000 0.8000 0.9500]
]
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 12 0.767287376 ubox
1 22 0.641274379 ubox
1 33 0.006058614 ubox
2 10 0.474809534 ubox
2 11 0.602759570 ubox
2 20 0.047524637 ubox
2 21 0.639484926 ubox
2 29 0.005406270 ubox
3 7 0.036645962 ubox
3 8 0.145346072 ubox
3 9 0.671255447 ubox
3 10 0.342788240 ubox
3 16 0.005945964 ubox
3 17 0.010215080 ubox
3 18 0.013168337 ubox
3 19 0.067064820 ubox
3 20 0.636074513 ubox
3 28 0.005427819 ubox
4 11 0.003543054 ubox
4 13 0.025172210 ubox
4 27 0.005181209 ubox
5 12 0.028102741 ubox
6 15 0.008053439 ubox
7 12 0.008767514 ubox
8 12 0.004958254 ubox
9 22 0.003240464 ubox
20 25 0.019764266 ubox
20 43 0.013115685 ubox
21 25 0.007465967 ubox
21 43 0.009152042 ubox
22 26 0.025202336 ubox
22 27 0.009520011 ubox
22 28 0.029640531 ubox
22 29 0.011196504 ubox
22 30 0.006887586 ubox
22 31 0.010348498 ubox
22 32 0.023890771 ubox
22 41 0.079429729 ubox
22 49 0.004114023 ubox
22 53 0.005406281 ubox
22 58 0.009650831 ubox
23 33 0.003477223 ubox
23 40 0.079645027 ubox
23 48 0.004032770 ubox
23 57 0.009689305 ubox
24 39 0.071856296 ubox
24 43 0.008917277 ubox
24 47 0.003684529 ubox
24 56 0.009642284 ubox
25 29 0.012103517 ubox
25 30 0.013582279 ubox
25 31 0.011688241 ubox
25 42 0.009533295 ubox
25 54 0.004722602 ubox
25 55 0.010595558 ubox
26 33 0.004412278 ubox
26 38 0.079352590 ubox
26 40 0.024093760 ubox
26 56 0.005643473 ubox
27 37 0.079991672 ubox
27 39 0.024310122 ubox
27 40 0.004521290 ubox
28 36 0.079944485 ubox
28 38 0.024834034 ubox
28 39 0.006163774 ubox
28 40 0.005250489 ubox
29 37 0.024714898 ubox
29 38 0.006168778 ubox
29 39 0.005356078 ubox
29 52 0.006637778 ubox
30 36 0.023670816 ubox
30 37 0.006126378 ubox
30 38 0.005564853 ubox
30 51 0.007760196 ubox
30 52 0.004886862 ubox
31 36 0.005699023 ubox
31 37 0.005717911 ubox
31 43 0.003626256 ubox
31 50 0.007902765 ubox
31 51 0.005535216 ubox
32 36 0.005765779 ubox
33 41 0.025370978 ubox
33 49 0.994989778 ubox
33 58 0.005550620 ubox
34 40 0.025396529 ubox
34 48 0.996068229 ubox
34 57 0.005584178 ubox
35 39 0.025212135 ubox
35 47 0.996048062 ubox
35 56 0.005589432 ubox
36 45 0.003691442 ubox
36 46 0.994229686 ubox
36 55 0.005617960 ubox
37 54 0.005628875 ubox
38 44 0.073993671 ubox
38 45 0.991322749 ubox
38 46 0.050392432 ubox
38 53 0.005600864 ubox
39 44 0.990786908 ubox
39 45 0.056087228 ubox
39 46 0.003846338 ubox
40 44 0.055680519 ubox
40 45 0.004200296 ubox
40 49 0.006665056 ubox
41 48 0.006689795 ubox
42 47 0.006260034 ubox
47 53 0.019642209 ubox
47 54 0.013198437 ubox
48 53 0.013998724 ubox
54 100 0.033228584 ubox
55 100 0.786149303 ubox
56 99 0.999498808 ubox
57 98 0.999920037 ubox
58 97 0.999814344 ubox
59 96 0.969637249 ubox
59 97 0.003794786 ubox
61 92 0.083122500 ubox
61 93 0.936680658 ubox
61 94 0.199159800 ubox
61 95 0.057875191 ubox
62 91 0.076295071 ubox
62 92 0.983749312 ubox
62 93 0.076502736 ubox
62 94 0.054421442 ubox
62 95 0.020156826 ubox
63 91 0.929287031 ubox
63 93 0.051308905 ubox
63 94 0.021210568 ubox
64 91 0.042548658 ubox
64 93 0.020748787 ubox
65 89 0.998448390 ubox
65 92 0.009785503 ubox
66 88 0.999976784 ubox
67 86 0.008101660 ubox
67 87 0.999264834 ubox
68 86 0.997248381 ubox
69 85 0.987688543 ubox
70 80 0.004259458 ubox
70 81 0.857621815 ubox
70 84 0.483490567 ubox
71 80 0.975123757 ubox
72 79 0.960104418 ubox
1 22 0.9500000 lbox
2 21 0.9500000 lbox
3 20 0.9500000 lbox
33 49 0.9500000 lbox
34 48 0.9500000 lbox
35 47 0.9500000 lbox
36 46 0.9500000 lbox
38 45 0.9500000 lbox
39 44 0.9500000 lbox
55 100 0.9500000 lbox
56 99 0.9500000 lbox
57 98 0.9500000 lbox
58 97 0.9500000 lbox
59 96 0.9500000 lbox
61 93 0.9500000 lbox
62 92 0.9500000 lbox
63 91 0.9500000 lbox
65 89 0.9500000 lbox
66 88 0.9500000 lbox
67 87 0.9500000 lbox
68 86 0.9500000 lbox
69 85 0.9500000 lbox
70 81 0.9500000 lbox
71 80 0.9500000 lbox
72 79 0.9500000 lbox
showpage
end
%%EOF
