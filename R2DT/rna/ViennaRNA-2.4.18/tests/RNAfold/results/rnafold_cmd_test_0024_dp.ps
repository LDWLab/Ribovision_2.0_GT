%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 17:21:25 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  % draw strand separators if required
  currentdict /nicks known {
    gsave
    % draw lines in red color
    0 1 1 sethsbcolor
    % draw with line thickness of 0.2
    0.2 setlinewidth
    nicks
    { 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
    } forall
    grestore
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (rnafold_cmd_test_0024)
} def

/sequence { (\
GUCUAGAACCCCCCCGACCCAAAGAUCGAGUUAAAAUUUAUACUCGCACACAGUAGUAUCUAUAAAUACUAUCCCAUCUUGAAAAGCUUAUCGGGCCGAU\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
[ (Protein binding)
  [ 21 0.997520566 0.6000 0.8000 0.9500]
  [ 22 0.997520566 0.6000 0.8000 0.9500]
  [ 23 0.997520566 0.6000 0.8000 0.9500]
  [ 33 0.675656736 0.6000 0.8000 0.9500]
  [ 34 0.999899328 0.6000 0.8000 0.9500]
  [ 35 0.999899328 0.6000 0.8000 0.9500]
  [ 36 0.737079859 0.6000 0.8000 0.9500]
  [ 64 0.998693526 0.6000 0.8000 0.9500]
  [ 65 0.998693526 0.6000 0.8000 0.9500]
  [ 66 0.998693526 0.6000 0.8000 0.9500]
  [ 73 0.991651356 0.6000 0.8000 0.9500]
  [ 74 0.991651356 0.6000 0.8000 0.9500]
  [ 75 0.991651356 0.6000 0.8000 0.9500]
  [ 82 0.573986232 0.6000 0.8000 0.9500]
  [ 83 0.999865055 0.6000 0.8000 0.9500]
  [ 84 0.999865055 0.6000 0.8000 0.9500]
  [ 85 0.818700194 0.6000 0.8000 0.9500]
]
] def

/leftData [
[ (Protein binding)
  [ 21 0.997520566 0.6000 0.8000 0.9500]
  [ 22 0.997520566 0.6000 0.8000 0.9500]
  [ 23 0.997520566 0.6000 0.8000 0.9500]
  [ 33 0.675656736 0.6000 0.8000 0.9500]
  [ 34 0.999899328 0.6000 0.8000 0.9500]
  [ 35 0.999899328 0.6000 0.8000 0.9500]
  [ 36 0.737079859 0.6000 0.8000 0.9500]
  [ 64 0.998693526 0.6000 0.8000 0.9500]
  [ 65 0.998693526 0.6000 0.8000 0.9500]
  [ 66 0.998693526 0.6000 0.8000 0.9500]
  [ 73 0.991651356 0.6000 0.8000 0.9500]
  [ 74 0.991651356 0.6000 0.8000 0.9500]
  [ 75 0.991651356 0.6000 0.8000 0.9500]
  [ 82 0.573986232 0.6000 0.8000 0.9500]
  [ 83 0.999865055 0.6000 0.8000 0.9500]
  [ 84 0.999865055 0.6000 0.8000 0.9500]
  [ 85 0.818700194 0.6000 0.8000 0.9500]
]
] def

/bottomData [
[ (Protein binding)
  [ 21 0.997520566 0.6000 0.8000 0.9500]
  [ 22 0.997520566 0.6000 0.8000 0.9500]
  [ 23 0.997520566 0.6000 0.8000 0.9500]
  [ 33 0.675656736 0.6000 0.8000 0.9500]
  [ 34 0.999899328 0.6000 0.8000 0.9500]
  [ 35 0.999899328 0.6000 0.8000 0.9500]
  [ 36 0.737079859 0.6000 0.8000 0.9500]
  [ 64 0.998693526 0.6000 0.8000 0.9500]
  [ 65 0.998693526 0.6000 0.8000 0.9500]
  [ 66 0.998693526 0.6000 0.8000 0.9500]
  [ 73 0.991651356 0.6000 0.8000 0.9500]
  [ 74 0.991651356 0.6000 0.8000 0.9500]
  [ 75 0.991651356 0.6000 0.8000 0.9500]
  [ 82 0.573986232 0.6000 0.8000 0.9500]
  [ 83 0.999865055 0.6000 0.8000 0.9500]
  [ 84 0.999865055 0.6000 0.8000 0.9500]
  [ 85 0.818700194 0.6000 0.8000 0.9500]
]
] def

/rightData [
[ (Protein binding)
  [ 21 0.997520566 0.6000 0.8000 0.9500]
  [ 22 0.997520566 0.6000 0.8000 0.9500]
  [ 23 0.997520566 0.6000 0.8000 0.9500]
  [ 33 0.675656736 0.6000 0.8000 0.9500]
  [ 34 0.999899328 0.6000 0.8000 0.9500]
  [ 35 0.999899328 0.6000 0.8000 0.9500]
  [ 36 0.737079859 0.6000 0.8000 0.9500]
  [ 64 0.998693526 0.6000 0.8000 0.9500]
  [ 65 0.998693526 0.6000 0.8000 0.9500]
  [ 66 0.998693526 0.6000 0.8000 0.9500]
  [ 73 0.991651356 0.6000 0.8000 0.9500]
  [ 74 0.991651356 0.6000 0.8000 0.9500]
  [ 75 0.991651356 0.6000 0.8000 0.9500]
  [ 82 0.573986232 0.6000 0.8000 0.9500]
  [ 83 0.999865055 0.6000 0.8000 0.9500]
  [ 84 0.999865055 0.6000 0.8000 0.9500]
  [ 85 0.818700194 0.6000 0.8000 0.9500]
]
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 18 0.103836126 ubox
1 19 0.004758402 ubox
1 20 0.012576425 ubox
1 26 0.980162098 ubox
1 27 0.150046878 ubox
1 43 0.005133303 ubox
1 47 0.007045240 ubox
1 49 0.063014897 ubox
1 51 0.010818656 ubox
1 59 0.034558793 ubox
1 60 0.011102636 ubox
1 63 0.004579663 ubox
1 69 0.008778498 ubox
1 96 0.014017459 ubox
1 100 0.003356966 ubox
2 17 0.104705183 ubox
2 25 0.991580657 ubox
2 29 0.003287558 ubox
2 42 0.005096862 ubox
2 46 0.007006955 ubox
2 48 0.063015418 ubox
2 50 0.010776113 ubox
2 58 0.036313698 ubox
2 62 0.004559744 ubox
2 68 0.008763805 ubox
2 95 0.014079515 ubox
2 99 0.003356919 ubox
3 16 0.104708759 ubox
3 24 0.991580507 ubox
3 28 0.003455715 ubox
3 30 0.011169077 ubox
3 46 0.063558592 ubox
3 56 0.037616654 ubox
3 94 0.014078188 ubox
3 98 0.003356361 ubox
4 8 0.010232612 ubox
4 17 0.003950429 ubox
4 22 0.004462178 ubox
4 23 0.068023497 ubox
4 29 0.010383560 ubox
4 55 0.037594575 ubox
4 93 0.013113724 ubox
5 44 0.023285657 ubox
5 54 0.037116712 ubox
5 88 0.003824361 ubox
6 11 0.009534541 ubox
6 12 0.010512387 ubox
6 13 0.026435215 ubox
6 14 0.010015490 ubox
6 15 0.029890565 ubox
6 18 0.014160123 ubox
6 19 0.032288885 ubox
6 20 0.241965446 ubox
6 27 0.010899077 ubox
6 43 0.023539253 ubox
6 45 0.004863534 ubox
6 87 0.003866194 ubox
6 89 0.003439364 ubox
6 92 0.009869819 ubox
7 26 0.010535273 ubox
7 32 0.005951552 ubox
7 41 0.004284522 ubox
7 44 0.004657053 ubox
7 88 0.003482269 ubox
7 89 0.004763939 ubox
7 91 0.009618027 ubox
8 31 0.006175033 ubox
8 41 0.004276832 ubox
8 88 0.005332871 ubox
8 89 0.006349397 ubox
9 16 0.039897948 ubox
9 24 0.006647119 ubox
9 30 0.006175398 ubox
9 86 0.003375141 ubox
10 16 0.009280171 ubox
11 16 0.014260645 ubox
12 16 0.004210264 ubox
20 24 0.003461509 ubox
20 28 0.005179404 ubox
20 30 0.003695406 ubox
20 53 0.008175342 ubox
24 47 0.018369170 ubox
24 49 0.062920804 ubox
24 51 0.014239175 ubox
24 73 0.010086285 ubox
24 78 0.007755233 ubox
24 92 0.004208532 ubox
25 72 0.010069059 ubox
25 77 0.007760268 ubox
25 91 0.004207550 ubox
26 48 0.024717452 ubox
26 50 0.003782495 ubox
26 71 0.009293884 ubox
26 76 0.007477365 ubox
26 82 0.004435821 ubox
26 90 0.004013632 ubox
27 46 0.935635365 ubox
27 81 0.005112017 ubox
28 38 0.003166219 ubox
28 39 0.009167259 ubox
28 45 0.995151388 ubox
28 47 0.004218426 ubox
28 72 0.006601468 ubox
28 74 0.004043582 ubox
28 80 0.005116133 ubox
28 89 0.003964616 ubox
29 37 0.003346336 ubox
29 38 0.009615606 ubox
29 44 0.995163068 ubox
29 70 0.074311622 ubox
29 79 0.005076299 ubox
29 88 0.004029881 ubox
30 37 0.009305899 ubox
30 41 0.010908241 ubox
30 43 0.995135366 ubox
30 47 0.004853462 ubox
30 49 0.003509211 ubox
30 69 0.076698203 ubox
30 78 0.005040866 ubox
30 87 0.004037790 ubox
31 36 0.008718086 ubox
31 40 0.026937225 ubox
31 42 0.975550226 ubox
31 46 0.004693755 ubox
31 48 0.003328281 ubox
31 68 0.075677352 ubox
31 86 0.003979557 ubox
32 36 0.008995170 ubox
32 40 0.273494456 ubox
32 42 0.084922201 ubox
32 68 0.003512809 ubox
33 37 0.008689140 ubox
33 38 0.052169708 ubox
33 39 0.271796795 ubox
33 41 0.113396569 ubox
33 67 0.004149402 ubox
34 38 0.005554845 ubox
36 41 0.017260358 ubox
36 63 0.047488664 ubox
37 42 0.006269653 ubox
37 62 0.052562816 ubox
38 62 0.007268935 ubox
39 62 0.003956359 ubox
40 59 0.078006058 ubox
41 55 0.006736609 ubox
41 58 0.081576423 ubox
42 54 0.007530857 ubox
42 57 0.081942698 ubox
43 53 0.007750235 ubox
43 56 0.081982627 ubox
44 52 0.007589948 ubox
44 55 0.080858522 ubox
45 53 0.042337379 ubox
45 81 0.003166558 ubox
46 51 0.031106139 ubox
46 54 0.069497374 ubox
46 57 0.010555361 ubox
46 87 0.003711347 ubox
47 53 0.074221743 ubox
47 56 0.013150499 ubox
47 81 0.008868965 ubox
47 86 0.003747758 ubox
48 54 0.016012442 ubox
48 57 0.023926971 ubox
48 59 0.003994473 ubox
48 72 0.006829133 ubox
48 77 0.004054567 ubox
48 80 0.008549820 ubox
49 53 0.018483590 ubox
49 56 0.025096641 ubox
49 81 0.004344095 ubox
50 57 0.020750750 ubox
50 63 0.005307148 ubox
50 72 0.023084060 ubox
50 80 0.004230242 ubox
51 56 0.021733172 ubox
51 81 0.009462935 ubox
52 61 0.024527402 ubox
52 70 0.115695620 ubox
52 72 0.033203183 ubox
52 79 0.003700818 ubox
52 80 0.009356746 ubox
53 60 0.025676356 ubox
53 63 0.070154018 ubox
53 69 0.121416013 ubox
53 72 0.933275687 ubox
53 73 0.015775275 ubox
53 74 0.004304982 ubox
53 75 0.004083221 ubox
53 78 0.003768070 ubox
53 79 0.004276228 ubox
54 62 0.072080901 ubox
54 68 0.121297914 ubox
54 71 0.974078384 ubox
55 61 0.072374278 ubox
55 67 0.120045439 ubox
55 70 0.980884965 ubox
56 60 0.070859579 ubox
56 63 0.015011331 ubox
56 69 0.981838015 ubox
56 72 0.005341924 ubox
57 62 0.014522823 ubox
57 68 0.980439113 ubox
57 71 0.005564095 ubox
58 63 0.012961370 ubox
58 67 0.964810730 ubox
58 70 0.005387903 ubox
59 66 0.047980701 ubox
59 68 0.003917955 ubox
61 68 0.007411074 ubox
61 71 0.003540319 ubox
62 67 0.010129841 ubox
62 70 0.003652900 ubox
71 100 0.008013186 ubox
72 95 0.003815521 ubox
72 99 0.010794867 ubox
73 81 0.003965821 ubox
73 94 0.010512384 ubox
73 95 0.079075320 ubox
73 98 0.013868355 ubox
74 81 0.005458795 ubox
74 93 0.010501284 ubox
74 94 0.080049763 ubox
74 95 0.010392897 ubox
74 98 0.014213252 ubox
75 81 0.012881202 ubox
75 93 0.079934864 ubox
75 94 0.010463952 ubox
75 98 0.033926913 ubox
76 80 0.013247634 ubox
76 88 0.008468829 ubox
76 89 0.008980956 ubox
76 91 0.023734155 ubox
76 100 0.097578685 ubox
77 81 0.005392834 ubox
77 82 0.008572814 ubox
77 85 0.006204342 ubox
77 86 0.005446759 ubox
77 90 0.022414512 ubox
77 93 0.004774687 ubox
77 94 0.014176258 ubox
77 95 0.065852843 ubox
77 98 0.022826483 ubox
77 99 0.109355921 ubox
78 86 0.029644702 ubox
78 93 0.018829134 ubox
78 94 0.089171904 ubox
78 95 0.575235777 ubox
78 98 0.101675269 ubox
79 85 0.028962447 ubox
79 86 0.021333176 ubox
79 90 0.006713671 ubox
79 93 0.066197924 ubox
79 94 0.586806327 ubox
79 95 0.009263427 ubox
79 98 0.006113462 ubox
79 99 0.186834455 ubox
80 85 0.035659087 ubox
80 86 0.009835336 ubox
80 90 0.043769268 ubox
80 93 0.592703399 ubox
80 94 0.009462308 ubox
80 95 0.004022803 ubox
80 98 0.201725596 ubox
80 99 0.021474037 ubox
81 87 0.044166991 ubox
81 88 0.012004385 ubox
81 89 0.047368307 ubox
81 91 0.006135153 ubox
81 92 0.599837294 ubox
81 96 0.009771231 ubox
81 97 0.210335606 ubox
81 100 0.014941110 ubox
82 88 0.044684298 ubox
82 89 0.012593542 ubox
82 91 0.583556334 ubox
82 100 0.021761091 ubox
85 89 0.004662080 ubox
85 91 0.009775055 ubox
85 100 0.009101868 ubox
86 91 0.005006929 ubox
86 92 0.017511724 ubox
86 96 0.703644328 ubox
86 97 0.043988932 ubox
86 100 0.003170626 ubox
87 93 0.022312712 ubox
87 94 0.052311480 ubox
87 95 0.706053316 ubox
87 98 0.009337608 ubox
88 93 0.052531563 ubox
88 94 0.692855458 ubox
88 95 0.011126221 ubox
88 99 0.010954282 ubox
89 93 0.509910241 ubox
89 94 0.034174559 ubox
89 95 0.003988963 ubox
89 98 0.011641132 ubox
90 100 0.250412615 ubox
91 99 0.288080222 ubox
92 98 0.294986086 ubox
93 97 0.276101028 ubox
93 100 0.004943080 ubox
94 100 0.004458094 ubox
1 26 0.9500000 lbox
2 25 0.9500000 lbox
3 24 0.9500000 lbox
27 46 0.9500000 lbox
28 45 0.9500000 lbox
29 44 0.9500000 lbox
30 43 0.9500000 lbox
31 42 0.9500000 lbox
53 72 0.9500000 lbox
54 71 0.9500000 lbox
55 70 0.9500000 lbox
56 69 0.9500000 lbox
57 68 0.9500000 lbox
58 67 0.9500000 lbox
78 95 0.9500000 lbox
79 94 0.9500000 lbox
80 93 0.9500000 lbox
81 92 0.9500000 lbox
82 91 0.9500000 lbox
showpage
end
%%EOF
