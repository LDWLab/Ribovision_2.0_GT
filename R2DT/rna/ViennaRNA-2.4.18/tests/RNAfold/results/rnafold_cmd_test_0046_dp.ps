%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 17:21:25 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  % draw strand separators if required
  currentdict /nicks known {
    gsave
    % draw lines in red color
    0 1 1 sethsbcolor
    % draw with line thickness of 0.2
    0.2 setlinewidth
    nicks
    { 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
    } forall
    grestore
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (rnafold_cmd_test_0046)
} def

/sequence { (\
GCUCUGUGUAUUGCGUGGCACCCAAGAGUGCUACAAAGUAGAGGCUUGUGUACCUAACCCGUGAACUUCGUGUGCAAGAACACCGUUUACCCUACGGAAG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
[ (Protein binding)
  [ 21 0.010968029 0.6000 0.8000 0.9500]
  [ 22 0.010968029 0.6000 0.8000 0.9500]
  [ 23 0.010968029 0.6000 0.8000 0.9500]
  [ 35 0.999229491 0.6000 0.8000 0.9500]
  [ 36 0.999229491 0.6000 0.8000 0.9500]
  [ 37 0.999229491 0.6000 0.8000 0.9500]
  [ 58 0.986601710 0.6000 0.8000 0.9500]
  [ 59 0.986601710 0.6000 0.8000 0.9500]
  [ 60 0.986601710 0.6000 0.8000 0.9500]
  [ 90 0.618102014 0.6000 0.8000 0.9500]
  [ 91 0.618102014 0.6000 0.8000 0.9500]
  [ 92 0.618102014 0.6000 0.8000 0.9500]
]
] def

/leftData [
[ (Protein binding)
  [ 21 0.010968029 0.6000 0.8000 0.9500]
  [ 22 0.010968029 0.6000 0.8000 0.9500]
  [ 23 0.010968029 0.6000 0.8000 0.9500]
  [ 35 0.999229491 0.6000 0.8000 0.9500]
  [ 36 0.999229491 0.6000 0.8000 0.9500]
  [ 37 0.999229491 0.6000 0.8000 0.9500]
  [ 58 0.986601710 0.6000 0.8000 0.9500]
  [ 59 0.986601710 0.6000 0.8000 0.9500]
  [ 60 0.986601710 0.6000 0.8000 0.9500]
  [ 90 0.618102014 0.6000 0.8000 0.9500]
  [ 91 0.618102014 0.6000 0.8000 0.9500]
  [ 92 0.618102014 0.6000 0.8000 0.9500]
]
] def

/bottomData [
[ (Protein binding)
  [ 21 0.010968029 0.6000 0.8000 0.9500]
  [ 22 0.010968029 0.6000 0.8000 0.9500]
  [ 23 0.010968029 0.6000 0.8000 0.9500]
  [ 35 0.999229491 0.6000 0.8000 0.9500]
  [ 36 0.999229491 0.6000 0.8000 0.9500]
  [ 37 0.999229491 0.6000 0.8000 0.9500]
  [ 58 0.986601710 0.6000 0.8000 0.9500]
  [ 59 0.986601710 0.6000 0.8000 0.9500]
  [ 60 0.986601710 0.6000 0.8000 0.9500]
  [ 90 0.618102014 0.6000 0.8000 0.9500]
  [ 91 0.618102014 0.6000 0.8000 0.9500]
  [ 92 0.618102014 0.6000 0.8000 0.9500]
]
] def

/rightData [
[ (Protein binding)
  [ 21 0.010968029 0.6000 0.8000 0.9500]
  [ 22 0.010968029 0.6000 0.8000 0.9500]
  [ 23 0.010968029 0.6000 0.8000 0.9500]
  [ 35 0.999229491 0.6000 0.8000 0.9500]
  [ 36 0.999229491 0.6000 0.8000 0.9500]
  [ 37 0.999229491 0.6000 0.8000 0.9500]
  [ 58 0.986601710 0.6000 0.8000 0.9500]
  [ 59 0.986601710 0.6000 0.8000 0.9500]
  [ 60 0.986601710 0.6000 0.8000 0.9500]
  [ 90 0.618102014 0.6000 0.8000 0.9500]
  [ 91 0.618102014 0.6000 0.8000 0.9500]
  [ 92 0.618102014 0.6000 0.8000 0.9500]
]
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 19 0.011872001 ubox
1 29 0.999363786 ubox
1 31 0.023202489 ubox
1 34 0.005773414 ubox
1 45 0.023405935 ubox
2 18 0.011872078 ubox
2 28 0.999440245 ubox
2 30 0.020589126 ubox
2 43 0.015270299 ubox
2 44 0.017757129 ubox
3 17 0.011863778 ubox
3 27 0.999647973 ubox
3 42 0.021582873 ubox
3 43 0.009089130 ubox
4 26 0.999542609 ubox
4 41 0.022797235 ubox
5 20 0.005826106 ubox
5 24 0.351569377 ubox
5 25 0.926108966 ubox
5 40 0.022679421 ubox
6 14 0.004473281 ubox
6 19 0.008104222 ubox
6 21 0.526158704 ubox
6 22 0.115051998 ubox
6 23 0.494997601 ubox
6 34 0.004094411 ubox
6 39 0.020960197 ubox
7 13 0.003292637 ubox
7 18 0.007295549 ubox
7 20 0.529183295 ubox
7 24 0.230833379 ubox
7 25 0.007194624 ubox
7 33 0.004187559 ubox
7 38 0.013945780 ubox
8 14 0.004539751 ubox
8 19 0.522537425 ubox
8 21 0.586600475 ubox
8 22 0.173562447 ubox
8 23 0.247278947 ubox
8 32 0.003586623 ubox
8 34 0.005229248 ubox
9 17 0.012867666 ubox
9 18 0.477637361 ubox
9 20 0.568641593 ubox
9 24 0.008210078 ubox
9 33 0.005166861 ubox
11 17 0.010005064 ubox
11 18 0.011016998 ubox
11 20 0.022100981 ubox
12 17 0.004329016 ubox
12 18 0.006389298 ubox
12 20 0.007349277 ubox
13 19 0.007175786 ubox
13 21 0.007889337 ubox
13 22 0.007639842 ubox
15 21 0.005262289 ubox
15 22 0.006509180 ubox
15 34 0.011387122 ubox
16 24 0.004630141 ubox
16 33 0.012070700 ubox
17 22 0.006757061 ubox
17 23 0.005439197 ubox
17 32 0.015534746 ubox
18 22 0.004548829 ubox
18 31 0.021322022 ubox
19 30 0.021764133 ubox
20 29 0.021862848 ubox
20 51 0.003497292 ubox
21 28 0.021801832 ubox
21 50 0.003657703 ubox
22 26 0.006202104 ubox
23 48 0.004138639 ubox
24 47 0.004581683 ubox
25 46 0.004650393 ubox
25 55 0.005515290 ubox
26 45 0.004655111 ubox
26 47 0.007588006 ubox
26 54 0.005718406 ubox
27 46 0.008211182 ubox
28 45 0.008295163 ubox
28 53 0.006178229 ubox
29 44 0.008233606 ubox
29 52 0.006193971 ubox
30 34 0.014086842 ubox
30 39 0.073967474 ubox
30 45 0.218615235 ubox
30 46 0.003379874 ubox
30 49 0.014342964 ubox
30 51 0.027714195 ubox
30 53 0.015719178 ubox
30 54 0.029820562 ubox
31 38 0.076689356 ubox
31 41 0.905342996 ubox
31 43 0.026024885 ubox
31 44 0.218166774 ubox
31 48 0.014697183 ubox
31 50 0.028499383 ubox
32 37 0.004129636 ubox
32 38 0.005809022 ubox
32 40 0.909642873 ubox
32 41 0.008480572 ubox
32 42 0.027803902 ubox
32 43 0.210133823 ubox
32 50 0.027643292 ubox
32 52 0.046350910 ubox
32 56 0.007947467 ubox
32 63 0.006840382 ubox
33 39 0.909925178 ubox
33 49 0.038647973 ubox
33 51 0.048378202 ubox
33 55 0.007615068 ubox
33 62 0.008745680 ubox
34 38 0.901092487 ubox
34 41 0.180237168 ubox
34 43 0.017570063 ubox
34 44 0.003678978 ubox
34 48 0.039049825 ubox
34 50 0.048487933 ubox
34 61 0.009311282 ubox
35 47 0.015491878 ubox
35 49 0.026984155 ubox
36 46 0.011031195 ubox
36 47 0.030384585 ubox
37 46 0.032961587 ubox
38 45 0.056173750 ubox
38 47 0.009223660 ubox
38 49 0.003272120 ubox
38 51 0.003239483 ubox
38 53 0.137685004 ubox
38 54 0.007426087 ubox
38 58 0.037174630 ubox
38 59 0.006945444 ubox
38 60 0.005257698 ubox
38 90 0.004131803 ubox
38 95 0.009022841 ubox
39 43 0.003387001 ubox
39 44 0.054776562 ubox
39 48 0.007088829 ubox
39 50 0.007153592 ubox
39 52 0.138231094 ubox
39 56 0.131197138 ubox
39 57 0.041356067 ubox
39 89 0.005009574 ubox
39 94 0.009026591 ubox
40 46 0.009484124 ubox
40 47 0.007778868 ubox
40 49 0.008343102 ubox
40 51 0.137547271 ubox
40 55 0.139417818 ubox
40 88 0.005135689 ubox
40 93 0.008924801 ubox
41 45 0.009669175 ubox
41 46 0.006529712 ubox
41 47 0.003665213 ubox
41 53 0.016601401 ubox
41 54 0.139336685 ubox
41 55 0.012653171 ubox
41 58 0.003846956 ubox
41 60 0.005247900 ubox
41 69 0.004070572 ubox
41 87 0.005144866 ubox
41 92 0.008859162 ubox
42 46 0.003897827 ubox
42 47 0.009086375 ubox
42 49 0.134563841 ubox
42 51 0.013720709 ubox
42 55 0.876227914 ubox
42 68 0.004132859 ubox
42 86 0.005086700 ubox
42 88 0.006806336 ubox
42 93 0.008633036 ubox
43 47 0.004895839 ubox
43 49 0.009438744 ubox
43 51 0.010231390 ubox
43 53 0.089698482 ubox
43 54 0.903553833 ubox
43 55 0.026032136 ubox
43 59 0.018350173 ubox
43 60 0.032915182 ubox
43 67 0.004143463 ubox
43 81 0.007070855 ubox
43 84 0.007390037 ubox
43 87 0.007404006 ubox
43 91 0.008162942 ubox
43 92 0.008956496 ubox
44 49 0.009011899 ubox
44 51 0.224645977 ubox
44 53 0.900445701 ubox
44 54 0.026241331 ubox
44 58 0.018460460 ubox
44 59 0.032890245 ubox
44 62 0.003471750 ubox
44 66 0.004119442 ubox
44 83 0.007387241 ubox
44 84 0.003383264 ubox
44 86 0.007709649 ubox
44 90 0.007422192 ubox
44 91 0.008969123 ubox
45 50 0.295188417 ubox
45 61 0.003859012 ubox
45 78 0.017639917 ubox
45 85 0.007773123 ubox
45 100 0.045092729 ubox
46 50 0.023120318 ubox
46 52 0.171400336 ubox
46 56 0.008209592 ubox
46 57 0.044876205 ubox
46 77 0.017747577 ubox
46 79 0.003689879 ubox
46 97 0.004133695 ubox
46 99 0.047301870 ubox
47 52 0.029280882 ubox
47 56 0.049397692 ubox
47 57 0.008626040 ubox
47 61 0.004244795 ubox
47 76 0.017710576 ubox
47 78 0.003596338 ubox
47 96 0.005068772 ubox
47 98 0.047609579 ubox
48 53 0.017045847 ubox
48 54 0.021241864 ubox
48 55 0.045833392 ubox
48 58 0.017311257 ubox
48 59 0.003446696 ubox
48 60 0.007003175 ubox
48 66 0.003723045 ubox
48 75 0.017705967 ubox
48 83 0.009754104 ubox
48 95 0.005575506 ubox
49 56 0.014326446 ubox
49 57 0.019418089 ubox
49 65 0.003694648 ubox
49 74 0.017627492 ubox
49 76 0.005893599 ubox
49 82 0.009889814 ubox
49 94 0.005540803 ubox
49 96 0.047657024 ubox
50 54 0.014887415 ubox
50 55 0.013874998 ubox
50 58 0.011095265 ubox
50 73 0.013681432 ubox
50 75 0.006459700 ubox
50 81 0.009902943 ubox
50 93 0.005049428 ubox
50 95 0.047958850 ubox
51 56 0.005663963 ubox
51 57 0.012004410 ubox
51 63 0.003839104 ubox
51 72 0.016621046 ubox
51 74 0.006485954 ubox
51 80 0.009633582 ubox
51 94 0.047794006 ubox
51 98 0.003613184 ubox
51 99 0.004153306 ubox
52 62 0.004481288 ubox
52 71 0.017123951 ubox
52 73 0.006603108 ubox
52 93 0.045693551 ubox
53 61 0.004561404 ubox
53 70 0.017027129 ubox
53 72 0.006575653 ubox
53 78 0.006305755 ubox
53 97 0.024511289 ubox
54 63 0.003577282 ubox
54 70 0.004802423 ubox
54 78 0.004368184 ubox
54 96 0.024594107 ubox
54 97 0.012649198 ubox
54 100 0.008493969 ubox
55 77 0.004301461 ubox
55 94 0.009919729 ubox
55 96 0.012257824 ubox
55 99 0.008641856 ubox
56 67 0.004727570 ubox
56 68 0.003404038 ubox
56 93 0.010002452 ubox
57 67 0.003236710 ubox
57 73 0.009436724 ubox
57 86 0.003273703 ubox
57 93 0.005371528 ubox
58 72 0.009497525 ubox
58 74 0.003207167 ubox
58 85 0.003256165 ubox
58 96 0.004267235 ubox
58 97 0.023061251 ubox
58 100 0.004930218 ubox
59 96 0.022863308 ubox
59 97 0.111496296 ubox
60 70 0.009988029 ubox
60 72 0.003963855 ubox
60 96 0.111818693 ubox
61 66 0.009663865 ubox
61 68 0.003587799 ubox
61 69 0.014152995 ubox
61 71 0.004243179 ubox
61 75 0.008860456 ubox
61 81 0.005905913 ubox
61 83 0.031188327 ubox
61 84 0.004268280 ubox
61 88 0.005267987 ubox
61 90 0.772467072 ubox
61 91 0.031069862 ubox
61 92 0.011157567 ubox
61 95 0.103174299 ubox
62 70 0.007233670 ubox
62 74 0.008744953 ubox
62 76 0.011239957 ubox
62 80 0.005676780 ubox
62 82 0.031684215 ubox
62 85 0.004642289 ubox
62 89 0.940442902 ubox
62 94 0.096594146 ubox
63 69 0.024629463 ubox
63 73 0.004313979 ubox
63 75 0.012442017 ubox
63 81 0.031760883 ubox
63 84 0.006380789 ubox
63 87 0.009646179 ubox
63 88 0.982712811 ubox
63 90 0.008286390 ubox
63 91 0.009607572 ubox
63 92 0.020094907 ubox
63 93 0.068010010 ubox
64 68 0.021459740 ubox
64 86 0.009004274 ubox
64 87 0.987954730 ubox
64 88 0.018471535 ubox
65 71 0.007250749 ubox
65 73 0.013900644 ubox
65 86 0.988986883 ubox
65 87 0.017257456 ubox
65 88 0.007514640 ubox
66 70 0.007267149 ubox
66 72 0.015089210 ubox
66 78 0.022826396 ubox
66 85 0.987652816 ubox
66 100 0.017264163 ubox
67 77 0.022816218 ubox
67 80 0.040087206 ubox
67 85 0.014756345 ubox
67 89 0.008331717 ubox
67 98 0.016459265 ubox
67 99 0.017053677 ubox
68 76 0.022233294 ubox
68 79 0.041993122 ubox
68 82 0.004193915 ubox
68 85 0.019447799 ubox
68 97 0.017837143 ubox
68 98 0.016605022 ubox
69 74 0.016608130 ubox
69 78 0.042157926 ubox
69 85 0.081665076 ubox
69 96 0.019250420 ubox
69 97 0.015401663 ubox
70 75 0.009665281 ubox
70 81 0.037074523 ubox
70 83 0.991971571 ubox
70 84 0.086520388 ubox
70 95 0.020185323 ubox
71 77 0.004869009 ubox
71 80 0.037084719 ubox
71 82 0.993874895 ubox
71 94 0.020107487 ubox
71 96 0.010785234 ubox
72 81 0.994174050 ubox
72 83 0.079208628 ubox
72 90 0.003526082 ubox
72 92 0.003595169 ubox
72 93 0.018231108 ubox
72 95 0.012165439 ubox
73 78 0.007813523 ubox
73 79 0.035688424 ubox
73 80 0.987385461 ubox
73 82 0.079299279 ubox
73 89 0.003629849 ubox
73 94 0.012101568 ubox
74 81 0.079043600 ubox
74 88 0.003232144 ubox
74 90 0.003979948 ubox
74 91 0.011137530 ubox
74 92 0.010910205 ubox
74 93 0.010819581 ubox
77 88 0.006498295 ubox
78 87 0.006871769 ubox
78 88 0.021016075 ubox
79 86 0.006369750 ubox
79 87 0.021945383 ubox
80 86 0.022096391 ubox
81 85 0.021947144 ubox
83 97 0.035691472 ubox
84 96 0.041411914 ubox
85 95 0.041520641 ubox
86 94 0.040986238 ubox
86 100 0.003478395 ubox
87 99 0.005547271 ubox
88 98 0.006007345 ubox
88 99 0.003589275 ubox
90 96 0.004811344 ubox
90 97 0.050336506 ubox
91 96 0.074132857 ubox
91 97 0.385171628 ubox
91 100 0.022989874 ubox
92 96 0.383274792 ubox
92 97 0.217094097 ubox
92 100 0.065776666 ubox
93 97 0.010974985 ubox
93 98 0.021729265 ubox
93 99 0.067148908 ubox
93 100 0.011874879 ubox
95 100 0.090255452 ubox
1 29 0.9500000 lbox
2 28 0.9500000 lbox
3 27 0.9500000 lbox
4 26 0.9500000 lbox
5 25 0.9500000 lbox
31 41 0.9500000 lbox
32 40 0.9500000 lbox
33 39 0.9500000 lbox
34 38 0.9500000 lbox
42 55 0.9500000 lbox
43 54 0.9500000 lbox
44 53 0.9500000 lbox
61 90 0.9500000 lbox
62 89 0.9500000 lbox
63 88 0.9500000 lbox
64 87 0.9500000 lbox
65 86 0.9500000 lbox
66 85 0.9500000 lbox
70 83 0.9500000 lbox
71 82 0.9500000 lbox
72 81 0.9500000 lbox
73 80 0.9500000 lbox
showpage
end
%%EOF
