%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Jun 17 17:21:26 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  % draw strand separators if required
  currentdict /nicks known {
    gsave
    % draw lines in red color
    0 1 1 sethsbcolor
    % draw with line thickness of 0.2
    0.2 setlinewidth
    nicks
    { 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
    } forall
    grestore
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (rnafold_cmd_test_0048)
} def

/sequence { (\
GUACGUUCUAUCAGUCAGCUCUUGUCAAGUGACGCUUCACUCGCUAGAAACCCAAACCUACAACGUGCGAAUGACAUUACAUUCUCGUCGCACAACAGCC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
[ (Protein binding)
  [ 48 0.957942009 0.6000 0.8000 0.9500]
  [ 49 0.957942009 0.6000 0.8000 0.9500]
  [ 50 0.957942009 0.6000 0.8000 0.9500]
  [ 51 0.070968285 0.6000 0.8000 0.9500]
  [ 52 0.070968285 0.6000 0.8000 0.9500]
  [ 53 0.070968285 0.6000 0.8000 0.9500]
  [ 54 0.960074306 0.6000 0.8000 0.9500]
  [ 55 0.960074306 0.6000 0.8000 0.9500]
  [ 56 0.960074306 0.6000 0.8000 0.9500]
]
] def

/leftData [
[ (Protein binding)
  [ 48 0.957942009 0.6000 0.8000 0.9500]
  [ 49 0.957942009 0.6000 0.8000 0.9500]
  [ 50 0.957942009 0.6000 0.8000 0.9500]
  [ 51 0.070968285 0.6000 0.8000 0.9500]
  [ 52 0.070968285 0.6000 0.8000 0.9500]
  [ 53 0.070968285 0.6000 0.8000 0.9500]
  [ 54 0.960074306 0.6000 0.8000 0.9500]
  [ 55 0.960074306 0.6000 0.8000 0.9500]
  [ 56 0.960074306 0.6000 0.8000 0.9500]
]
] def

/bottomData [
[ (Protein binding)
  [ 48 0.957942009 0.6000 0.8000 0.9500]
  [ 49 0.957942009 0.6000 0.8000 0.9500]
  [ 50 0.957942009 0.6000 0.8000 0.9500]
  [ 51 0.070968285 0.6000 0.8000 0.9500]
  [ 52 0.070968285 0.6000 0.8000 0.9500]
  [ 53 0.070968285 0.6000 0.8000 0.9500]
  [ 54 0.960074306 0.6000 0.8000 0.9500]
  [ 55 0.960074306 0.6000 0.8000 0.9500]
  [ 56 0.960074306 0.6000 0.8000 0.9500]
]
] def

/rightData [
[ (Protein binding)
  [ 48 0.957942009 0.6000 0.8000 0.9500]
  [ 49 0.957942009 0.6000 0.8000 0.9500]
  [ 50 0.957942009 0.6000 0.8000 0.9500]
  [ 51 0.070968285 0.6000 0.8000 0.9500]
  [ 52 0.070968285 0.6000 0.8000 0.9500]
  [ 53 0.070968285 0.6000 0.8000 0.9500]
  [ 54 0.960074306 0.6000 0.8000 0.9500]
  [ 55 0.960074306 0.6000 0.8000 0.9500]
  [ 56 0.960074306 0.6000 0.8000 0.9500]
]
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 11 0.016492689 ubox
1 12 0.007946807 ubox
1 25 0.008938970 ubox
1 26 0.040973182 ubox
1 33 0.052133821 ubox
1 35 0.006017984 ubox
1 40 0.013888954 ubox
1 44 0.005837998 ubox
1 61 0.032935307 ubox
1 68 0.996911136 ubox
2 10 0.018348521 ubox
2 24 0.041934564 ubox
2 31 0.036835349 ubox
2 32 0.037007334 ubox
2 34 0.005557954 ubox
2 39 0.013875337 ubox
2 43 0.005818399 ubox
2 60 0.032936132 ubox
2 67 0.996911136 ubox
3 9 0.018356164 ubox
3 23 0.041900939 ubox
3 25 0.005256473 ubox
3 30 0.052290303 ubox
3 36 0.010398915 ubox
3 37 0.009776686 ubox
3 41 0.004254823 ubox
3 59 0.032937495 ubox
3 66 0.996911196 ubox
4 24 0.005263638 ubox
4 29 0.052258733 ubox
4 34 0.012728432 ubox
4 65 0.996870150 ubox
5 21 0.034917119 ubox
5 23 0.004829295 ubox
5 26 0.003704393 ubox
5 33 0.012797814 ubox
5 35 0.006555668 ubox
5 57 0.020070753 ubox
5 58 0.011987190 ubox
5 61 0.004453602 ubox
5 64 0.996856039 ubox
6 27 0.005071786 ubox
6 28 0.005869863 ubox
6 32 0.012213075 ubox
6 34 0.006167806 ubox
6 56 0.003333286 ubox
6 60 0.005577484 ubox
6 62 0.027411520 ubox
6 63 0.995865440 ubox
7 27 0.005663841 ubox
7 31 0.010927737 ubox
7 32 0.005021150 ubox
7 60 0.019504461 ubox
7 62 0.916003945 ubox
7 63 0.011500224 ubox
8 18 0.006705084 ubox
8 24 0.024252639 ubox
8 29 0.009787800 ubox
8 31 0.006215712 ubox
8 47 0.012595478 ubox
9 17 0.004468161 ubox
9 24 0.004047707 ubox
9 28 0.009508596 ubox
9 46 0.012236345 ubox
9 60 0.308163657 ubox
9 62 0.009011923 ubox
10 23 0.003248439 ubox
10 45 0.006260440 ubox
10 59 0.168540878 ubox
11 60 0.005454621 ubox
13 59 0.004002398 ubox
14 52 0.006738060 ubox
14 53 0.016027097 ubox
14 57 0.008917042 ubox
14 58 0.005796168 ubox
18 51 0.056024040 ubox
18 52 0.022638888 ubox
18 53 0.008771114 ubox
19 47 0.032791012 ubox
20 46 0.032723072 ubox
20 47 0.015082449 ubox
20 48 0.063691363 ubox
20 49 0.005399599 ubox
21 43 0.004074943 ubox
21 47 0.850896663 ubox
22 46 0.800062909 ubox
22 47 0.436724913 ubox
22 63 0.008808610 ubox
23 34 0.010355136 ubox
23 43 0.034177913 ubox
23 46 0.491477682 ubox
23 47 0.035486808 ubox
23 62 0.019098699 ubox
24 33 0.012233339 ubox
24 40 0.007098175 ubox
24 42 0.039074660 ubox
24 44 0.836432587 ubox
24 45 0.455954530 ubox
24 51 0.006525547 ubox
24 61 0.021476347 ubox
25 32 0.012249602 ubox
25 39 0.007090539 ubox
25 43 0.680051377 ubox
25 46 0.008510203 ubox
25 47 0.003919494 ubox
25 48 0.006221043 ubox
25 60 0.021117573 ubox
26 31 0.012236599 ubox
26 43 0.655769536 ubox
26 47 0.021715511 ubox
27 37 0.009438318 ubox
27 41 0.131577280 ubox
27 45 0.005956088 ubox
27 59 0.003807427 ubox
28 36 0.010144606 ubox
28 41 0.965249320 ubox
28 45 0.072770613 ubox
29 35 0.010178319 ubox
29 40 0.995344351 ubox
29 44 0.075320369 ubox
30 34 0.009522133 ubox
30 39 0.995306474 ubox
30 43 0.075299012 ubox
31 37 0.005546334 ubox
31 38 0.995117637 ubox
31 42 0.075340132 ubox
32 36 0.027793363 ubox
32 37 0.896151878 ubox
32 41 0.074270770 ubox
34 38 0.005885637 ubox
34 40 0.030296021 ubox
34 44 0.038535813 ubox
35 43 0.038556132 ubox
35 47 0.006842541 ubox
36 46 0.006780048 ubox
38 43 0.003662179 ubox
38 47 0.004436039 ubox
40 47 0.005296381 ubox
41 46 0.004809444 ubox
42 47 0.010848977 ubox
58 98 0.006973514 ubox
59 97 0.006820388 ubox
61 98 0.005708527 ubox
65 93 0.078266451 ubox
66 92 0.078370507 ubox
67 91 0.078426486 ubox
68 90 0.078425043 ubox
69 75 0.004420299 ubox
69 78 0.003420426 ubox
69 80 0.004277916 ubox
69 83 0.004581666 ubox
69 84 0.980746013 ubox
69 85 0.006546311 ubox
69 86 0.030962338 ubox
69 89 0.095036070 ubox
69 91 0.017429606 ubox
69 93 0.030206332 ubox
69 96 0.005353666 ubox
70 77 0.003361972 ubox
70 78 0.005193875 ubox
70 82 0.003703405 ubox
70 83 0.981923487 ubox
70 85 0.028196624 ubox
70 88 0.069828350 ubox
71 77 0.005317072 ubox
71 78 0.003725594 ubox
71 82 0.982085669 ubox
71 83 0.003573529 ubox
71 85 0.003454786 ubox
71 88 0.075024575 ubox
72 76 0.004761742 ubox
72 79 0.005416862 ubox
72 81 0.982617763 ubox
72 87 0.099102573 ubox
72 90 0.069750056 ubox
72 92 0.004666474 ubox
72 94 0.003282082 ubox
73 78 0.006905832 ubox
73 80 0.979284049 ubox
73 83 0.003335849 ubox
73 84 0.025365363 ubox
73 86 0.100603861 ubox
73 89 0.138657159 ubox
73 91 0.005064642 ubox
73 93 0.003482514 ubox
74 78 0.085774546 ubox
74 82 0.003430373 ubox
74 83 0.025098202 ubox
74 85 0.097499722 ubox
74 88 0.138754323 ubox
75 87 0.138640400 ubox
75 90 0.004098957 ubox
76 82 0.015104902 ubox
76 83 0.075965719 ubox
76 85 0.031143279 ubox
77 81 0.014138182 ubox
79 83 0.008013204 ubox
79 85 0.008567976 ubox
79 88 0.014288176 ubox
80 87 0.015401397 ubox
84 98 0.008195907 ubox
85 90 0.006822111 ubox
85 92 0.008531321 ubox
85 94 0.014006511 ubox
85 95 0.012852546 ubox
85 97 0.019895973 ubox
85 98 0.019103444 ubox
86 90 0.009746122 ubox
86 98 0.032181982 ubox
87 91 0.021248916 ubox
87 93 0.094325909 ubox
87 96 0.158915329 ubox
87 99 0.119408907 ubox
87 100 0.054665286 ubox
88 92 0.085104998 ubox
88 94 0.008518052 ubox
88 95 0.151462261 ubox
88 97 0.010325653 ubox
88 98 0.098186650 ubox
89 98 0.092201149 ubox
90 96 0.088455409 ubox
90 99 0.821087426 ubox
90 100 0.020912749 ubox
91 98 0.822264248 ubox
93 98 0.044991116 ubox
1 68 0.9500000 lbox
2 67 0.9500000 lbox
3 66 0.9500000 lbox
4 65 0.9500000 lbox
5 64 0.9500000 lbox
6 63 0.9500000 lbox
7 62 0.9500000 lbox
21 47 0.9500000 lbox
22 46 0.9500000 lbox
24 44 0.9500000 lbox
25 43 0.9500000 lbox
28 41 0.9500000 lbox
29 40 0.9500000 lbox
30 39 0.9500000 lbox
31 38 0.9500000 lbox
32 37 0.9500000 lbox
69 84 0.9500000 lbox
70 83 0.9500000 lbox
71 82 0.9500000 lbox
72 81 0.9500000 lbox
73 80 0.9500000 lbox
90 99 0.9500000 lbox
91 98 0.9500000 lbox
showpage
end
%%EOF
