# Name of your program
package "RNApaln" # don't use package if you're using automake

purpose "RNA alignment based on sequence base pairing propensities"

#usage "RNApaln [options]\n"

# Version of your program
#version "2.0"   # don't use version if you're using automake


# command line options passed to gengetopt
args "--file-name=RNApaln_cmdl --include-getopt --default-optional --func-name=RNApaln_cmdline_parser --arg-struct-name=RNApaln_args_info"


description "Uses string-alignment techniques to perform fast pairwise structural alignments of RNAs.\
 Similar to RNApdist secondary structure is incorporated in an approximate manner by computing base pair\
 probabilities, which are then reduced to a vector holding the probability that a base is paired upstream,\
 downstream, or remains unpaired. Such pair propsensity vectors can then be compared using standard\
 alignment algorithms. In contrast to RNApdist, RNApaln performs similarity (instead of distance) alignments,\
 considers both sequence and structure information, and uses affine (rather than linear) gap costs. RNApaln\
 can perform semi-local alignments by using free end gaps, a true local alignment mode is planned.\n\nThe\
 same approach has since been used in the StraL program from Gerhard Steeger's group. Since StraL has\
 optimized parameters and a multiple alignment mode, it be be currently the better option.\n"

# Options
section "General Options"
sectiondesc="Below are command line options which alter the general behavior of this program\n"

option  "printAlignment"  B
"Print an \"alignment\" with gaps of the profiles\nThe aligned structures are written\
 to filename, if specified\nOtherwise output is written to stdout, unless the -Xm option\
 is set in which case \"backtrack.file\" is used.\n"
details="The following symbols are used:\n (  )  essentially upstream (downstream) paired bases\n
 {  }  weakly upstream (downstream) paired bases\n |    strongly paired bases without preference\n
 ,    weakly paired bases without preference\n .    essentially unpaired bases.\n\n"
string
default="stdout"
typestr="filename"
argoptional
optional

option  "noconv"  -
"Do not automatically substitude nucleotide \"T\" with \"U\"\n\n"
flag
off

section "Algorithms"
sectiondesc="Select additional algorithms which should be included in the calculations.\n"

option  "mode"    X
"Set the alignment mode to be used\n"
details="The alignment mode is passed as a single character value. The following options\
 are available:\n'p' - Compare the structures pairwise, that is first with 2nd, third\
 with 4th etc. This is the default.\n
 'm'  - Calculate the distance matrix between all structures. The output is formatted\
 as a lower triangle matrix.\n
 'f' - Compare each structure to the first one.\n
 'c' - Compare continuously, that is i-th with (i+1)th structure.\n\n"
string
typestr="pmfc"
optional


section "Model Details"

option  "gapo"  -
"Set the gap open penalty\n\n"
float
typestr="open"
optional

option  "gape"  -
"Set the gap extension penalty\n\n"
float
typestr="ext"
optional

option  "seqw"  -
"Set the weight of sequence (compared to structure) in the scoring function.\n\n"
float
typestr="w"
optional

option  "endgaps" -
"Use free end-gaps\n\n"
flag
off

option  "temp"  T
"Rescale energy parameters to a temperature of temp C. Default is 37C.\n\n"
double
optional

option  "noTetra" 4
"Do not include special tabulated stabilizing energies for tri-, tetra- and hexaloop hairpins. Mostly for testing.\n\n"
flag
off

option  "dangles" d
"How to treat \"dangling end\" energies for bases adjacent to helices in free ends and multi-loops\n"
details="\nWith -d1 only unpaired bases can participate in at most one dangling end. With -d2 this\
 check is ignored, dangling energies will be added for the bases adjacent to a helix on both sides in\
 any case; this is the default for mfe and partition function folding (-p).\nThe option -d0 ignores\
 dangling ends altogether (mostly for debugging).\nWith -d3 mfe folding will allow coaxial stacking\
 of adjacent helices in multi-loops. At the moment the implementation will not allow coaxial stacking\
 of the two interior pairs in a loop of degree 3 and works only for mfe folding.\n\nNote that with\
 -d1 and -d3 only the MFE computations will be using this setting while partition function uses\
 -d2 setting, i.e. dangling ends will be treated differently.\n\n"
int
default="2"
optional

option  "noLP"  -
"Produce structures without lonely pairs (helices of length 1).\n"
details="For partition function folding this only disallows pairs that can only occur isolated. Other\
 pairs may still occasionally occur as helices of length 1.\n\n"
flag
off

option  "noGU"  -
"Do not allow GU pairs\n\n"
flag
off

option  "noClosingGU" -
"Do not allow GU pairs at the end of helices\n\n"
flag
off

option  "paramFile" P
"Read energy parameters from paramfile, instead of using the default parameter set.\n"
details="Different sets of energy parameters for RNA and DNA should accompany your distribution.\nSee the\
 RNAlib documentation for details on the file format. When passing the placeholder file name \"DNA\",\
 DNA parameters are loaded without the need to actually specify any input file.\n\n"
string
typestr="paramfile"
optional

option  "nsp" -
"Allow other pairs in addition to the usual AU,GC,and GU pairs.\n"
details="Its argument is a comma separated list of additionally allowed pairs. If the\
 first character is a \"-\" then AB will imply that AB and BA are allowed pairs.\ne.g.\
 RNAfold -nsp -GA  will allow GA and AG pairs. Nonstandard pairs are given 0 stacking\
 energy.\n\n"
string
optional
hidden

option  "energyModel" e
"Rarely used option to fold sequences from the artificial ABCD... alphabet, where\
 A pairs B, C-D etc.  Use the energy parameters for GC (-e 1) or AU (-e 2) pairs.\n\n"
int
optional
hidden

text    "\nIf in doubt our program is right, nature is at fault.\nComments should be sent to\
 rna@tbi.univie.ac.at.\n"
