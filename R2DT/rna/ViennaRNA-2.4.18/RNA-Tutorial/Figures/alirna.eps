%!PS-Adobe-3.0 EPSF-3.0
%%Creator: PS_dot.c,v 1.38 2007/02/02 15:18:13 ivo Exp $, ViennaRNA-2.1.9
%%CreationDate: Tue Sep 22 14:54:07 2015
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 66 210 518 662
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

%Options: -d2 
% to switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

%%BeginProlog
/RNAplot 100 dict def
RNAplot begin
/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall}        % draw outline of 2nd sequence
  {coor {aload pop lineto} forall}   % draw outline as a whole
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def

/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  72 216 translate
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  72 6 mul size div dup scale
  size xmin sub xmax sub 2 div size ymin sub ymax sub 2 div
  translate
} bind def
end
RNAplot begin
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def
end

%%EndProlog
RNAplot begin
% data start here
/sequence (\
__GCCGAUGUAGCUCAGUUGGG_AGAGCGCCAGACUGAAAAUCAGAAGGUCCCGUGUUCAAUCCACGGAUCCGGCA__\
) def
/coor [
[101.14391327 251.93516541]
[100.68258667 236.13760376]
[111.58756256 224.69833374]
[110.99121094 209.71018982]
[110.39486694 194.72204590]
[109.79851532 179.73390198]
[109.20217133 164.74577332]
[108.60581970 149.75762939]
[108.00947571 134.76948547]
[90.09265900 132.45346069]
[76.49092102 121.98024750]
[70.35934448 106.91204834]
[55.36230850 106.61381531]
[40.36527634 106.31558228]
[25.36824036 106.01734924]
[16.85676193 118.88429260]
[2.73085332 125.08609009]
[-12.50195980 122.64376068]
[-23.98094177 112.33664703]
[-28.04319191 97.45372009]
[-23.39245987 82.74405670]
[-11.51277828 72.90145874]
[3.80508995 71.06666565]
[17.67326927 77.82514954]
[25.66647339 91.02030945]
[40.66350937 91.31854248]
[55.66054153 91.61677551]
[70.65757751 91.91500854]
[77.43578339 79.57450867]
[89.04258728 71.60493469]
[87.25731659 56.71155167]
[85.47203827 41.81816864]
[83.68676758 26.92478943]
[81.90149689 12.03140736]
[68.71312714 3.62896872]
[64.06056213 -11.30045414]
[70.14060211 -25.70764542]
[84.08243561 -32.78996658]
[99.30315399 -29.20336723]
[108.61600494 -16.64132500]
[107.62374115 -1.03525484]
[96.79487610 10.24613476]
[98.58014679 25.13951492]
[100.36541748 40.03289795]
[102.15069580 54.92627716]
[103.93596649 69.81965637]
[112.50677490 71.29646301]
[120.53965759 75.22238159]
[127.33219910 81.40476990]
[132.25007629 89.44937134]
[134.78482056 98.78408051]
[134.60336304 108.69918060]
[149.57669067 109.59341431]
[164.55000305 110.48764038]
[179.52333069 111.38186646]
[194.49665833 112.27609253]
[205.11241150 100.79394531]
[220.63157654 98.87308502]
[233.72645569 107.42048645]
[238.21406555 122.40031433]
[231.97547913 136.73956299]
[217.95637512 143.66767883]
[202.77613831 139.91340637]
[193.60243225 127.24941254]
[178.62910461 126.35518646]
[163.65577698 125.46096039]
[148.68246460 124.56673431]
[133.70913696 123.67250824]
[122.99761200 134.17314148]
[123.59396362 149.16127014]
[124.19030762 164.14941406]
[124.78665924 179.13755798]
[125.38300323 194.12570190]
[125.97935486 209.11384583]
[126.57569885 224.10198975]
[138.35505676 234.63870239]
[139.15029907 250.42295837]
[128.48963928 262.09027100]
] def
/pairs [
[3 75]
[4 74]
[5 73]
[6 72]
[7 71]
[8 70]
[9 69]
[12 28]
[13 27]
[14 26]
[15 25]
[30 46]
[31 45]
[32 44]
[33 43]
[34 42]
[52 68]
[53 67]
[54 66]
[55 65]
[56 64]
] def

init

% Start Annotations
3 75 0.0 0.6 colorpair
4 74 0.0 0.6 colorpair
5 73 0.16 0.6 colorpair
6 72 0.32 1 colorpair
7 71 0.16 0.6 colorpair
8 70 0.16 0.2 colorpair
9 69 0.32 0.6 colorpair
12 28 0.0 1 colorpair
13 27 0.0 1 colorpair
14 26 0.0 1 colorpair
15 25 0.16 1 colorpair
30 46 0.16 1 colorpair
31 45 0.16 1 colorpair
32 44 0.16 0.6 colorpair
33 43 0.32 1 colorpair
34 42 0.0 1 colorpair
52 68 0.32 1 colorpair
53 67 0.16 0.6 colorpair
54 66 0.16 0.2 colorpair
55 65 0.16 0.2 colorpair
56 64 0.16 1 colorpair

% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% Start Annotations
3 75 1 gmark
4 74 1 gmark
5 73 1 gmark
5 cmark
73 cmark
6 cmark
72 cmark
7 71 1 gmark
7 cmark
71 cmark
8 70 2 gmark
8 cmark
70 cmark
9 69 1 gmark
9 cmark
69 cmark
15 cmark
25 cmark
30 cmark
46 cmark
31 cmark
45 cmark
32 44 1 gmark
32 cmark
44 cmark
33 cmark
43 cmark
52 cmark
68 cmark
53 67 1 gmark
53 cmark
67 cmark
54 66 2 gmark
54 cmark
66 cmark
55 65 2 gmark
55 cmark
65 cmark
56 cmark
64 cmark

% End Annotations
% show it
showpage
end
%%EOF
